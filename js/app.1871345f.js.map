{"version":3,"file":"js/app.1871345f.js","mappings":"6EAEA,MAAMA,EAAa,CCDZC,GAAG,MAAMC,MAAM,cDKhBC,EAAa,CCHVD,MAAM,cDITE,EAAa,CCPnBC,IAAA,EASYH,MAAM,cDGZ,SAAUI,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAA6BC,EAAAA,EAAAA,IAAkB,mBAC/CC,GAAyBD,EAAAA,EAAAA,IAAkB,eAC3CE,GAA6BF,EAAAA,EAAAA,IAAkB,mBAErD,OAAQG,EAAAA,EAAAA,OChBRC,EAAAA,EAAAA,IAWM,MAXNlB,EAWM,EATJmB,EAAAA,EAAAA,IAEM,MAFNhB,EAEM,EADJiB,EAAAA,EAAAA,IAAmBP,MAGrBO,EAAAA,EAAAA,IAAeL,GAEmBR,EAAAc,qBATtCC,EAAAA,EAAAA,IAAA,SDuBSL,EAAAA,EAAAA,OCdLC,EAAAA,EAAAA,IAES,SAFTd,EAES,EADPgB,EAAAA,EAAAA,IAAmBJ,ODkBzB,C,wBE1BA,MAAMhB,EAAa,CCDZE,MAAM,UDEPC,EAAa,CCDVD,MAAM,eDETE,EAAa,CCANF,MAAM,2BAA2B,cAAY,OAAOqB,UAAU,QAAQ,cAAY,MAAM,YAAU,SAASC,KAAK,MAAMC,MAAM,6BAA6BC,QAAQ,cAAcC,MAAA,yCDWtLC,EAAa,CCFV1B,MAAM,gBDGT2B,EAAa,CChBnBxB,IAAA,EAekBH,MAAM,YDKlB4B,EAAa,CCJL5B,MAAM,cDMd,SAAUI,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMmB,GAAyBjB,EAAAA,EAAAA,IAAkB,eAEjD,OAAQG,EAAAA,EAAAA,OCxBRC,EAAAA,EAAAA,IAmBM,MAnBNlB,EAmBM,EAlBJmB,EAAAA,EAAAA,IAUM,MAVNhB,EAUM,EATJiB,EAAAA,EAAAA,IAIcW,EAAA,CAJDC,GAAG,KAAK9B,MAAM,QD2BxB,CC9BT+B,SAAAC,EAAAA,EAAAA,KAIQ,IAEM,GD0BHjB,EAAAA,EAAAA,OC5BHC,EAAAA,EAAAA,IAEM,MAFNd,EAEMI,EAAA,KAAAA,EAAA,KADJW,EAAAA,EAAAA,IAAilB,QAA3kBjB,MAAM,GAAGiC,KAAK,eAAeC,EAAE,siBDgChC,MAAO,UCrCtBC,EAAA,KAQMjB,EAAAA,EAAAA,IAAuDW,EAAA,CAA1CC,GAAG,IAAI9B,MAAM,YDqCvB,CC7CT+B,SAAAC,EAAAA,EAAAA,KAQ2C,IAAI1B,EAAA,KAAAA,EAAA,KAR/C8B,EAAAA,EAAAA,IAQ2C,YAR3CD,EAAA,KASMjB,EAAAA,EAAAA,IAAiEW,EAAA,CAApDC,GAAG,WAAW9B,MAAM,YD6C9B,CCtDT+B,SAAAC,EAAAA,EAAAA,KASkD,IAAO1B,EAAA,KAAAA,EAAA,KATzD8B,EAAAA,EAAAA,IASkD,eATlDD,EAAA,KAUMjB,EAAAA,EAAAA,IAA+DW,EAAA,CAAlDC,GAAG,UAAU9B,MAAM,YDqD7B,CC/DT+B,SAAAC,EAAAA,EAAAA,KAUiD,IAAM1B,EAAA,KAAAA,EAAA,KAVvD8B,EAAAA,EAAAA,IAUiD,cAVjDD,EAAA,KAWMjB,EAAAA,EAAAA,IAAmEW,EAAA,CAAtDC,GAAG,YAAY9B,MAAM,YD6D/B,CCxET+B,SAAAC,EAAAA,EAAAA,KAWmD,IAAQ1B,EAAA,KAAAA,EAAA,KAX3D8B,EAAAA,EAAAA,IAWmD,gBAXnDD,EAAA,OAaIlB,EAAAA,EAAAA,IAMM,MANNS,EAMM,CALgBrB,EAAAgC,kBD6EftB,EAAAA,EAAAA,OC5ELC,EAAAA,EAAAA,IAGI,MAHJW,EAGI,EAFFV,EAAAA,EAAAA,IAA+C,OAA/CW,GAA+CU,EAAAA,EAAAA,IAAnBjC,EAAAkC,WAAS,IACvCrB,EAAAA,EAAAA,IAA2FW,EAAA,CAA7EW,QAAOnC,EAAAoC,OAAQX,GAAG,QAAQ9B,MAAM,0BDgFrC,CCjGf+B,SAAAC,EAAAA,EAAAA,KAiB6E,IAAM1B,EAAA,KAAAA,EAAA,KAjBnF8B,EAAAA,EAAAA,IAiB6E,cAjB7ED,EAAA,GDsGe,EAAG,CAAC,iBArBRpB,EAAAA,EAAAA,OCnEL2B,EAAAA,EAAAA,IAA+Fb,EAAA,CAdrG1B,IAAA,EAc2C2B,GAAG,QAAQ9B,MAAM,wBDuE/C,CCrFb+B,SAAAC,EAAAA,EAAAA,KAcmF,IAAI1B,EAAA,KAAAA,EAAA,KAdvF8B,EAAAA,EAAAA,IAcmF,YAdnFD,EAAA,QD0GA,C,cEtGO,MAAMQ,GAAeC,EAAAA,EAAAA,IAAY,OAAQ,CAE9CC,MAAOA,KAAA,CAELR,kBAAmBS,aAAaC,QAAQ,YAExCC,KAAMF,aAAaC,QAAQ,YAAcE,KAAKC,MAAMJ,aAAaC,QAAQ,aAAe,MAAQ,OAElGI,QAAS,CAEPC,KAAAA,CAAMC,GAEJC,KAAKjB,iBAAkB,EAEvBiB,KAAKN,KAAOK,EAEZP,aAAaS,QAAQ,WAAYN,KAAKO,UAAUH,GAClD,EAEAZ,MAAAA,GAEEa,KAAKjB,iBAAkB,EAEvBiB,KAAKN,KAAO,KAEZF,aAAaW,WAAW,WAC1B,KDFJ,OAAeC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,kBACNC,KAAAA,GACE,MAAMC,EAAYlB,KACZ,gBAAEN,EAAe,KAAEW,IAASc,EAAAA,EAAAA,IAAYD,IACxC,OAAEpB,GAAWoB,EAEnB,MAAO,CACLxB,kBACAE,UAAWS,GAAMe,OAAOC,OAAS,GACjCvB,SAEJ,I,UEjCF,MAAMwB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QCPA,MAAMnE,EAAa,CCDPE,MAAM,UDEZC,EAAa,CCDRD,MAAM,gBDGX,SAAUI,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMmB,GAAyBjB,EAAAA,EAAAA,IAAkB,eAEjD,OAAQG,EAAAA,EAAAA,OCPNC,EAAAA,EAAAA,IAUS,SAVTlB,EAUS,EATPmB,EAAAA,EAAAA,IAKM,MALNhB,EAKM,EAJJiB,EAAAA,EAAAA,IAAqEW,EAAA,CAAxDC,GAAG,QAAQ9B,MAAM,eDU7B,CCbT+B,SAAAC,EAAAA,EAAAA,KAGoD,IAAW1B,EAAA,KAAAA,EAAA,KAH/D8B,EAAAA,EAAAA,IAGoD,mBAHpDD,EAAA,KAIQjB,EAAAA,EAAAA,IAAuEW,EAAA,CAA1DC,GAAG,SAAS9B,MAAM,eDkB9B,CCtBT+B,SAAAC,EAAAA,EAAAA,KAIqD,IAAY1B,EAAA,KAAAA,EAAA,KAJjE8B,EAAAA,EAAAA,IAIqD,oBAJrDD,EAAA,KAKQjB,EAAAA,EAAAA,IAA2EW,EAAA,CAA9DC,GAAG,WAAW9B,MAAM,eD0BhC,CC/BT+B,SAAAC,EAAAA,EAAAA,KAKuD,IAAc1B,EAAA,KAAAA,EAAA,KALrE8B,EAAAA,EAAAA,IAKuD,sBALvDD,EAAA,KAMQjB,EAAAA,EAAAA,IAAuEW,EAAA,CAA1DC,GAAG,WAAW9B,MAAM,eDkChC,CCxCT+B,SAAAC,EAAAA,EAAAA,KAMuD,IAAU1B,EAAA,KAAAA,EAAA,KANjE8B,EAAAA,EAAAA,IAMuD,kBANvDD,EAAA,MD+CI7B,EAAO,KAAOA,EAAO,ICvCnBW,EAAAA,EAAAA,IAEM,OAFDjB,MAAM,oBAAkB,EAC3BiB,EAAAA,EAAAA,IAAsD,SAAnD,gDDwCH,KAER,CClCE,OAAeyC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,oBCXV,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QPYA,GAAeD,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,MACNO,WAAY,CACVC,gBAAe,EACfC,gBAAeA,GAEjBR,KAAAA,GACE,MAAMS,GAAQC,EAAAA,EAAAA,MAGRnD,GAAsBoD,EAAAA,EAAAA,KAAS,IAAqB,mBAAfF,EAAMG,OAEjD,MAAO,CACLrD,sBAEJ,IQ7BF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASf,KAEpE,QCPA,MAAMN,EAAa,CCDZC,GAAG,QDEJE,EAAa,CCHnBE,IAAA,EAG2BH,MAAM,WDI3BE,EAAa,CCATF,MAAM,iBDCV0B,EAAa,CCAR1B,MAAM,eDEX,SAAUI,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAM+D,GAA6B7D,EAAAA,EAAAA,IAAkB,mBAErD,OAAQG,EAAAA,EAAAA,OCbVC,EAAAA,EAAAA,IAAA0D,EAAAA,GAAA,OACEzD,EAAAA,EAAAA,IAiBM,MAjBNnB,EAiBM,CAfOO,EAAAsE,aDaJ5D,EAAAA,EAAAA,OCbPC,EAAAA,EAAAA,IAAuD,MAAvDf,EAAuC,gBAH3CmB,EAAAA,EAAAA,IAAA,SDkBOL,EAAAA,EAAAA,KAAW,ICZdC,EAAAA,EAAAA,IAWM0D,EAAAA,GAAA,MAjBVE,EAAAA,EAAAA,IAMyDvE,EAAAwE,eANzD,CAMuCC,EAAQC,MDa/BhE,EAAAA,EAAAA,OCbZC,EAAAA,EAAAA,IAWM,OAXDhB,MAAM,gBAA0DG,IAAK4E,GDgBnE,ECfL9D,EAAAA,EAAAA,IAAiD,KAAjDf,GAAiDoC,EAAAA,EAAAA,IAApBwC,EAAOE,OAAK,IACzC/D,EAAAA,EAAAA,IAQM,MARNS,EAQM,GDSCX,EAAAA,EAAAA,KAAW,ICfhBC,EAAAA,EAAAA,IAKE0D,EAAAA,GAAA,MAfVE,EAAAA,EAAAA,IAWyBE,EAAOG,MAAfC,KDeKnE,EAAAA,EAAAA,OChBd2B,EAAAA,EAAAA,IAKE+B,EAAA,CAHCtE,IAAK+E,EAAKnF,GACVoF,MAAOD,EACPE,qBAAsB/E,EAAAgF,oBDgBhB,KAAM,EAAG,CAAC,QAAS,4BACpB,aAGN,QCZAhF,EAAAiF,gBDeDvE,EAAAA,EAAAA,OChBP2B,EAAAA,EAAAA,IAIE+B,EAAA,CAzBJtE,IAAA,EAuBKgF,MAAO9E,EAAAiF,cACPC,oBAAqBlF,EAAAmF,mBDiBf,KAAM,EAAG,CAAC,QAAS,0BCzC9BpE,EAAAA,EAAAA,IAAA,QD2CK,GACL,C,6BE1CA,MAAMtB,ECFN,QDGMG,EAAa,CCORD,MAAM,gBDNXE,EAAa,CCWNF,MAAM,yBDVb0B,ECLN,QDOM,SAAUtB,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQK,EAAAA,EAAAA,OCPNC,EAAAA,EAAAA,IA6BM,aA3BJC,EAAAA,EAAAA,IAQM,OAPJjB,MAAM,mBACLwC,QAAKlC,EAAA,KAAAA,EAAA,GDQd,IAAImF,ICRYpF,EAAAqF,mBAAArF,EAAAqF,qBAAAD,KDST,ECNCxE,EAAAA,EAAAA,IAAoH,OAA9G0E,IAAKtF,EAAA8E,MAAMS,MAAOC,IAAI,eAAgB7F,OARpD8F,EAAAA,EAAAA,IAAA,0BAQ0FzF,EAAA0F,qBAAqB1F,EAAA8E,WDWtG,KAAM,GCnBfrF,IAUQmB,EAAAA,EAAAA,IAA4C,IAA5ChB,GAA4CqC,EAAAA,EAAAA,IAAjBjC,EAAA8E,MAAMxB,MAAI,KAI5BtD,EAAA2F,cDSRjF,EAAAA,EAAAA,OCTHC,EAAAA,EAAAA,IAeM,OA7BZb,IAAA,EAc8BH,MAAM,sBAAuBwC,QAAKlC,EAAA,KAAAA,EAAA,IAdhE2F,EAAAA,EAAAA,KD4BA,IAAIR,ICdmEpF,EAAAmF,mBAAAnF,EAAAmF,qBAAAC,IAAiB,YDe7E,ECdHxE,EAAAA,EAAAA,IAaM,MAbNf,EAaM,EAXJe,EAAAA,EAAAA,IAAyB,WAAAqB,EAAAA,EAAAA,IAAlBjC,EAAA8E,MAAMxB,MAAI,IAEjB1C,EAAAA,EAAAA,IAA0E,OAApE0E,IAAKtF,EAAA8E,MAAMS,MAAOC,IAAI,eAAe7F,MAAM,wBDiB5C,KAAM,ECpCrB0B,IAqBUT,EAAAA,EAAAA,IAA4D,UDiBxDX,EAAO,KAAOA,EAAO,ICjBtBW,EAAAA,EAAAA,IAA6B,cAArB,gBAAY,KArBjCmB,EAAAA,EAAAA,IAqB0C,KAACE,EAAAA,EAAAA,IAAGjC,EAAA8E,MAAMe,aAAW,MAErDjF,EAAAA,EAAAA,IAAkD,UDmB9CX,EAAO,KAAOA,EAAO,ICnBtBW,EAAAA,EAAAA,IAAwB,cAAhB,WAAO,KAvB5BmB,EAAAA,EAAAA,IAuBqC,KAACE,EAAAA,EAAAA,IAAGjC,EAAA8E,MAAMgB,QAAM,MAE3ClF,EAAAA,EAAAA,IAAiD,UDqB7CX,EAAO,KAAOA,EAAO,ICrBtBW,EAAAA,EAAAA,IAAwB,cAAhB,WAAO,KAzB5BmB,EAAAA,EAAAA,IAyBqC,KAACE,EAAAA,EAAAA,IAAGjC,EAAA8E,MAAMiB,OAAK,MAE1CnF,EAAAA,EAAAA,IAAsE,UAA7DuB,QAAKlC,EAAA,KAAAA,EAAA,GDyBxB,IAAImF,ICzBsBpF,EAAAmF,mBAAAnF,EAAAmF,qBAAAC,IAAmBzF,MAAM,gBAAe,eA3BlEoB,EAAAA,EAAAA,IAAA,QD2DA,C,oBCvBE,GAAesC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,kBACN0C,MAAO,CAELlB,MAAO,CACLmB,KAAMC,OACNC,UAAU,IAGd5C,KAAAA,CAAMyC,GAEJ,MAAML,GAAcS,EAAAA,EAAAA,KAAI,GAOlBf,EAAoBA,KACxBL,IACAqB,EAAmBL,EAAMlB,MAAM,EAI3BE,EAAqBA,KACzBW,EAAYjC,OAASiC,EAAYjC,KAAK,EAIlCyB,EAAoBA,KACxBQ,EAAYjC,OAAQ,CAAK,EAOrB2C,EAAsBvB,IAC1B,IAAIwB,EAAe1D,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACxE,MAAM6D,EAAaD,EAAaE,WAAWC,GAAqBA,EAAY/G,KAAOoF,EAAMpF,MAErE,IAAhB6G,EAEFD,EAAaI,KAAK,CAChBhH,GAAIoF,EAAMpF,GACV4D,KAAMwB,EAAMxB,KACZiC,MAAOT,EAAMS,QAIfe,EAAaK,OAAOJ,EAAY,GAGlC9D,aAAaS,QAAQ,iBAAkBN,KAAKO,UAAUmD,GAAc,EAShEZ,EAAwBZ,IAC5B,IAAIwB,EAAe1D,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACxE,OAAO4D,EAAaM,MAAMH,GAAqBA,EAAY/G,KAAOoF,EAAMpF,IAAG,EAG7E,MAAO,CACLiG,cACAX,qBACAG,oBACAkB,qBACAX,uBACAL,oBAEJ,ICxGJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QHyBA,MAAMwB,EAAW,+BAEjB,OAAexD,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,oBACNO,WAAY,CACViD,gBAAe,GAEjBvD,KAAAA,GACE,MAAMiB,GAAgB4B,EAAAA,EAAAA,IAAW,IAC3B9B,GAAa8B,EAAAA,EAAAA,KAAI,GACjBW,GAAgBX,EAAAA,EAAAA,KAAI,GACpBnB,GAAgBmB,EAAAA,EAAAA,IAAgB,MAChCY,GAASC,EAAAA,EAAAA,MAGTC,EAAUC,CAAAA,SAAAA,aAAAA,SAAAA,mBAAYC,qBAItBC,EAAqBC,MAAOC,EAAkB5C,KAClD,MAAM6C,EAAM,GAAGX,KAAYU,aAAoBL,0BAC/C,IACE,MAAMO,QAAiBC,MAAMF,GACvB5C,QAAa6C,EAASE,OACtBlD,EAASG,EAAKgD,QAAQC,MAAM,EAAG,GAAGC,KAAKjD,IAAS,CACpDnF,GAAImF,EAAKnF,GACT4D,KAAMuB,EAAKF,MACXY,MAAO,kCAAkCV,EAAKkD,cAC9ClC,YAAahB,EAAKmD,SAClBlC,OAAQjB,EAAKoD,aACblC,MAAOlB,EAAKqD,UAAUC,KAAK,UAE7B3D,EAAcd,MAAMgD,KAAK,CAAE/B,QAAOC,KAAMH,G,CACxC,MAAO2D,GACPC,QAAQD,MAAM,0BAA2BA,E,GAKvCE,EAAiBhB,UACrB,IAAIhD,EAAWZ,MAAf,CACAY,EAAWZ,OAAQ,EACnB,UACQ6E,QAAQC,IAAI,CAChBnB,EAAmB,gBAAiB,kBACpCA,EAAmB,kBAAmB,oBACtCA,EAAmB,iBAAkB,mBACrCA,EAAmB,sBAAuB,uB,CAE5C,MAAOe,GACPC,QAAQD,MAAM,sCAAuCA,E,CACvD,QACE9D,EAAWZ,OAAQ,C,CAZO,C,EAiBxB+E,EAAeA,KACnB1B,EAAcrD,MAAQgF,OAAOC,QAAU,GAAG,EAItCC,EAAcA,KAClBF,OAAOG,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,EAI3CC,EAAmBA,KACvBhC,EAAON,KAAK,YAAY,EAIpB1B,EAAsBH,IACtBI,EAAcvB,OAASuB,EAAcvB,MAAMhE,KAAOmF,EAAKnF,GACzDuF,EAAcvB,MAAQ,KAEtBuB,EAAcvB,MAAQmB,C,EAKpBM,EAAoBA,KACxBF,EAAcvB,MAAQ,IAAI,EAc5B,OAVAuF,EAAAA,EAAAA,KAAU,KACRX,IACAI,OAAOQ,iBAAiB,SAAUT,EAAa,KAIjDU,EAAAA,EAAAA,KAAgB,KACdT,OAAOU,oBAAoB,SAAUX,EAAa,IAG7C,CACLjE,gBACAF,aACAyC,gBACA9B,gBACA2D,cACAI,mBACAhE,qBACAG,oBAEJ,IIrIF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QCPA,MAAM1F,EAAa,CCDZC,GAAG,WDEJE,EAAa,CCHnBE,IAAA,EAS2CH,MAAM,WDF3CE,EAAa,CCMVF,MAAM,eDLT0B,GCRN,YDSMC,GCTN,QDUMC,GAAa,CCWR5B,MAAM,gBDVX0J,GAAa,CCcVjD,IAAI,uBAAuBzG,MAAM,0BDTpC,SAAUI,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQK,EAAAA,EAAAA,OChBRC,EAAAA,EAAAA,IAyBM,MAzBNlB,EAyBM,EAxBJmB,EAAAA,EAAAA,IAKM,aAHJA,EAAAA,EAAAA,IAES,UAFAuB,QAAKlC,EAAA,KAAAA,EAAA,GDkBpB,IAAImF,IClBkBpF,EAAAsJ,eAAAtJ,EAAAsJ,iBAAAlE,IAAezF,MAAM,sBAAqB,4BAKjDK,EAAAsE,aAAetE,EAAAuJ,cDkBrB7I,EAAAA,EAAAA,OClBLC,EAAAA,EAAAA,IAAuE,MAAvEf,EAAuD,gBAT3DmB,EAAAA,EAAAA,IAAA,OAWmBf,EAAAuJ,aAXnBxI,EAAAA,EAAAA,IAAA,SD8BSL,EAAAA,EAAAA,OCnBLC,EAAAA,EAAAA,IAAgF,UAXpFb,IAAA,EAWiCqC,QAAKlC,EAAA,KAAAA,EAAA,GDuBtC,IAAImF,ICvBoCpF,EAAA4I,aAAA5I,EAAA4I,eAAAxD,IAAazF,MAAM,cAAa,SAEpEiB,EAAAA,EAAAA,IAUM,MAVNf,EAUM,GDgBHa,EAAAA,EAAAA,KAAW,ICzBZC,EAAAA,EAAAA,IAQM0D,EAAAA,GAAA,MAtBZE,EAAAA,EAAAA,IAeuBvE,EAAAwJ,cAAR3E,KDyBCnE,EAAAA,EAAAA,OC1BVC,EAAAA,EAAAA,IAQM,OANHb,IAAK+E,EAAKnF,GACXC,MAAM,mBACLwC,QAAKsH,GAAEzJ,EAAAqG,mBAAmBxB,ID0BxB,ECxBHjE,EAAAA,EAAAA,IAA0H,OAApH0E,IAAKT,EAAKU,MAAOC,IAAI,eAAe7F,OApBlD8F,EAAAA,EAAAA,IAAA,CAoBwD,eAAc,mBAA6BzF,EAAA0F,qBAAqBb,OD6B3G,KAAM,GCjDnBvD,KAqBQV,EAAAA,EAAAA,IAA2C,IAA3CW,IAA2CU,EAAAA,EAAAA,IAAhB4C,EAAKvB,MAAI,ID8BjC,ECnDXjC,ODoDU,SC3BNT,EAAAA,EAAAA,IAAqE,MAArEyI,GAAqE,WD+BzE,CCvBA,MAAMxC,GAAW,+BAEjB,QAAexD,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,MACNC,KAAAA,GACE,MAAMiG,GAAepD,EAAAA,EAAAA,IAAW,IAC1BsD,GAActD,EAAAA,EAAAA,IAAI,GAClB9B,GAAa8B,EAAAA,EAAAA,KAAI,GACjBW,GAAgBX,EAAAA,EAAAA,KAAI,GACpBY,GAASC,EAAAA,EAAAA,MACT0C,GAAuBvD,EAAAA,EAAAA,IAAwB,MAG/Cc,EAAUC,CAAAA,SAAAA,aAAAA,SAAAA,mBAAYC,qBAEtBwC,EAAqBtC,MAAOuC,EAAO,KACvC,GAAIvF,EAAWZ,MAAO,OACtBY,EAAWZ,OAAQ,EAEnB,MAAM8D,EAAM,GAAGX,4BAAkCK,yBAA+B2C,IAChF,IACE,MAAMpC,QAAiBC,MAAMF,GAC7B,IAAKC,EAASqC,GAAI,MAAM,IAAIC,MAAM,+BAClC,MAAMnF,QAAa6C,EAASE,OAE5B6B,EAAa9F,MAAQ,IAChB8F,EAAa9F,SACbkB,EAAKgD,QAAQE,KAAKjD,IAAS,CAC5BnF,GAAImF,EAAKnF,GACT4D,KAAMuB,EAAKF,MACXY,MAAO,kCAAkCV,EAAKkD,mBAGlD2B,EAAYhG,OAAS,C,CACrB,MAAO0E,GACPC,QAAQD,MAAM,kCAAmCA,E,CACnD,QACE9D,EAAWZ,OAAQ,C,GAIjBsG,EAAmBC,IACvB,MAAOC,GAASD,EACZC,EAAMC,iBAAmB7F,EAAWZ,OACtCkG,EAAmBF,EAAYhG,M,EAI7BkF,EAAcA,KAClBF,OAAOG,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,EAG3CO,EAAgBA,KACpBtC,EAAON,KAAK,iBAAiB,EAGzBL,EAAsBxB,IAC1B,IAAIuF,EAAcxH,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACvE,MAAM2H,EAAYD,EAAY5D,WAAW8D,GAAoBA,EAAW5K,KAAOmF,EAAKnF,MAEjE,IAAf2K,EACFD,EAAY1D,KAAK7B,GAEjBuF,EAAYzD,OAAO0D,EAAW,GAGhC5H,aAAaS,QAAQ,iBAAkBN,KAAKO,UAAUiH,IACtDZ,EAAa9F,MAAQ,IAAI8F,EAAa9F,MAAM,EAGxCgC,EAAwBb,IAC5B,IAAIuF,EAAcxH,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACvE,OAAO0H,EAAYxD,MAAM0D,GAAoBA,EAAW5K,KAAOmF,EAAKnF,IAAG,EAiBzE,OAdAuJ,EAAAA,EAAAA,KAAU,KACRW,IAEA,MAAMW,EAAW,IAAIC,qBAAqBR,EAAiB,CACzDS,KAAM,KACNC,WAAY,MACZC,UAAW,KAGThB,EAAqBjG,OACvB6G,EAASK,QAAQjB,EAAqBjG,M,IAInC,CACL8F,eACAlF,aACAyC,gBACA6B,cACAU,gBACAjD,qBACAX,uBACAiE,uBAEJ,IC7HF,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCPA,MAAMlK,GAAa,CCDZC,GAAG,cDEJE,GAAa,CCCVD,MAAM,aDATE,GAAa,CCCRF,MAAM,kBDAX0B,GCLN,YDMMC,GAAa,CCEJ3B,MAAM,wBDDf4B,GCPN,cDQM8H,GAAa,CCIF1J,MAAM,gBDHjBkL,GAAa,CCORlL,MAAM,cDNXmL,GCVN,aDWMC,GCXN,YDYMC,GCZN,aDcM,SAAUjL,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQK,EAAAA,EAAAA,OCdRC,EAAAA,EAAAA,IA0BM,MA1BNlB,GA0BM,EAxBJmB,EAAAA,EAAAA,IAA2F,UAAlFuB,QAAKlC,EAAA,KAAAA,EAAA,GDgBlB,IAAImF,IChBgBpF,EAAAiL,iBAAAjL,EAAAiL,mBAAA7F,IAAiBzF,MAAM,sBAAqB,2BAC5DiB,EAAAA,EAAAA,IAsBM,MAtBNhB,GAsBM,EArBJgB,EAAAA,EAAAA,IAUM,MAVNf,GAUM,GDSHa,EAAAA,EAAAA,KAAW,ICjBZC,EAAAA,EAAAA,IAOM0D,EAAAA,GAAA,MAddE,EAAAA,EAAAA,IAO4BvE,EAAAkL,gBAARrG,KDkBFnE,EAAAA,EAAAA,OClBVC,EAAAA,EAAAA,IAOM,OAP+Bb,IAAK+E,EAAKnF,GAAIC,MAAM,YAAawC,QAAKsH,GAAEzJ,EAAAqG,mBAAmBxB,IDsB3F,ECrBHjE,EAAAA,EAAAA,IAKM,MALNU,GAKM,CAHwHuD,EAAKU,QDsB1H7E,EAAAA,EAAAA,OCtBPC,EAAAA,EAAAA,IAA0I,OAVtJb,IAAA,EAUkBwF,IAAKT,EAAKU,MAAQC,IAAKX,EAAKvB,KAAM3D,OAVpD8F,EAAAA,EAAAA,IAAA,CAU0D,eAAc,mBAA6BzF,EAAA0F,qBAAqBb,OD2BrG,KAAM,GCrC3BtD,MAAAR,EAAAA,EAAAA,IAAA,QAYYH,EAAAA,EAAAA,IAA+C,MAA/CyI,IAA+CpH,EAAAA,EAAAA,IAAlB4C,EAAKvB,MAAI,MD6BrC,ECzCbjC,OD0CY,SC1BNT,EAAAA,EAAAA,IASM,MATNiK,GASM,EAPJjK,EAAAA,EAAAA,IAA0F,UAAjFuB,QAAKlC,EAAA,KAAAA,EAAA,GAAAwJ,GAAEzJ,EAAAmL,SAASnL,EAAA0J,YAAc,IAAK0B,SAA0B,IAAhBpL,EAAA0J,aAAmB,WAAQ,EAlBzFoB,MDiDSpK,EAAAA,EAAAA,KAAW,IC7BZC,EAAAA,EAAAA,IAEO0D,EAAAA,GAAA,MAtBfE,EAAAA,EAAAA,IAoB6BvE,EAAAqL,cAARxB,KD8BHnJ,EAAAA,EAAAA,OC9BVC,EAAAA,EAAAA,IAEO,QAF6Bb,IAAK+J,EAAO1H,QAAKsH,GAAEzJ,EAAAmL,SAAStB,GAAQlK,OApBhF8F,EAAAA,EAAAA,IAAA,gBAAA6F,OAoBiHzB,IAAS7J,EAAA0J,iBDkC7GzH,EAAAA,EAAAA,ICjCA4H,GAAI,GArBjBkB,ODuDY,OC/BJnK,EAAAA,EAAAA,IAA+F,UAAtFuB,QAAKlC,EAAA,KAAAA,EAAA,GAAAwJ,GAAEzJ,EAAAmL,SAASnL,EAAA0J,YAAc,IAAK0B,SAAUpL,EAAA0J,cAAgB1J,EAAAuL,YAAY,OAAI,EAxB9FP,SD+DA,CCvBA,QAAe3H,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,qBACN0C,MAAO,CACLwF,MAAO,CACLvF,KAAMwF,MACNtF,UAAU,IAGd5C,KAAAA,CAAMyC,GACJ,MAAMwD,GAAepD,EAAAA,EAAAA,IAAY,IAC3BsD,GAActD,EAAAA,EAAAA,IAAI,GAClBsF,EAAe,GACfpH,GAAa8B,EAAAA,EAAAA,KAAI,GACjBY,GAASC,EAAAA,EAAAA,MAETsE,GAAarH,EAAAA,EAAAA,KAAS,IAAMyH,KAAKC,KAAKpC,EAAa9F,MAAMmI,OAASH,KAElER,GAAiBhH,EAAAA,EAAAA,KAAS,KAC9B,MAAM4H,GAASpC,EAAYhG,MAAQ,GAAKgI,EAClCK,EAAMD,EAAQJ,EACpB,OAAOlC,EAAa9F,MAAMmE,MAAMiE,EAAOC,EAAI,IAIvCV,GAAenH,EAAAA,EAAAA,KAAS,KAC5B,MAAM8H,EAAQ,GACRC,EAAkB,EAClBC,EAAQX,EAAW7H,MAEzB,IAAIyI,EAAYR,KAAKS,IAAI,EAAG1C,EAAYhG,MAAQiI,KAAKU,MAAMJ,EAAkB,IACzEK,EAAUH,EAAYF,EAAkB,EAExCK,EAAUJ,IACZI,EAAUJ,EACVC,EAAYR,KAAKS,IAAI,EAAGE,EAAUL,EAAkB,IAGtD,IAAK,IAAIM,EAAIJ,EAAWI,GAAKD,EAASC,IACpCP,EAAMtF,KAAK6F,GAGb,OAAOP,CAAK,IAIR9E,EAAUC,CAAAA,SAAAA,aAAAA,SAAAA,mBAAYC,qBAGtBwC,EAAqBtC,MAAOkF,GAAc,KAC9C,GAAIlI,EAAWZ,MAAO,OACtBY,EAAWZ,OAAQ,EAEnB,MAAMmD,EAAW,+BACjB,IACE,GAAI2F,EAEF,IAAK,IAAI3C,EAAO,EAAGA,GAAQ,EAAGA,IAAQ,CACpC,MAAMrC,EAAM,GAAGX,2BAAkCK,yBAA+B2C,IAC1EpC,QAAiBC,MAAMF,GACvB5C,QAAa6C,EAASE,OAE5B6B,EAAa9F,MAAQ,IAChB8F,EAAa9F,SACbkB,EAAKgD,QAAQE,KAAKjD,IAAS,CAC5BnF,GAAImF,EAAKnF,GACT4D,KAAMuB,EAAKF,MACXY,MAAO,kCAAkCV,EAAKkD,kB,KAI/C,CAEL,MAAMP,EAAM,GAAGX,2BAAkCK,yBAA+BwC,EAAYhG,QACtF+D,QAAiBC,MAAMF,GACvB5C,QAAa6C,EAASE,OAE5B6B,EAAa9F,MAAQ,IAChB8F,EAAa9F,SACbkB,EAAKgD,QAAQE,KAAKjD,IAAS,CAC5BnF,GAAImF,EAAKnF,GACT4D,KAAMuB,EAAKF,MACXY,MAAO,kCAAkCV,EAAKkD,kB,EAIpD,MAAOK,GACPC,QAAQD,MAAM,kCAAmCA,E,CACnD,QACE9D,EAAWZ,OAAQ,C,GAKjByH,EAAYtB,IACZA,EAAO,GAAKA,GAAQ0B,EAAW7H,QACjCgG,EAAYhG,MAAQmG,EACpBD,I,EAKE6C,EAAeA,KACf/C,EAAYhG,MAAQ,IACtBgG,EAAYhG,OAAS,EACrBkG,I,EAKE8C,EAAWA,KACXhD,EAAYhG,MAAQ6H,EAAW7H,QACjCgG,EAAYhG,OAAS,EACrBkG,I,EAKEqB,EAAkBA,KACtBjE,EAAON,KAAK,WAAW,EAInBL,EAAsBxB,IAC1B,IAAIuF,EAAcxH,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACvE,MAAM2H,EAAYD,EAAY5D,WAAW8D,GAAqBA,EAAW5K,KAAOmF,EAAKnF,MAElE,IAAf2K,EAEFD,EAAY1D,KAAK7B,GAGjBuF,EAAYzD,OAAO0D,EAAW,GAGhC5H,aAAaS,QAAQ,iBAAkBN,KAAKO,UAAUiH,IACtD/B,QAAQsE,IAAI,wBAAyBvC,GACrCZ,EAAa9F,MAAQ,IAAI8F,EAAa9F,MAAM,EAIxCgC,EAAwBb,IAC5B,IAAIuF,EAAcxH,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACvE,OAAO0H,EAAYxD,MAAM0D,GAAqBA,EAAW5K,KAAOmF,EAAKnF,IAAG,EAQ1E,OAJAuJ,EAAAA,EAAAA,KAAU,KACRW,GAAmB,EAAK,IAGnB,CACLsB,iBACAxB,cACA6B,aACAF,eACAF,WACAsB,eACAC,WACAlD,eACAyB,kBACA5E,qBACAX,uBAEJ,ICpMF,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCPA,MAAMjG,GAAa,CCFnBK,IAAA,EAC2BH,MAAM,WDK3BC,GAAa,CCJVF,GAAG,YDKNG,GAAa,CCFRF,MAAM,eDGX0B,GCRN,YDSMC,GCTN,QDUMC,GAAa,CCIN5B,MAAM,gBDFb,SAAUI,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQK,EAAAA,EAAAA,OCbVC,EAAAA,EAAAA,IAAA0D,EAAAA,GAAA,MACerE,EAAAsE,aDcN5D,EAAAA,EAAAA,OCdLC,EAAAA,EAAAA,IAAuD,MAAvDlB,GAAuC,gBAD3CsB,EAAAA,EAAAA,IAAA,QAEIH,EAAAA,EAAAA,IAeM,MAfNhB,GAeM,CAdUI,EAAA+G,gBDgBTrG,EAAAA,EAAAA,OChBLC,EAAAA,EAAAA,IAAiF,UAHvFb,IAAA,EAGoCqC,QAAKlC,EAAA,KAAAA,EAAA,GDoBzC,IAAImF,ICpBuCpF,EAAA4I,aAAA5I,EAAA4I,eAAAxD,IAAazF,MAAM,cAAa,SAH3EoB,EAAAA,EAAAA,IAAA,QAKMH,EAAAA,EAAAA,IAWM,MAXNf,GAWM,GDYHa,EAAAA,EAAAA,KAAW,ICtBZC,EAAAA,EAAAA,IASM0D,EAAAA,GAAA,MAfdE,EAAAA,EAAAA,IAOyBvE,EAAAwJ,cAAR3E,KDsBCnE,EAAAA,EAAAA,OCvBVC,EAAAA,EAAAA,IASM,OAPHb,IAAK+E,EAAKnF,GACXC,OATV8F,EAAAA,EAAAA,IAAA,CASgB,mBAAkB,mBAEIzF,EAAA0F,qBAAqBb,MADhD1C,QAAKsH,GAAEzJ,EAAAqG,mBAAmBxB,IDuBxB,ECpBHjE,EAAAA,EAAAA,IAAiE,OAA3D0E,IAAKT,EAAKU,MAAOC,IAAI,eAAe7F,MAAM,gBDyB3C,KAAM,ECtCrB2B,KAcUV,EAAAA,EAAAA,IAA2C,IAA3CW,IAA2CU,EAAAA,EAAAA,IAAhB4C,EAAKvB,MAAI,ID0BjC,GCxCbjC,ODyCY,WAGP,GACL,CCrBE,QAAegC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,wBACNC,KAAAA,GACE,MAAMiG,GAAepD,EAAAA,EAAAA,IAAW,IAE1B9B,IADc8B,EAAAA,EAAAA,IAAI,IACLA,EAAAA,EAAAA,KAAI,IACjBW,GAAgBX,EAAAA,EAAAA,KAAI,GACpBY,GAASC,EAAAA,EAAAA,MAET2C,EAAqBtC,UACzB,IAAIhD,EAAWZ,MAAf,CACAY,EAAWZ,OAAQ,EAEnB,IAEE,MAAM0G,EAAcxH,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACzE8G,EAAa9F,MAAQ,IAAI0G,E,CACzB,MAAOhC,GACPC,QAAQD,MAAM,kCAAmCA,E,CACnD,QACE9D,EAAWZ,OAAQ,C,CAVO,C,EAexB+E,EAAeA,KAEnB,MAAMmE,EACJlE,OAAOmE,YAAcnE,OAAOC,SAAWmE,SAASC,gBAAgBC,aAAe,GAC7EJ,GACFhD,IAIF7C,EAAcrD,MAAQgF,OAAOC,QAAU,GAAG,EAItCC,EAAcA,KAClBF,OAAOG,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,EAI3CkC,EAAkBA,KACtBjE,EAAON,KAAK,WAAW,EAInBL,EAAsBxB,IAC1B,IAAIuF,EAAcxH,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACvE,MAAM2H,EAAYD,EAAY5D,WAAW8D,GAAoBA,EAAW5K,KAAOmF,EAAKnF,MAEjE,IAAf2K,EAEFD,EAAY1D,KAAK7B,GAGjBuF,EAAYzD,OAAO0D,EAAW,GAGhC5H,aAAaS,QAAQ,iBAAkBN,KAAKO,UAAUiH,IACtDZ,EAAa9F,MAAQ,IAAI0G,EAAY,EAIjC1E,EAAwBb,IAC5B,IAAIuF,EAAcxH,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACvE,OAAO0H,EAAYxD,MAAM0D,GAAoBA,EAAW5K,KAAOmF,EAAKnF,IAAG,EAiBzE,OAbAuJ,EAAAA,EAAAA,KAAU,KAERW,IAEAlB,OAAOQ,iBAAiB,SAAUT,EAAa,KAIjDU,EAAAA,EAAAA,KAAgB,KAEdT,OAAOU,oBAAoB,SAAUX,EAAa,IAG7C,CACLe,eACAlF,aACAyC,gBACA6B,cACAqC,kBACA5E,qBACAX,uBAEJ,IC9GJ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCPA,MAAMjG,GAAa,CCDZE,MAAM,2BDEPC,GAAa,CCAVD,MAAM,oBDCTE,GAAa,CCOVF,MAAM,kBDNT0B,GCLN,UDMMC,GAAa,CCNnBxB,IAAA,EAuDyBH,MAAM,WD7CzB4B,GAAa,CCgDZ5B,MAAM,aD/CP0J,GAAa,CCgDV1J,MAAM,kBD/CTkL,GCZN,YDaMC,GCbN,cDcMC,GAAc,CCiDTpL,MAAM,gBDhDXqL,GAAc,CCoDX5E,IAAI,uBAAuBzG,MAAM,0BD/CpC,SAAUI,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQK,EAAAA,EAAAA,OCrBVC,EAAAA,EAAAA,IAAA0D,EAAAA,GAAA,OACEzD,EAAAA,EAAAA,IAmDM,MAnDNnB,GAmDM,EAjDJmB,EAAAA,EAAAA,IAKM,MALNhB,GAKM,EDgBFqN,EAAAA,EAAAA,KCnBFrM,EAAAA,EAAAA,IAA+F,SAAxFqF,KAAK,OALlB,sBAAAhG,EAAA,KAAAA,EAAA,GAAAwJ,GAKkCzJ,EAAAkN,YAAWzD,GAAE0D,YAAY,mBAAmBxN,MAAM,gBDwBzE,KAAM,KAAM,CACb,CAACyN,EAAAA,GCzBuBpN,EAAAkN,gBAE5BtM,EAAAA,EAAAA,IAAmE,UAA1DuB,QAAKlC,EAAA,KAAAA,EAAA,GD4BpB,IAAImF,IC5BkBpF,EAAAqN,cAAArN,EAAAqN,gBAAAjI,IAAczF,MAAM,iBAAgB,aAItDiB,EAAAA,EAAAA,IAwCM,MAxCNf,GAwCM,EAtCJe,EAAAA,EAAAA,IASQ,cDmBJX,EAAO,KAAOA,EAAO,ICzC/B8B,EAAAA,EAAAA,IAaa,cD6BHkL,EAAAA,EAAAA,KC3BFrM,EAAAA,EAAAA,IAMS,UArBjB,sBAAAX,EAAA,KAAAA,EAAA,GAAAwJ,GAeyBzJ,EAAAsN,cAAa7D,ID6BzB,CACDxJ,EAAO,KAAOA,EAAO,IC7BvBW,EAAAA,EAAAA,IAA6B,UAArB8C,MAAM,IAAG,OAAG,MD8BjBhD,EAAAA,EAAAA,KAAW,IC5BdC,EAAAA,EAAAA,IAES0D,EAAAA,GAAA,MApBnBE,EAAAA,EAAAA,IAkBkCvE,EAAAuN,QAATxH,KD6BHrF,EAAAA,EAAAA,OC7BZC,EAAAA,EAAAA,IAES,UAFwBb,IAAKiG,EAAMrG,GAAKgE,MAAOqC,EAAMrG,KDgCvDuC,EAAAA,EAAAA,IC/BF8D,EAAMzC,MAAI,EAnBzBjC,ODmDgB,OACH,KAAM,CACP,CAACmM,EAAAA,GCtCYxN,EAAAsN,oBAUnB1M,EAAAA,EAAAA,IAaQ,cDmBJX,EAAO,MAAQA,EAAO,KCzDhC8B,EAAAA,EAAAA,IAyBa,eDiCHkL,EAAAA,EAAAA,KC/BFrM,EAAAA,EAAAA,IAUS,UArCjB,sBAAAX,EAAA,KAAAA,EAAA,GAAAwJ,GA2ByBzJ,EAAAyN,oBAAmBhE,IDiC/BxJ,EAAO,KAAOA,EAAO,GAAK,EC5DvCyN,EAAAA,EAAAA,IAAA,2ZD8Dc,KAAM,CACR,CAACF,EAAAA,GCpCYxN,EAAAyN,0BAcnB7M,EAAAA,EAAAA,IAMQ,cDoBJX,EAAO,MAAQA,EAAO,KCnEhC8B,EAAAA,EAAAA,IAyCa,gBD2BHkL,EAAAA,EAAAA,KCzBFrM,EAAAA,EAAAA,IAGS,UA9CjB,sBAAAX,EAAA,KAAAA,EAAA,GAAAwJ,GA2CyBzJ,EAAA2N,OAAMlE,ID2BlBxJ,EAAO,MAAQA,EAAO,IAAM,EC1B/BW,EAAAA,EAAAA,IAA8D,UAAtD8C,MAAM,kBAAiB,0BAAsB,IACrD9C,EAAAA,EAAAA,IAAgE,UAAxD8C,MAAM,mBAAkB,2BAAuB,KD4BnD,KAAM,CACR,CAAC8J,EAAAA,GC/BYxN,EAAA2N,aAOnB/M,EAAAA,EAAAA,IAAyE,UAAhEuB,QAAKlC,EAAA,KAAAA,EAAA,GD8BpB,IAAImF,IC9BkBpF,EAAA4N,cAAA5N,EAAA4N,gBAAAxI,IAAczF,MAAM,gBAAe,qBAK5CK,EAAAsE,aD+BJ5D,EAAAA,EAAAA,OC/BPC,EAAAA,EAAAA,IAAuD,MAAvDW,GAAuC,gBAvDzCP,EAAAA,EAAAA,IAAA,QA0DEH,EAAAA,EAAAA,IAUM,MAVNW,GAUM,EATJX,EAAAA,EAAAA,IAMM,MANNyI,GAMM,GDyBD3I,EAAAA,EAAAA,KAAW,IC7BdC,EAAAA,EAAAA,IAGM0D,EAAAA,GAAA,MAhEZE,EAAAA,EAAAA,IA6D2BvE,EAAAyE,QAATK,KD8BApE,EAAAA,EAAAA,OC9BZC,EAAAA,EAAAA,IAGM,OAHwBb,IAAKgF,EAAMpF,GAAIC,MAAM,6BAA8BwC,QAAKsH,GAAEzJ,EAAAqG,mBAAmBvB,IDkCpG,ECjCLlE,EAAAA,EAAAA,IAAsK,OAAhK0E,IAAG,kCAAoCR,EAAMiD,cAAgBvC,IAAKV,EAAMH,MAAOhF,OA9D7F8F,EAAAA,EAAAA,IAAA,CA8DmG,eAAc,mBAA6BzF,EAAA0F,qBAAqBZ,ODsCpJ,KAAM,GCpGrBgG,KA+DQlK,EAAAA,EAAAA,IAA6C,IAA7CmK,IAA6C9I,EAAAA,EAAAA,IAAlB6C,EAAMH,OAAK,IDuCjC,ECtGbkG,ODuGY,SCpCRjK,EAAAA,EAAAA,IAAqE,MAArEoK,GAAqE,YAIzDhL,EAAA+G,gBDqCPrG,EAAAA,EAAAA,OCrCPC,EAAAA,EAAAA,IAAiF,UAvEnFb,IAAA,EAuEgCqC,QAAKlC,EAAA,KAAAA,EAAA,GDyCrC,IAAImF,ICzCmCpF,EAAA4I,aAAA5I,EAAA4I,eAAAxD,IAAazF,MAAM,cAAa,SAvEvEoB,EAAAA,EAAAA,IAAA,QDoHK,GACL,CCvCA,MAAM8F,GAAW,+BAEjB,QAAexD,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,sBACNC,KAAAA,GAEE,MAAMkB,GAAS2B,EAAAA,EAAAA,IAAW,IACpBmH,GAASnH,EAAAA,EAAAA,IAAW,IACpBkH,GAAgBlH,EAAAA,EAAAA,IAAY,IAC5BqH,GAAsBrH,EAAAA,EAAAA,IAAY,IAClCuH,GAASvH,EAAAA,EAAAA,IAAY,cACrB9B,GAAa8B,EAAAA,EAAAA,KAAI,GACjBsD,GAActD,EAAAA,EAAAA,IAAI,GAClBW,GAAgBX,EAAAA,EAAAA,KAAI,GACpB8G,GAAc9G,EAAAA,EAAAA,IAAY,IAC1BuD,GAAuBvD,EAAAA,EAAAA,IAAwB,MAI/CyH,EAAcvG,MAAOuC,EAAO,KAChC,GAAIvF,EAAWZ,MAAO,OACtBY,EAAWZ,OAAQ,EAEnB,MAAMwD,EAAUC,CAAAA,SAAAA,aAAAA,SAAAA,mBAAYC,qBAE5B,IAAII,EAAM,GAAGX,6BAAmCK,yBAA+B2C,IAO/E,GAJIyD,EAAc5J,QAChB8D,GAAO,gBAAgB8F,EAAc5J,SAGnC+J,EAAoB/J,MAAO,CAC7B,MAAOoK,EAAWC,GAAaN,EAAoB/J,MAAMsK,MAAM,KAC/DxG,GAAO,qBAAqBsG,sBAA8BC,G,CAG5DvG,GAAO,YAAYmG,EAAOjK,QAGtBwJ,EAAYxJ,QACd8D,EAAM,GAAGX,2BAAiCK,0BAAgCgG,EAAYxJ,cAAcmG,KAGtG,IAEE,MAAMpC,QAAiBC,MAAMF,GACvB5C,QAAa6C,EAASE,OAC5BlD,EAAOf,MAAQ,IAAIe,EAAOf,SAAUkB,EAAKgD,Q,CACzC,MAAOQ,GACPC,QAAQD,MAAM,0BAA2BA,E,CAC3C,QACE9D,EAAWZ,OAAQ,C,GAKjBuK,EAAc3G,UAClB,MAAMJ,EAAUC,CAAAA,SAAAA,aAAAA,SAAAA,mBAAYC,qBACtBI,EAAM,GAAGX,+BAAqCK,mBACpD,IACE,MAAMO,QAAiBC,MAAMF,GACvB5C,QAAa6C,EAASE,OAC5B4F,EAAO7J,MAAQkB,EAAK2I,M,CACpB,MAAOnF,GACPC,QAAQD,MAAM,0BAA2BA,E,IAK7C8F,EAAAA,EAAAA,IAAM,CAACZ,EAAeG,EAAqBE,IAAS,KAClDlJ,EAAOf,MAAQ,GACfgG,EAAYhG,MAAQ,EACpBmK,EAAYnE,EAAYhG,MAAM,IAIhC,MAAM2J,EAAeA,KAEnB,IAAIc,EAAiBvL,KAAKC,MAAMJ,aAAaC,QAAQ,kBAAoB,MACrEwK,EAAYxJ,QACVyK,EAAejB,EAAYxJ,OAC7ByK,EAAejB,EAAYxJ,SAE3ByK,EAAejB,EAAYxJ,OAAS,EAEtCjB,aAAaS,QAAQ,gBAAiBN,KAAKO,UAAUgL,KAGvD1J,EAAOf,MAAQ,GACfgG,EAAYhG,MAAQ,EACpBmK,EAAYnE,EAAYhG,MAAM,EAI1BkK,EAAeA,KACnBN,EAAc5J,MAAQ,GACtB+J,EAAoB/J,MAAQ,GAC5BiK,EAAOjK,MAAQ,aACfwJ,EAAYxJ,MAAQ,EAAE,EAIlBsG,EAAmBC,IACvB,MAAOC,GAASD,EACZC,EAAMC,iBAAmB7F,EAAWZ,QACtCgG,EAAYhG,QACZmK,EAAYnE,EAAYhG,O,EAKtB2C,EAAsBvB,IAC1B,IAAIwB,EAAe1D,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACxE,MAAM6D,EAAaD,EAAaE,WAAWC,GAAqBA,EAAY/G,KAAOoF,EAAMpF,MAErE,IAAhB6G,EAEFD,EAAaI,KAAK,CAAEhH,GAAIoF,EAAMpF,GAAI4D,KAAMwB,EAAMH,MAAOY,MAAO,kCAAkCT,EAAMiD,gBAGpGzB,EAAaK,OAAOJ,EAAY,GAGlC9D,aAAaS,QAAQ,iBAAkBN,KAAKO,UAAUmD,IACtD7B,EAAOf,MAAQ,IAAIe,EAAOf,MAAM,EAI5BgC,EAAwBZ,IAC5B,IAAIwB,EAAe1D,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,MACxE,OAAO4D,EAAaM,MAAMH,GAAqBA,EAAY/G,KAAOoF,EAAMpF,IAAG,EAIvEkJ,EAAcA,KAClBF,OAAOG,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,EAI3CN,EAAeA,KACnB1B,EAAcrD,MAAQgF,OAAOC,QAAU,GAAG,EA4B5C,OAxBAM,EAAAA,EAAAA,KAAU,KACR4E,IACAI,IAGA,MAAM1D,EAAW,IAAIC,qBAAqBR,EAAiB,CACzDS,KAAM,KACNC,WAAY,MACZC,UAAW,IAGThB,EAAqBjG,OACvB6G,EAASK,QAAQjB,EAAqBjG,OAIxCgF,OAAOQ,iBAAiB,SAAUT,EAAa,KAIjDU,EAAAA,EAAAA,KAAgB,KACdT,OAAOU,oBAAoB,SAAUX,EAAa,IAG7C,CACLhE,SACA8I,SACAD,gBACAG,sBACAE,SACArJ,aACA4I,cACAU,eACAP,eACA1D,uBACAtD,qBACAX,uBACAkD,cACA7B,gBAEJ,IChQF,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,UCRSrH,GAAG,O,2CAARiB,EAAAA,EAAAA,IAKM,MALNlB,GAKM,EAJJoB,EAAAA,EAAAA,IAGauN,EAAAA,GAAA,CAHD9K,KAAK,QAAM,CAF7B5B,SAAAC,EAAAA,EAAAA,KAIQ,IAA4H,cAA5HU,EAAAA,EAAAA,KAA4HgM,EAAAA,EAAAA,IAA5GrO,EAAAsO,kBAAgB,CAAGC,aAAavO,EAAAwO,WAAaC,eAAezO,EAAA0O,aAAeC,gBAAgB3O,EAAA4O,gB,iEAJnH9M,EAAA,K,WCEOnC,MAAM,e,IACJA,MAAM,oB,IAHfG,IAAA,EAM+BH,MAAM,S,IAG1BA,MAAM,mB,IATjBG,IAAA,EAiBgCH,MAAM,S,2CAfpCgB,EAAAA,EAAAA,IAiBM,MAjBNlB,GAiBM,EAhBJmB,EAAAA,EAAAA,IAeM,MAfNhB,GAeM,cAdJgB,EAAAA,EAAAA,IAAmC,MAA/BjB,MAAM,gBAAe,SAAK,IAEjBK,EAAA6O,YANnB9N,EAAAA,EAAAA,IAAA,SAM6B,WAAvBJ,EAAAA,EAAAA,IAAmE,OAAnEd,GAAuC,2BAN7C,SAOMe,EAAAA,EAAAA,IAA0F,SAAnFqF,KAAK,QAPlB,sBAAAhG,EAAA,KAAAA,EAAA,GAAAwJ,GAOmCzJ,EAAA2D,MAAK8F,GAAE9J,MAAM,eAAewN,YAAY,oB,iBAAxCnN,EAAA2D,UAAK,SAClC/C,EAAAA,EAAAA,IAAmG,SAA5FqF,KAAK,WARlB,sBAAAhG,EAAA,KAAAA,EAAA,GAAAwJ,GAQsCzJ,EAAA8O,SAAQrF,GAAE9J,MAAM,eAAewN,YAAY,uB,iBAA3CnN,EAAA8O,aAChClO,EAAAA,EAAAA,IAGM,MAHNS,GAGM,WADJT,EAAAA,EAAAA,IAA8C,SAAvCqF,KAAK,WAXpB,sBAAAhG,EAAA,KAAAA,EAAA,GAAAwJ,GAWwCzJ,EAAA+O,WAAUtF,I,iBAAVzJ,EAAA+O,cAAU,aAXlDhN,EAAAA,EAAAA,OAAA,aAWuDnB,EAAAA,EAAAA,IAAwB,YAAlB,eAAW,OAElEA,EAAAA,EAAAA,IAAiE,UAAxDuB,QAAKlC,EAAA,KAAAA,EAAA,OAAAmF,IAAEpF,EAAAgP,aAAAhP,EAAAgP,eAAA5J,IAAazF,MAAM,iBAAgB,UAEnDiB,EAAAA,EAAAA,IAAkF,UAAzEuB,QAAKlC,EAAA,KAAAA,EAAA,GAAAwJ,GAAEzJ,EAAAiP,MAAM,gBAAgBtP,MAAM,iBAAgB,iBAEhDK,EAAAkP,eAAY,WAAxBvO,EAAAA,EAAAA,IAAiE,OAAjEW,IAAiEW,EAAAA,EAAAA,IAAtBjC,EAAAkP,cAAY,KAjB7DnO,EAAAA,EAAAA,IAAA,U,gBA2BA,IAAesC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,kBACNC,KAAAA,GACE,MAAM4L,GAAQC,EAAAA,GAAAA,MAGRC,EAAYA,KAChBF,EAAMG,QAAQ,gBAAgB,EAGhC,MAAO,CACLH,QACAE,YAEJ,EACAzK,IAAAA,GACE,MAAO,CACLjB,MAAO,GACPmL,SAAU,GACVC,YAAY,EACZG,aAAc,GAElB,EACAK,OAAAA,GAEE,MAAMC,EAAiB5M,KAAKC,MAAMJ,aAAaC,QAAQ,mBACnD8M,IACFvM,KAAKU,MAAQ6L,EAAe7L,MAC5BV,KAAK6L,SAAWU,EAAeV,SAC/B7L,KAAK8L,YAAa,EAEtB,EACA7K,SAAU,CAER2K,UAAAA,GACE,MAAMY,EAAa,6BACnB,OAAOA,EAAWC,KAAKzM,KAAKU,MAC9B,GAEFgM,QAAS,CAEPX,WAAAA,GACE,IAAK/L,KAAK4L,WAER,YADA5L,KAAKiM,aAAe,+BAGtB,GAAIjM,KAAK6L,SAASjD,OAAS,EAEzB,YADA5I,KAAKiM,aAAe,2CAKtB,IAAIU,EAAQhN,KAAKC,MAAMJ,aAAaC,QAAQ,oBACvC+I,MAAMoE,QAAQD,KACjBA,EAAQ,IAGV,MAAME,EAAaF,EAAMhJ,MAAKjE,GAAQA,EAAKgB,QAAUV,KAAKU,OAAShB,EAAKmM,WAAa7L,KAAK6L,WAE1F,GAAIgB,EAAY,CACd,MAAMtM,EAAYlB,IAClBkB,EAAUT,MAAM,CAAEY,MAAOV,KAAKU,MAAOmL,SAAU7L,KAAK6L,WAChD7L,KAAK8L,WACPtM,aAAaS,QAAQ,iBAAkBN,KAAKO,UAAU,CAAEQ,MAAOV,KAAKU,MAAOmL,SAAU7L,KAAK6L,YAE1FrM,aAAaW,WAAW,kBAE1BH,KAAKoM,YACLpM,KAAKgM,MAAM,gBACb,MACEhM,KAAKiM,aAAe,4BAExB,KC5FJ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,UCPOvP,MAAM,e,IACJA,MAAM,oB,IAHfG,IAAA,EAO+BH,MAAM,S,IAPrCG,IAAA,EAWmCH,MAAM,S,IAC9BA,MAAM,gB,IAZjBG,IAAA,EAoBgCH,MAAM,S,2CAlBpCgB,EAAAA,EAAAA,IAoBM,MApBNlB,GAoBM,EAnBJmB,EAAAA,EAAAA,IAkBM,MAlBNhB,GAkBM,cAjBJgB,EAAAA,EAAAA,IAAqC,MAAjCjB,MAAM,gBAAe,WAAO,cAChCiB,EAAAA,EAAAA,IAA0F,SAAnFqF,KAAK,QALlB,sBAAAhG,EAAA,KAAAA,EAAA,GAAAwJ,GAKmCzJ,EAAA2D,MAAK8F,GAAE9J,MAAM,eAAewN,YAAY,oB,iBAAxCnN,EAAA2D,SAEhB3D,EAAA6O,YAPnB9N,EAAAA,EAAAA,IAAA,SAO6B,WAAvBJ,EAAAA,EAAAA,IAAmE,OAAnEd,GAAuC,2BAP7C,SAQMe,EAAAA,EAAAA,IAAmG,SAA5FqF,KAAK,WARlB,sBAAAhG,EAAA,KAAAA,EAAA,GAAAwJ,GAQsCzJ,EAAA8O,SAAQrF,GAAE9J,MAAM,eAAewN,YAAY,uB,iBAA3CnN,EAAA8O,aAAQ,SACxClO,EAAAA,EAAAA,IAA4G,SAArGqF,KAAK,WATlB,sBAAAhG,EAAA,KAAAA,EAAA,GAAAwJ,GASsCzJ,EAAA+P,gBAAetG,GAAE9J,MAAM,eAAewN,YAAY,yB,iBAAlDnN,EAAA+P,mBAEnB/P,EAAAgQ,gBAXnBjP,EAAAA,EAAAA,IAAA,SAWiC,WAA3BJ,EAAAA,EAAAA,IAAwE,OAAxEU,GAA2C,4BAC3CT,EAAAA,EAAAA,IAGM,MAHNU,GAGM,WADJV,EAAAA,EAAAA,IAAgD,SAAzCqF,KAAK,WAdpB,sBAAAhG,EAAA,KAAAA,EAAA,GAAAwJ,GAcwCzJ,EAAAiQ,aAAYxG,I,iBAAZzJ,EAAAiQ,gBAAY,aAdpDlO,EAAAA,EAAAA,OAAA,aAcyDnB,EAAAA,EAAAA,IAAgD,YAA1C,uCAAmC,OAE5FA,EAAAA,EAAAA,IAAoE,UAA3DuB,QAAKlC,EAAA,KAAAA,EAAA,OAAAmF,IAAEpF,EAAAkQ,cAAAlQ,EAAAkQ,gBAAA9K,IAAczF,MAAM,iBAAgB,YAEpDiB,EAAAA,EAAAA,IAAkF,UAAzEuB,QAAKlC,EAAA,KAAAA,EAAA,GAAAwJ,GAAEzJ,EAAAiP,MAAM,gBAAgBtP,MAAM,iBAAgB,iBAEhDK,EAAAkP,eAAY,WAAxBvO,EAAAA,EAAAA,IAAiE,OAAjEY,IAAiEU,EAAAA,EAAAA,IAAtBjC,EAAAkP,cAAY,KApB7DnO,EAAAA,EAAAA,IAAA,U,CA4BA,QAAesC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,kBACNsB,IAAAA,GACE,MAAO,CACLjB,MAAO,GACPmL,SAAU,GACViB,gBAAiB,GACjBE,cAAc,EACdf,aAAc,GAElB,EACAhL,SAAU,CAER2K,UAAAA,GACE,MAAMY,EAAa,6BACnB,OAAOA,EAAWC,KAAKzM,KAAKU,MAC9B,EAEAqM,cAAAA,GACE,OAAO/M,KAAK6L,WAAa7L,KAAK8M,eAChC,GAEFJ,QAAS,CAEPO,YAAAA,GACE,IAAKjN,KAAK4L,WAER,YADA5L,KAAKiM,aAAe,+BAGtB,GAAIjM,KAAK6L,SAASjD,OAAS,EAEzB,YADA5I,KAAKiM,aAAe,2CAGtB,IAAKjM,KAAK+M,eAER,YADA/M,KAAKiM,aAAe,2BAGtB,IAAKjM,KAAKgN,aAER,YADAhN,KAAKiM,aAAe,+CAKtB,MAAMiB,EAAkB,CACtBxM,MAAOV,KAAKU,MACZmL,SAAU7L,KAAK6L,UAEjB,IAAIc,EAAQhN,KAAKC,MAAMJ,aAAaC,QAAQ,oBACvC+I,MAAMoE,QAAQD,KACjBA,EAAQ,IAINA,EAAMhJ,MAAKjE,GAAQA,EAAKgB,QAAUV,KAAKU,QACzCV,KAAKiM,aAAe,gCAItBU,EAAMlJ,KAAKyJ,GACX1N,aAAaS,QAAQ,kBAAmBN,KAAKO,UAAUyM,IAGvD3M,KAAKgM,MAAM,kBACb,KCpFJ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UJKE,IAAe5L,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,oBACNsB,IAAAA,GACE,MAAO,CACL0J,iBAAkB,kBAEtB,EACAzK,WAAY,CACVuM,gBAAe,GACfC,gBAAeA,IAEjBV,QAAS,CAEPnB,UAAAA,GACEvL,KAAKqL,iBAA6C,oBAA1BrL,KAAKqL,iBAAyC,kBAAoB,iBAC5F,EAEAI,YAAAA,GACEzL,KAAKqN,QAAQ5J,KAAK,IACpB,EAEAkI,cAAAA,GACE3L,KAAKqL,iBAAmB,iBAC1B,KK9BN,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,UCDA,MAAMiC,GAAgC,CACpC,CACEpM,KAAM,IACNb,KAAM,OACNkN,UAAWC,GAEb,CACEtM,KAAM,WACNb,KAAM,UACNkN,UAAWE,IAEb,CACEvM,KAAM,iBACNb,KAAM,QACNkN,UAAWG,IAEb,CACExM,KAAM,YACNb,KAAM,WACNkN,UAAWI,IAEb,CACEzM,KAAM,UACNb,KAAM,SACNkN,UAAWK,IAEb,CACE1M,KAAM,QACNb,KAAM,OACNkN,UAAWM,KAIT9J,IAAS+J,EAAAA,EAAAA,IAAa,CAC1BC,SAASC,EAAAA,EAAAA,IAAqB9J,mBAC9BoJ,YAGF,U,QCvCA,MAAMW,GAAU,CACZC,SAAU,aACVC,QAAS,IACTC,cAAc,EACdC,eAAgB,gBAChBC,cAAe,sBAGbC,IAAQC,EAAAA,EAAAA,OACdC,EAAAA,EAAAA,IAAUC,GAAKC,IAAI5K,IAAQ4K,IAAIJ,IAAOI,IAAIC,GAAAA,GAAMX,IAASY,MAAM,O,GCf3DC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CAGAJ,EAAoBQ,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfT,EAAoBU,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASzG,EAAI,EAAGA,EAAIkG,EAAS5G,OAAQU,IAAK,CACrCqG,EAAWH,EAASlG,GAAG,GACvBsG,EAAKJ,EAASlG,GAAG,GACjBuG,EAAWL,EAASlG,GAAG,GAE3B,IAJA,IAGI0G,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAS/G,OAAQqH,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAa5M,OAAOiN,KAAKnB,EAAoBU,GAAGU,OAAM,SAAStT,GAAO,OAAOkS,EAAoBU,EAAE5S,GAAK8S,EAASM,GAAK,IAChKN,EAASjM,OAAOuM,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAAS9L,OAAO4F,IAAK,GACrB,IAAI8G,EAAIR,SACEV,IAANkB,IAAiBV,EAASU,EAC/B,CACD,CACA,OAAOV,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIvG,EAAIkG,EAAS5G,OAAQU,EAAI,GAAKkG,EAASlG,EAAI,GAAG,GAAKuG,EAAUvG,IAAKkG,EAASlG,GAAKkG,EAASlG,EAAI,GACrGkG,EAASlG,GAAK,CAACqG,EAAUC,EAAIC,EAwB/B,C,eC5BAd,EAAoBsB,EAAI,SAASjB,GAChC,IAAIkB,EAASlB,GAAUA,EAAOmB,WAC7B,WAAa,OAAOnB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoBnQ,EAAE0R,EAAQ,CAAEE,EAAGF,IAC5BA,CACR,C,eCNAvB,EAAoBnQ,EAAI,SAASuQ,EAASsB,GACzC,IAAI,IAAI5T,KAAO4T,EACX1B,EAAoB2B,EAAED,EAAY5T,KAASkS,EAAoB2B,EAAEvB,EAAStS,IAC5EoG,OAAO0N,eAAexB,EAAStS,EAAK,CAAE+T,YAAY,EAAMC,IAAKJ,EAAW5T,IAG3E,C,eCPAkS,EAAoB+B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO/Q,MAAQ,IAAIgR,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXxL,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBsJ,EAAoB2B,EAAI,SAASQ,EAAKC,GAAQ,OAAOlO,OAAOmO,UAAUC,eAAe/B,KAAK4B,EAAKC,EAAO,C,eCKtG,IAAIG,EAAkB,CACrB,IAAK,GAaNvC,EAAoBU,EAAEQ,EAAI,SAASsB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4B9P,GAC/D,IAKIqN,EAAUuC,EALV5B,EAAWhO,EAAK,GAChB+P,EAAc/P,EAAK,GACnBgQ,EAAUhQ,EAAK,GAGI2H,EAAI,EAC3B,GAAGqG,EAAShM,MAAK,SAASlH,GAAM,OAA+B,IAAxB6U,EAAgB7U,EAAW,IAAI,CACrE,IAAIuS,KAAY0C,EACZ3C,EAAoB2B,EAAEgB,EAAa1C,KACrCD,EAAoBQ,EAAEP,GAAY0C,EAAY1C,IAGhD,GAAG2C,EAAS,IAAIjC,EAASiC,EAAQ5C,EAClC,CAEA,IADG0C,GAA4BA,EAA2B9P,GACrD2H,EAAIqG,EAAS/G,OAAQU,IACzBiI,EAAU5B,EAASrG,GAChByF,EAAoB2B,EAAEY,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOxC,EAAoBU,EAAEC,EAC9B,EAEIkC,EAAqBC,KAAK,6BAA+BA,KAAK,8BAAgC,GAClGD,EAAmBE,QAAQN,EAAqBO,KAAK,KAAM,IAC3DH,EAAmBnO,KAAO+N,EAAqBO,KAAK,KAAMH,EAAmBnO,KAAKsO,KAAKH,G,IC/CvF,IAAII,EAAsBjD,EAAoBU,OAAEP,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,KAAO,IACjHiD,EAAsBjD,EAAoBU,EAAEuC,E","sources":["webpack://netflix_clone/./src/App.vue?6004","webpack://netflix_clone/./src/App.vue","webpack://netflix_clone/./src/components/Navbar.vue?210a","webpack://netflix_clone/./src/components/Navbar.vue","webpack://netflix_clone/./src/store/auth.ts","webpack://netflix_clone/./src/components/Navbar.vue?436b","webpack://netflix_clone/./src/components/Footer.vue?2712","webpack://netflix_clone/./src/components/Footer.vue","webpack://netflix_clone/./src/components/Footer.vue?7cca","webpack://netflix_clone/./src/App.vue?7ccd","webpack://netflix_clone/./src/views/HomeView.vue?4254","webpack://netflix_clone/./src/views/HomeView.vue","webpack://netflix_clone/./src/components/Poster.vue?f385","webpack://netflix_clone/./src/components/Poster.vue","webpack://netflix_clone/./src/components/Poster.vue?9608","webpack://netflix_clone/./src/views/HomeView.vue?1da1","webpack://netflix_clone/./src/views/PopularView.vue?331f","webpack://netflix_clone/./src/views/PopularView.vue","webpack://netflix_clone/./src/views/PopularView.vue?691f","webpack://netflix_clone/./src/views/TableView.vue?6747","webpack://netflix_clone/./src/views/TableView.vue","webpack://netflix_clone/./src/views/TableView.vue?cc98","webpack://netflix_clone/./src/views/WishlistView.vue?7970","webpack://netflix_clone/./src/views/WishlistView.vue","webpack://netflix_clone/./src/views/WishlistView.vue?79bf","webpack://netflix_clone/./src/views/SearchView.vue?df8f","webpack://netflix_clone/./src/views/SearchView.vue","webpack://netflix_clone/./src/views/SearchView.vue?f97a","webpack://netflix_clone/./src/views/SignView.vue","webpack://netflix_clone/./src/components/SignIn.vue","webpack://netflix_clone/./src/components/SignIn.vue?faab","webpack://netflix_clone/./src/components/SignUp.vue","webpack://netflix_clone/./src/components/SignUp.vue?b466","webpack://netflix_clone/./src/views/SignView.vue?e5c8","webpack://netflix_clone/./src/router/index.ts","webpack://netflix_clone/./src/main.ts","webpack://netflix_clone/webpack/bootstrap","webpack://netflix_clone/webpack/runtime/chunk loaded","webpack://netflix_clone/webpack/runtime/compat get default export","webpack://netflix_clone/webpack/runtime/define property getters","webpack://netflix_clone/webpack/runtime/global","webpack://netflix_clone/webpack/runtime/hasOwnProperty shorthand","webpack://netflix_clone/webpack/runtime/jsonp chunk loading","webpack://netflix_clone/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"full-width\"\n}\nconst _hoisted_2 = { class: \"full-width\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"full-width\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_NavbarComponent = _resolveComponent(\"NavbarComponent\")!\n  const _component_router_view = _resolveComponent(\"router-view\")!\n  const _component_FooterComponent = _resolveComponent(\"FooterComponent\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"nav\", _hoisted_2, [\n      _createVNode(_component_NavbarComponent)\n    ]),\n    _createVNode(_component_router_view),\n    (!_ctx.isPopularTableRoute)\n      ? (_openBlock(), _createElementBlock(\"footer\", _hoisted_3, [\n          _createVNode(_component_FooterComponent)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div id=\"app\" class=\"full-width\">\n    <!-- 공통 네비게이션 바 -->\n    <nav class=\"full-width\">\n      <NavbarComponent />\n    </nav>\n    <!-- 라우트에 따라 다른 컴포넌트가 렌더링되는 부분 -->\n    <router-view />\n    <!-- 공통 푸터, 특정 라우트에서만 렌더링 안 되도록 조건 추가 -->\n    <footer class=\"full-width\" v-if=\"!isPopularTableRoute\">\n      <FooterComponent />\n    </footer>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport NavbarComponent from './components/Navbar.vue';\nimport FooterComponent from './components/Footer.vue';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    NavbarComponent,\n    FooterComponent,\n  },\n  setup() {\n    const route = useRoute();\n\n    // 현재 라우트가 /popular/table인지 확인하는 계산 속성\n    const isPopularTableRoute = computed(() => route.path === '/popular/table');\n\n    return {\n      isPopularTableRoute,\n    };\n  },\n});\n</script>\n\n<style>\n/* 기존 스타일 유지 */\nbody {\n  background-color: #141414;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden; /* 수평 스크롤 방지 */\n}\n</style>\n","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"navbar\" }\nconst _hoisted_2 = { class: \"navbar-left\" }\nconst _hoisted_3 = {\n  class: \"svg-inline--fa fa-ticket\",\n  \"aria-hidden\": \"true\",\n  focusable: \"false\",\n  \"data-prefix\": \"fas\",\n  \"data-icon\": \"ticket\",\n  role: \"img\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 576 512\",\n  style: {\"height\":\"100%\",\"color\":\"rgb(229, 9, 20)\"}\n}\nconst _hoisted_4 = { class: \"navbar-right\" }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"nav-item\"\n}\nconst _hoisted_6 = { class: \"user-email\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(\"nav\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_link, {\n        to: \"/#\",\n        class: \"logo\"\n      }, {\n        default: _withCtx(() => [\n          (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, _cache[0] || (_cache[0] = [\n            _createElementVNode(\"path\", {\n              class: \"\",\n              fill: \"currentColor\",\n              d: \"M64 64C28.7 64 0 92.7 0 128l0 64c0 8.8 7.4 15.7 15.7 18.6C34.5 217.1 48 235 48 256s-13.5 38.9-32.3 45.4C7.4 304.3 0 311.2 0 320l0 64c0 35.3 28.7 64 64 64l448 0c35.3 0 64-28.7 64-64l0-64c0-8.8-7.4-15.7-15.7-18.6C541.5 294.9 528 277 528 256s13.5-38.9 32.3-45.4c8.3-2.9 15.7-9.8 15.7-18.6l0-64c0-35.3-28.7-64-64-64L64 64zm64 112l0 160c0 8.8 7.2 16 16 16l288 0c8.8 0 16-7.2 16-16l0-160c0-8.8-7.2-16-16-16l-288 0c-8.8 0-16 7.2-16 16zM96 160c0-17.7 14.3-32 32-32l320 0c17.7 0 32 14.3 32 32l0 192c0 17.7-14.3 32-32 32l-320 0c-17.7 0-32-14.3-32-32l0-192z\"\n            }, null, -1)\n          ])))\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/\",\n        class: \"nav-item\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [\n          _createTextVNode(\"Home\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/popular\",\n        class: \"nav-item\"\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [\n          _createTextVNode(\"Popular\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/search\",\n        class: \"nav-item\"\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [\n          _createTextVNode(\"Search\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/wishlist\",\n        class: \"nav-item\"\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [\n          _createTextVNode(\"Wishlist\")\n        ])),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      (!_ctx.isAuthenticated)\n        ? (_openBlock(), _createBlock(_component_router_link, {\n            key: 0,\n            to: \"/Sign\",\n            class: \"nav-item sign-button\"\n          }, {\n            default: _withCtx(() => _cache[5] || (_cache[5] = [\n              _createTextVNode(\"Sign\")\n            ])),\n            _: 1\n          }))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n            _createElementVNode(\"span\", _hoisted_6, _toDisplayString(_ctx.userEmail), 1),\n            _createVNode(_component_router_link, {\n              onClick: _ctx.logout,\n              to: \"/Sign\",\n              class: \"nav-item logout-button\"\n            }, {\n              default: _withCtx(() => _cache[6] || (_cache[6] = [\n                _createTextVNode(\"Logout\")\n              ])),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]))\n    ])\n  ]))\n}","<template>\n  <nav class=\"navbar\">\n    <div class=\"navbar-left\">\n      <router-link to=\"/#\" class=\"logo\">\n        <svg class=\"svg-inline--fa fa-ticket\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"ticket\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" style=\"height: 100%; color: rgb(229, 9, 20);\">\n          <path class=\"\" fill=\"currentColor\" d=\"M64 64C28.7 64 0 92.7 0 128l0 64c0 8.8 7.4 15.7 15.7 18.6C34.5 217.1 48 235 48 256s-13.5 38.9-32.3 45.4C7.4 304.3 0 311.2 0 320l0 64c0 35.3 28.7 64 64 64l448 0c35.3 0 64-28.7 64-64l0-64c0-8.8-7.4-15.7-15.7-18.6C541.5 294.9 528 277 528 256s13.5-38.9 32.3-45.4c8.3-2.9 15.7-9.8 15.7-18.6l0-64c0-35.3-28.7-64-64-64L64 64zm64 112l0 160c0 8.8 7.2 16 16 16l288 0c8.8 0 16-7.2 16-16l0-160c0-8.8-7.2-16-16-16l-288 0c-8.8 0-16 7.2-16 16zM96 160c0-17.7 14.3-32 32-32l320 0c17.7 0 32 14.3 32 32l0 192c0 17.7-14.3 32-32 32l-320 0c-17.7 0-32-14.3-32-32l0-192z\"></path>\n        </svg>\n      </router-link>\n      <router-link to=\"/\" class=\"nav-item\">Home</router-link>\n      <router-link to=\"/popular\" class=\"nav-item\">Popular</router-link>\n      <router-link to=\"/search\" class=\"nav-item\">Search</router-link>\n      <router-link to=\"/wishlist\" class=\"nav-item\">Wishlist</router-link>\n    </div>\n    <div class=\"navbar-right\">\n      <router-link v-if=\"!isAuthenticated\" to=\"/Sign\" class=\"nav-item sign-button\">Sign</router-link>\n      <div v-else class=\"nav-item\">\n        <span class=\"user-email\">{{ userEmail }}</span>\n      <router-link @click=\"logout\" to=\"/Sign\" class=\"nav-item logout-button\">Logout</router-link>\n    </div>\n    </div>\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { useAuthStore } from '../store/auth';\nimport { storeToRefs } from 'pinia';\n\nexport default defineComponent({\n  name: 'NavbarComponent',\n  setup() {\n    const authStore = useAuthStore();\n    const { isAuthenticated, user } = storeToRefs(authStore);\n    const { logout } = authStore;\n\n    return {\n      isAuthenticated,\n      userEmail: user?.value?.email || '',\n      logout,\n    };\n  },\n});\n</script>\n\n<style scoped>\n/* 기존의 스타일 그대로 유지 */\n.navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  background-color: #141414;\n  color: #ffffff;\n  margin: 0;\n}\n\n.navbar-left,\n.navbar-right {\n  display: flex;\n  gap: 1rem;\n}\n\n.nav-item {\n  color: #ffffff;\n  font-weight: bold;\n  text-decoration: none;\n\n}\n\n.nav-item:hover {\n  color: #e50914;\n}\n\n.navbar-left a svg {\n  margin-right: 1rem;\n  height: fit-content;\n  width: 27px;\n}\n\n/* 로그인 버튼 스타일 */\n.sign-button {\n  background-color: transparent;\n  color: #ffffff;\n  border: 2px solid #e50914;\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  height: auto;\n}\n\n.sign-button:hover {\n  background-color: #f51b26;\n  text-decoration: none;\n}\n\n/* 로그아웃 버튼 스타일 */\n.logout-button {\n  background-color: transparent;\n  color: #ffffff;\n  border: 2px solid #e50914;\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n}\n\n.logout-button:hover {\n  background-color: #e50914;\n  color: #ffffff;\n}\n\n.user-email{\n  margin-right: 1rem;\n  font-weight: bold;\n}\n\n/* 반응형 디자인 */\n@media (max-width: 768px) {\n  .navbar {\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 0.5rem;\n  }\n\n  .mobile-menu-icon {\n    display: block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin: 0.5rem 0;\n  }\n\n  .navbar-links {\n    display: none;\n    flex-direction: column;\n    gap: 1rem;\n    width: 100%;\n    background-color: #141414;\n    padding: 0.5rem;\n  }\n\n  .navbar-links.mobile-menu-open {\n    display: flex;\n  }\n\n  .navbar-left {\n    width: 100%;\n    justify-content: space-between;\n  }\n\n   /* 기존에 .navbar-right가 display: none; 이었던 부분 수정 */\n   .navbar-right .nav-item {\n    flex-direction: column;\n    width: 100%;\n    gap: 0.5rem;\n    margin-top: 1rem;\n  }\n}\n</style>\n","// src/stores/auth.ts\nimport { defineStore } from 'pinia';\n\n// Pinia store를 정의하여 사용자 인증 상태를 관리합니다.\nexport const useAuthStore = defineStore('auth', {\n  // state: store에서 관리할 상태를 정의합니다.\n  state: () => ({\n    // 사용자가 로그인했는지 여부를 나타내는 상태입니다. localStorage에서 'authUser' 항목을 확인하여 설정합니다.\n    isAuthenticated: !!localStorage.getItem('authUser'),\n    // 로그인한 사용자의 정보를 저장합니다. localStorage에서 'authUser' 항목을 가져와 JSON 객체로 변환하여 저장합니다.\n    user: localStorage.getItem('authUser') ? JSON.parse(localStorage.getItem('authUser') || '{}') : null,\n  }),\n  actions: {\n    // 사용자가 로그인할 때 호출되는 메서드입니다.\n    login(userData: object) {\n      // 로그인 상태를 true로 설정합니다.\n      this.isAuthenticated = true;\n      // 사용자 정보를 설정합니다.\n      this.user = userData;\n      // localStorage에 사용자 정보를 JSON 문자열로 저장하여 새로고침 후에도 로그인 상태를 유지합니다.\n      localStorage.setItem('authUser', JSON.stringify(userData));\n    },\n    // 사용자가 로그아웃할 때 호출되는 메서드입니다.\n    logout() {\n      // 로그인 상태를 false로 설정합니다.\n      this.isAuthenticated = false;\n      // 사용자 정보를 null로 설정합니다.\n      this.user = null;\n      // localStorage에서 'authUser' 항목을 제거하여 로그인 상태를 초기화합니다.\n      localStorage.removeItem('authUser');\n    },\n  },\n});\n","import { render } from \"./Navbar.vue?vue&type=template&id=6809eeaa&scoped=true&ts=true\"\nimport script from \"./Navbar.vue?vue&type=script&lang=ts\"\nexport * from \"./Navbar.vue?vue&type=script&lang=ts\"\n\nimport \"./Navbar.vue?vue&type=style&index=0&id=6809eeaa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6809eeaa\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"footer\" }\nconst _hoisted_2 = { class: \"footer-links\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(\"footer\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_link, {\n        to: \"/help\",\n        class: \"footer-link\"\n      }, {\n        default: _withCtx(() => _cache[0] || (_cache[0] = [\n          _createTextVNode(\"Help Center\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/terms\",\n        class: \"footer-link\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [\n          _createTextVNode(\"Terms of Use\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/privacy\",\n        class: \"footer-link\"\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [\n          _createTextVNode(\"Privacy Policy\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/contact\",\n        class: \"footer-link\"\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [\n          _createTextVNode(\"Contact Us\")\n        ])),\n        _: 1\n      })\n    ]),\n    _cache[4] || (_cache[4] = _createElementVNode(\"div\", { class: \"footer-copyright\" }, [\n      _createElementVNode(\"p\", null, \"© 2024 Netflix Clone. All rights reserved.\")\n    ], -1))\n  ]))\n}","<template>\n    <footer class=\"footer\">\n      <div class=\"footer-links\">\n        <router-link to=\"/help\" class=\"footer-link\">Help Center</router-link>\n        <router-link to=\"/terms\" class=\"footer-link\">Terms of Use</router-link>\n        <router-link to=\"/privacy\" class=\"footer-link\">Privacy Policy</router-link>\n        <router-link to=\"/contact\" class=\"footer-link\">Contact Us</router-link>\n      </div>\n      <div class=\"footer-copyright\">\n        <p>&copy; 2024 Netflix Clone. All rights reserved.</p>\n      </div>\n    </footer>\n  </template>\n  \n  <script lang=\"ts\">\n  import { defineComponent } from 'vue';\n  \n  export default defineComponent({\n    name: 'FooterComponent',\n  });\n  </script>\n  \n  <style scoped>\n  .footer {\n    background-color: #141414;\n    color: #ffffff;\n    padding: 2rem;\n    text-align: center;\n    margin-top: 2rem;\n  }\n  \n  .footer-links {\n    display: flex;\n    justify-content: center;\n    gap: 2rem;\n    margin-bottom: 1rem;\n  }\n  \n  .footer-link {\n    color: #ffffff;\n    text-decoration: none;\n    font-size: 0.9rem;\n  }\n  \n  .footer-link:hover {\n    color: #e50914;\n  }\n  \n  .footer-copyright {\n    font-size: 0.8rem;\n  }\n  </style>\n  ","import { render } from \"./Footer.vue?vue&type=template&id=2e1fd282&scoped=true&ts=true\"\nimport script from \"./Footer.vue?vue&type=script&lang=ts\"\nexport * from \"./Footer.vue?vue&type=script&lang=ts\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=2e1fd282&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2e1fd282\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=3f5c5afc&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3f5c5afc&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"home\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n}\nconst _hoisted_3 = { class: \"section-title\" }\nconst _hoisted_4 = { class: \"poster-list\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_PosterComponent = _resolveComponent(\"PosterComponent\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_ctx.isFetching)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\"))\n        : _createCommentVNode(\"\", true),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.movieSections, (movies, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          class: \"movie-section\",\n          key: index\n        }, [\n          _createElementVNode(\"h2\", _hoisted_3, _toDisplayString(movies.title), 1),\n          _createElementVNode(\"div\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(movies.data, (item) => {\n              return (_openBlock(), _createBlock(_component_PosterComponent, {\n                key: item.id,\n                movie: item,\n                onToggleMovieDetails: _ctx.toggleMovieDetails\n              }, null, 8, [\"movie\", \"onToggleMovieDetails\"]))\n            }), 128))\n          ])\n        ]))\n      }), 128))\n    ]),\n    (_ctx.selectedMovie)\n      ? (_openBlock(), _createBlock(_component_PosterComponent, {\n          key: 0,\n          movie: _ctx.selectedMovie,\n          onCloseMovieDetails: _ctx.closeMovieDetails\n        }, null, 8, [\"movie\", \"onCloseMovieDetails\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","<template>\n  <div id=\"home\">\n    <!-- 데이터 로딩 중일 때 로딩 표시 -->\n    <div v-if=\"isFetching\" class=\"loading\">Loading...</div> <!-- 로딩 중일 때 표시되는 텍스트 -->\n\n    <!-- 각 API에서 가져온 영화 섹션 반복 출력 -->\n    <div class=\"movie-section\" v-for=\"(movies, index) in movieSections\" :key=\"index\"> <!-- 각 영화 섹션에 고유 키 설정 -->\n      <h2 class=\"section-title\">{{ movies.title }}</h2> <!-- 영화 섹션의 제목 출력 -->\n      <div class=\"poster-list\">\n        <!-- PosterComponent 컴포넌트를 사용하여 각 영화 포스터 출력 -->\n        <PosterComponent\n          v-for=\"item in movies.data\"\n          :key=\"item.id\" \n          :movie=\"item\" \n          @toggle-movie-details=\"toggleMovieDetails\" \n        />\n      </div>\n    </div>\n  </div>\n\n  <!-- 선택된 영화가 있을 경우 영화 상세 정보 표시 -->\n  <PosterComponent\n    v-if=\"selectedMovie\" \n    :movie=\"selectedMovie\"\n    @close-movie-details=\"closeMovieDetails\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, onMounted, onBeforeUnmount } from 'vue'; // Vue 컴포넌트와 필요한 함수들 import\nimport { useRouter } from 'vue-router'; // Vue Router import\nimport PosterComponent from '../components/Poster.vue'; // PosterComponent 컴포넌트 import\n\n// TMDb API 키 및 기본 URL 설정\nconst BASE_URL = 'https://api.themoviedb.org/3'; // TMDb API 기본 URL\n\nexport default defineComponent({\n  name: 'HomeViewComponent', // 컴포넌트 이름 설정\n  components: {\n    PosterComponent, // 사용할 컴포넌트 등록\n  },\n  setup() {\n    const movieSections = ref<any[]>([]); // 영화 섹션 데이터 목록\n    const isFetching = ref(false); // 데이터 로딩 상태 여부\n    const showTopButton = ref(false); // 상단 이동 버튼 표시 여부\n    const selectedMovie = ref<any | null>(null); // 선택된 영화 데이터\n    const router = useRouter(); // Vue Router 사용\n\n    // API 키 가져오는 함수\n    const API_KEY = process.env.VUE_APP_TMDB_API_KEY\n\n\n    // 특정 엔드포인트에서 영화 데이터를 가져오는 함수\n    const fetchMoviesFromAPI = async (endpoint: string, title: string) => {\n      const url = `${BASE_URL}/${endpoint}?api_key=${API_KEY}&language=ko-KR&page=1`; // API 요청 URL 생성\n      try {\n        const response = await fetch(url); // API 호출\n        const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n        const movies = data.results.slice(0, 5).map((item: any) => ({ // 영화 데이터를 필요한 형식으로 가공\n          id: item.id, // 영화 ID\n          name: item.title, // 영화 제목\n          image: `https://image.tmdb.org/t/p/w500${item.poster_path}`, // 포스터 이미지 URL\n          description: item.overview, // 영화 설명\n          rating: item.vote_average, // 영화 평점\n          genre: item.genre_ids.join(', '), // 영화 장르 ID 목록을 문자열로 변환\n        }));\n        movieSections.value.push({ title, data: movies }); // 영화 섹션에 추가\n      } catch (error) {\n        console.error('Failed to fetch movies:', error); // 오류 발생 시 콘솔에 메시지 출력\n      }\n    };\n\n    // 모든 영화 섹션 데이터를 가져오는 함수\n    const fetchAllMovies = async () => {\n      if (isFetching.value) return; // 이미 데이터를 로딩 중이면 함수 종료\n      isFetching.value = true; // 데이터 로딩 상태 설정\n      try {\n        await Promise.all([\n          fetchMoviesFromAPI('movie/popular', 'Popular Movies'), // 인기 영화 데이터 가져오기\n          fetchMoviesFromAPI('movie/top_rated', 'Top Rated Movies'), // 높은 평점 영화 데이터 가져오기\n          fetchMoviesFromAPI('movie/upcoming', 'Upcoming Movies'), // 개봉 예정 영화 데이터 가져오기\n          fetchMoviesFromAPI('trending/movie/week', 'Trending This Week'), // 이번 주 인기 영화 데이터 가져오기\n        ]);\n      } catch (error) {\n        console.error('Failed to fetch all movie sections:', error); // 오류 발생 시 콘솔에 메시지 출력\n      } finally {\n        isFetching.value = false; // 데이터 로딩 상태 해제\n      }\n    };\n\n    // 스크롤 이벤트를 처리하는 함수\n    const handleScroll = () => {\n      showTopButton.value = window.scrollY > 200; // 스크롤 위치에 따라 TOP 버튼 표시 여부 설정\n    };\n\n    // TOP 버튼 클릭 시 화면 맨 위로 스크롤하는 함수\n    const scrollToTop = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' }); // 화면 맨 위로 부드럽게 스크롤\n    };\n\n    // Wishlist View로 이동하는 함수\n    const goToWishlistView = () => {\n      router.push('/wishlist'); // 위시리스트 뷰로 라우팅\n    };\n\n    // 영화 포스터 클릭 시 상세 정보 표시 또는 숨기는 함수\n    const toggleMovieDetails = (item: any) => {\n      if (selectedMovie.value && selectedMovie.value.id === item.id) {\n        selectedMovie.value = null; // 이미 선택된 영화인 경우 상세 정보 숨기기\n      } else {\n        selectedMovie.value = item; // 새로운 영화 선택 시 상세 정보 표시\n      }\n    };\n\n    // 영화 상세 정보 모달 닫기 함수\n    const closeMovieDetails = () => {\n      selectedMovie.value = null; // 선택된 영화 정보 숨기기\n    };\n\n    // 컴포넌트가 마운트될 때 호출되는 함수\n    onMounted(() => {\n      fetchAllMovies(); // 모든 영화 섹션 데이터 가져오기\n      window.addEventListener('scroll', handleScroll); // 스크롤 이벤트 리스너 추가\n    });\n\n    // 컴포넌트가 언마운트될 때 호출되는 함수\n    onBeforeUnmount(() => {\n      window.removeEventListener('scroll', handleScroll); // 스크롤 이벤트 리스너 제거\n    });\n\n    return {\n      movieSections, // 영화 섹션 데이터 반환\n      isFetching, // 데이터 로딩 상태 반환\n      showTopButton, // 상단 이동 버튼 표시 여부 반환\n      selectedMovie, // 선택된 영화 데이터 반환\n      scrollToTop, // 상단 이동 함수 반환\n      goToWishlistView, // 위시리스트 뷰 이동 함수 반환\n      toggleMovieDetails, // 영화 상세 정보 토글 함수 반환\n      closeMovieDetails, // 영화 상세 정보 닫기 함수 반환\n    };\n  },\n});\n</script>\n\n<style scoped>\n\n@media (max-width: 768px) {\n  .poster-list {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr); /* 한 줄에 2개 아이템 */\n    gap: 10px; /* 각 아이템 간격 */\n    padding: 10px; /* 좌우 패딩 추가 */\n  }\n\n  .poster-container {\n    margin: 0 auto; /* 가운데 정렬 */\n    width: 100%; /* 컨테이너 너비 100% */\n  }\n\n  .poster-image {\n    width: 100%; /* 이미지 너비 100% */\n    height: auto; /* 높이는 비율에 맞게 자동 설정 */\n    border-radius: 10px; /* 모서리 둥글게 */\n  }\n\n  .movie-details-modal {\n    padding: 10px; /* 내부 여백 추가 */\n  }\n\n  .movie-details-content {\n    max-width: 95%; /* 최대 너비 95% */\n    font-size: 0.9em; /* 텍스트 크기 약간 줄임 */\n  }\n\n  .section-title {\n    font-size: 1.2em; /* 섹션 제목 크기 줄임 */\n    text-align: center; /* 텍스트 중앙 정렬 */\n    padding: 10px 0; /* 위아래 패딩 추가 */\n  }\n\n  .loading {\n    bottom: 10px; /* 로딩 표시 위치 조정 */\n    font-size: 0.9em; /* 텍스트 크기 줄임 */\n  }\n\n  .top-button {\n    padding: 8px 12px; /* 버튼 크기 줄임 */\n    font-size: 0.8em; /* 텍스트 크기 줄임 */\n  }\n}\n\n/* 작은 모바일 크기용 미디어 쿼리 */\n@media (max-width: 480px) {\n  .poster-list {\n    grid-template-columns: 1fr; /* 한 줄에 1개 아이템 */\n  }\n\n  .poster-image {\n    margin-bottom: 15px; /* 이미지 하단 간격 추가 */\n  }\n\n  .movie-details-content {\n    font-size: 0.8em; /* 텍스트 크기 더 줄임 */\n  }\n\n  .section-title {\n    font-size: 1em; /* 섹션 제목 크기 더 줄임 */\n  }\n\n  .top-button {\n    bottom: 60px; /* 버튼 위치 조정 */\n    right: 10px; /* 버튼 오른쪽 위치 조정 */\n    font-size: 0.7em; /* 버튼 텍스트 크기 더 줄임 */\n  }\n}\n\n\n/******** 기본 스타일 유지 ********/\n.loading {\n  position: fixed; /* 고정 위치 설정 */\n  bottom: 20px; /* 하단에서 20px 위치 */\n  left: 50%; /* 왼쪽에서 50% 위치 (가운데 정렬) */\n  transform: translateX(-50%); /* X축 방향으로 -50% 이동 (가운데 정렬 보정) */\n  background-color: rgba(0, 0, 0, 0.8); /* 배경색을 검정색으로 하고 투명도 적용 */\n  color: #ffffff; /* 텍스트 색상 흰색 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  border-radius: 5px; /* 모서리 둥글게 설정 */\n  z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n.top-button {\n  position: fixed; /* 고정 위치 설정 */\n  bottom: 80px; /* 하단에서 80px 위치 */\n  right: 20px; /* 오른쪽에서 20px 위치 */\n  background-color: #e50914; /* 배경색 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  padding: 10px 15px; /* 내부 여백 설정 */\n  border-radius: 5px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n.top-button:hover {\n  background-color: #f40612; /* 호버 시 배경색 변경 */\n}\n\n.toggle-view-button {\n  margin: 20px; /* 바깥 여백 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  background-color: #f40612; /* 배경색 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.toggle-view-button:hover {\n  background-color: #333333; /* 호버 시 배경색 변경 */\n}\n\n/******** 영화 포스터 스타일 ********/\n.movie-section {\n  margin-bottom: 50px; /* 섹션 간 하단 여백 설정 */\n}\n\n.section-title {\n  color: #ffffff; /* 텍스트 색상 흰색 설정 */\n  margin-bottom: 15px; /* 하단 여백 설정 */\n  padding-left: 10px; /* 왼쪽 여백 설정 */\n  font-size: 1.5em; /* 글꼴 크기 설정 */\n}\n\n.poster-list {\n  display: grid; /* 그리드 레이아웃 사용 */\n  grid-template-columns: repeat(5, 1fr); /* 한 줄에 5개 아이템 */\n  gap: 20px; /* 각 아이템 사이의 간격 설정 */\n  padding-left: 10px; /* 왼쪽 여백 설정 */\n  padding-right: 10px; /* 오른쪽 여백 설정 */\n}\n\n.poster-container {\n  position: relative; /* 상대 위치 설정 */\n  transition: transform 0.3s; /* 크기 변화 시 부드러운 트랜지션 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.poster-container:hover {\n  transform: scale(1.1); /* 호버 시 크기 확대 */\n}\n\n.poster-image {\n  width: 60%; /* 너비 설정 */\n  border-radius: 10px; /* 모서리 둥글게 설정 */\n  transition: transform 0.3s; /* 크기 변화 시 부드러운 트랜지션 설정 */\n  border: 2px solid transparent; /* 기본 테두리는 투명 설정 */\n}\n\n.poster-title {\n  color: #ffffff; /* 텍스트 색상 흰색 설정 */\n  margin-top: 10px; /* 상단 여백 설정 */\n  text-align: center; /* 텍스트 가운데 정렬 */\n  font-size: 1em; /* 글꼴 크기 설정 */\n}\n\n/******** 영화 상세 정보 모달 ********/\n.movie-details-modal {\n  position: fixed; /* 고정 위치 설정 */\n  top: 0; /* 상단에서 0 위치 */\n  left: 0; /* 왼쪽에서 0 위치 */\n  width: 100%; /* 너비 100% 설정 */\n  height: 100%; /* 높이 100% 설정 */\n  background-color: rgba(0, 0, 0, 0.8); /* 배경색을 검정색으로 하고 투명도 적용 */\n  display: flex; /* 플렉스 레이아웃 사용 */\n  align-items: center; /* 수직 가운데 정렬 */\n  justify-content: center; /* 수평 가운데 정렬 */\n  z-index: 2000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n.movie-details-content {\n  background-color: #333; /* 배경색 설정 */\n  padding: 20px; /* 내부 여백 설정 */\n  border-radius: 10px; /* 모서리 둥글게 설정 */\n  color: #fff; /* 텍스트 색상 흰색 설정 */\n  max-width: 500px; /* 최대 너비 설정 */\n  width: 90%; /* 너비 설정 */\n  text-align: center; /* 텍스트 가운데 정렬 */\n}\n\n.details-poster-image {\n  width: 50%; /* 너비 설정 */\n  height: auto; /* 높이는 자동 설정 */\n  border-radius: 10px; /* 모서리 둥글게 설정 */\n  margin-bottom: 20px; /* 하단 여백 설정 */\n}\n\n.close-button {\n  margin-top: 20px; /* 상단 여백 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  background-color: #e50914; /* 배경색 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.close-button:hover {\n  background-color: #f40612; /* 호버 시 배경색 변경 */\n}\n</style>\n","import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"poster-title\" }\nconst _hoisted_3 = { class: \"movie-details-content\" }\nconst _hoisted_4 = [\"src\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", {\n      class: \"poster-container\",\n      onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.handlePosterClick && _ctx.handlePosterClick(...args)))\n    }, [\n      _createElementVNode(\"img\", {\n        src: _ctx.movie.image,\n        alt: \"movie poster\",\n        class: _normalizeClass(['poster-image', { 'selected': _ctx.isItemInLocalStorage(_ctx.movie) }])\n      }, null, 10, _hoisted_1),\n      _createElementVNode(\"p\", _hoisted_2, _toDisplayString(_ctx.movie.name), 1)\n    ]),\n    (_ctx.showDetails)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"movie-details-modal\",\n          onClick: _cache[2] || (_cache[2] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.closeMovieDetails && _ctx.closeMovieDetails(...args)), [\"self\"]))\n        }, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"h2\", null, _toDisplayString(_ctx.movie.name), 1),\n            _createElementVNode(\"img\", {\n              src: _ctx.movie.image,\n              alt: \"movie poster\",\n              class: \"details-poster-image\"\n            }, null, 8, _hoisted_4),\n            _createElementVNode(\"p\", null, [\n              _cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Description:\", -1)),\n              _createTextVNode(\" \" + _toDisplayString(_ctx.movie.description), 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Rating:\", -1)),\n              _createTextVNode(\" \" + _toDisplayString(_ctx.movie.rating), 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Genres:\", -1)),\n              _createTextVNode(\" \" + _toDisplayString(_ctx.movie.genre), 1)\n            ]),\n            _createElementVNode(\"button\", {\n              onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.closeMovieDetails && _ctx.closeMovieDetails(...args))),\n              class: \"close-button\"\n            }, \"Close\")\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n    <div>\n      <!-- 포스터를 클릭할 수 있는 컨테이너. 클릭 시 toggleMovieDetails 및 toggleLocalStorage 메소드가 호출됨 -->\n      <div\n        class=\"poster-container\"\n        @click=\"handlePosterClick\"\n      >\n        <!-- 영화 포스터 이미지 -->\n        <img :src=\"movie.image\" alt=\"movie poster\" :class=\"['poster-image', { 'selected': isItemInLocalStorage(movie) }]\" />\n        <!-- 영화 제목 -->\n        <p class=\"poster-title\">{{ movie.name }}</p>\n      </div>\n  \n      <!-- 영화 상세 정보 모달 -->\n      <div v-if=\"showDetails\" class=\"movie-details-modal\" @click.self=\"closeMovieDetails\">\n        <div class=\"movie-details-content\">\n          <!-- 영화 제목 -->\n          <h2>{{ movie.name }}</h2>\n          <!-- 영화 포스터 이미지 (상세 모달 내) -->\n          <img :src=\"movie.image\" alt=\"movie poster\" class=\"details-poster-image\" />\n          <!-- 영화 설명 -->\n          <p><strong>Description:</strong> {{ movie.description }}</p>\n          <!-- 영화 평점 -->\n          <p><strong>Rating:</strong> {{ movie.rating }}</p>\n          <!-- 영화 장르 -->\n          <p><strong>Genres:</strong> {{ movie.genre }}</p>\n          <!-- 모달 닫기 버튼 -->\n          <button @click=\"closeMovieDetails\" class=\"close-button\">Close</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script lang=\"ts\">\n  import { defineComponent, ref, onMounted } from 'vue';\n  \n  export default defineComponent({\n    name: 'PosterComponent',\n    props: {\n      // 부모 컴포넌트로부터 전달받는 movie 데이터, Object 타입이며 필수 속성\n      movie: {\n        type: Object,\n        required: true,\n      },\n    },\n    setup(props) {\n      // showDetails는 모달의 표시 여부를 나타내는 상태값 (false일 때 모달 숨김)\n      const showDetails = ref(false);\n  \n      /**\n       * 포스터 클릭 시 호출되는 함수\n       * - 모달을 토글\n       * - 로컬 스토리지에 영화 정보 저장 또는 제거\n       */\n      const handlePosterClick = () => {\n        toggleMovieDetails();\n        toggleLocalStorage(props.movie);\n      };\n  \n      // 모달을 열거나 닫는 함수\n      const toggleMovieDetails = () => {\n        showDetails.value = !showDetails.value;\n      };\n  \n      // 모달을 닫는 함수\n      const closeMovieDetails = () => {\n        showDetails.value = false;\n      };\n  \n      /**\n       * 로컬 스토리지에서 선택된 영화 목록을 토글하는 함수\n       * @param movie 선택된 영화 객체\n       */\n      const toggleLocalStorage = (movie: any) => {\n        let storedMovies = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n        const movieIndex = storedMovies.findIndex((storedMovie: any) => storedMovie.id === movie.id);\n  \n        if (movieIndex === -1) {\n          // 아이템이 로컬 스토리지에 없으면 추가\n          storedMovies.push({\n            id: movie.id,\n            name: movie.name,\n            image: movie.image,\n          });\n        } else {\n          // 아이템이 이미 로컬 스토리지에 있으면 제거\n          storedMovies.splice(movieIndex, 1);\n        }\n  \n        localStorage.setItem('selectedMovies', JSON.stringify(storedMovies));\n        // 반응성 트리거를 위해 업데이트 (필요 시 사용)\n      };\n  \n      /**\n       * 해당 영화가 로컬 스토리지에 저장되어 있는지 확인하는 함수\n       * @param movie 확인할 영화 객체\n       * @returns 저장 여부\n       */\n      const isItemInLocalStorage = (movie: any) => {\n        let storedMovies = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n        return storedMovies.some((storedMovie: any) => storedMovie.id === movie.id);\n      };\n  \n      return {\n        showDetails,\n        toggleMovieDetails,\n        closeMovieDetails,\n        toggleLocalStorage,\n        isItemInLocalStorage,\n        handlePosterClick,\n      };\n    },\n  });\n  </script>\n  \n  <style scoped>\n  /* 포스터 컨테이너 스타일 */\n  .poster-container {\n    position: relative;\n    transition: transform 0.3s, border 0.3s;\n    cursor: pointer;\n    border: 2px solid transparent; /* 기본 테두리 */\n  }\n  \n  /* 포스터 컨테이너에 마우스 올릴 때 확대 효과 */\n  .poster-container:hover {\n    transform: scale(1.1);\n  }\n  \n  /* 선택된 포스터 이미지 스타일 */\n  .poster-image.selected {\n    border: 2px solid red; /* 선택된 경우 빨간 테두리 */\n  }\n  \n  /* 포스터 이미지 스타일 */\n  .poster-image {\n    width: 100%;\n    border-radius: 10px;\n    transition: transform 0.3s;\n  }\n  \n  /* 포스터 제목 스타일 */\n  .poster-title {\n    color: #ffffff;\n    margin-top: 10px;\n    text-align: center;\n    font-size: 1em;\n  }\n  \n  /* 모달 배경 스타일 - 화면 전체를 덮는 핵심 스타일 */\n  .movie-details-modal {\n    position: fixed; /* 화면에 고정되어 스크롤해도 위치 유지 */\n    top: 0; /* 상단을 기준으로 시작 */\n    left: 0; /* 좌측을 기준으로 시작 */\n    width: 100%; /* 화면의 너비 전체를 덮음 */\n    height: 100%; /* 화면의 높이 전체를 덮음 */\n    background-color: rgba(0, 0, 0, 0.8); /* 배경을 어둡게 하여 모달이 강조되도록 함 */\n    display: flex; /* 모달 내용을 가운데 정렬하기 위한 flexbox 사용 */\n    align-items: center; /* 수직 방향으로 가운데 정렬 */\n    justify-content: center; /* 수평 방향으로 가운데 정렬 */\n    z-index: 2000; /* 다른 요소보다 위에 표시되도록 높은 z-index 설정 */\n    margin-bottom: 200px;\n  }\n  \n  /* 모달 내용 스타일 */\n  .movie-details-content {\n    background-color: #333;\n    border-radius: 10px;\n    color: #fff;\n    max-width: 400px; /* 모달의 최대 너비를 줄임 */\n    width: 80%; /* 모달의 너비를 줄임 */\n    text-align: center;\n    padding: 20px;\n  }\n  \n  /* 상세 포스터 이미지 스타일 */\n  .details-poster-image {\n    width: 40%; /* 상세 포스터 이미지 크기를 줄임 */\n    height: auto;\n    border-radius: 10px;\n    margin-bottom: 20px;\n  }\n  \n  /* 모달 닫기 버튼 스타일 */\n  .close-button {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #e50914;\n    color: #ffffff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  \n  /* 닫기 버튼에 마우스 올릴 때 색상 변경 */\n  .close-button:hover {\n    background-color: #f40612;\n  }\n  </style>","import { render } from \"./Poster.vue?vue&type=template&id=8d1cb87a&scoped=true&ts=true\"\nimport script from \"./Poster.vue?vue&type=script&lang=ts\"\nexport * from \"./Poster.vue?vue&type=script&lang=ts\"\n\nimport \"./Poster.vue?vue&type=style&index=0&id=8d1cb87a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8d1cb87a\"]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=18028906&scoped=true&ts=true\"\nimport script from \"./HomeView.vue?vue&type=script&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&lang=ts\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=18028906&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-18028906\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { id: \"popular\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n}\nconst _hoisted_3 = { class: \"poster-list\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = [\"src\"]\nconst _hoisted_6 = { class: \"poster-title\" }\nconst _hoisted_7 = {\n  ref: \"infiniteScrollTarget\",\n  class: \"infinite-scroll-target\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.goToTableView && _ctx.goToTableView(...args))),\n        class: \"toggle-view-button\"\n      }, \" Switch to Table View \")\n    ]),\n    (_ctx.isFetching && !_ctx.isTableView)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\"))\n      : _createCommentVNode(\"\", true),\n    (!_ctx.isTableView)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 1,\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.scrollToTop && _ctx.scrollToTop(...args))),\n          class: \"top-button\"\n        }, \"TOP\"))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_3, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.popularItems, (item) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"poster-container\",\n          onClick: ($event: any) => (_ctx.toggleLocalStorage(item))\n        }, [\n          _createElementVNode(\"img\", {\n            src: item.image,\n            alt: \"movie poster\",\n            class: _normalizeClass([\"poster-image\", {'selected-poster': _ctx.isItemInLocalStorage(item)}])\n          }, null, 10, _hoisted_5),\n          _createElementVNode(\"p\", _hoisted_6, _toDisplayString(item.name), 1)\n        ], 8, _hoisted_4))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, null, 512)\n  ]))\n}","<template>\n  <div id=\"popular\">\n    <div>\n      <!-- 테이블 뷰로 전환하는 버튼 -->\n      <button @click=\"goToTableView\" class=\"toggle-view-button\">\n        Switch to Table View\n      </button>\n    </div>\n    <!-- 데이터 로딩 중일 때 로딩 표시 -->\n    <div v-if=\"isFetching && !isTableView\" class=\"loading\">Loading...</div>\n    <!-- 페이지 상단으로 이동 버튼 -->\n    <button v-if=\"!isTableView\" @click=\"scrollToTop\" class=\"top-button\">TOP</button>\n    <!-- 포스터 리스트 추가 -->\n    <div class=\"poster-list\">\n      <div\n        v-for=\"item in popularItems\"\n        :key=\"item.id\"\n        class=\"poster-container\"\n        @click=\"toggleLocalStorage(item)\"\n      >\n        <img :src=\"item.image\" alt=\"movie poster\" class=\"poster-image\" :class=\"{'selected-poster': isItemInLocalStorage(item)}\" />\n        <p class=\"poster-title\">{{ item.name }}</p>\n      </div>\n    </div>\n    <!-- 무한 스크롤을 위한 감시 요소 -->\n    <div ref=\"infiniteScrollTarget\" class=\"infinite-scroll-target\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { useRouter } from 'vue-router';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport default defineComponent({\n  name: 'App',\n  setup() {\n    const popularItems = ref<any[]>([]);\n    const currentPage = ref(1);\n    const isFetching = ref(false);\n    const showTopButton = ref(true);\n    const router = useRouter();\n    const infiniteScrollTarget = ref<HTMLElement | null>(null);\n\n\n    const API_KEY = process.env.VUE_APP_TMDB_API_KEY\n\n    const fetchPopularMovies = async (page = 1) => {\n      if (isFetching.value) return;\n      isFetching.value = true;\n\n      const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=ko-KR&page=${page}`;\n      try {\n        const response = await fetch(url);\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n\n        popularItems.value = [\n          ...popularItems.value,\n          ...data.results.map((item: any) => ({\n            id: item.id,\n            name: item.title,\n            image: `https://image.tmdb.org/t/p/w500${item.poster_path}`,\n          })),\n        ];\n        currentPage.value += 1;\n      } catch (error) {\n        console.error('Failed to fetch popular movies:', error);\n      } finally {\n        isFetching.value = false;\n      }\n    };\n\n    const handleIntersect = (entries: IntersectionObserverEntry[]) => {\n      const [entry] = entries;\n      if (entry.isIntersecting && !isFetching.value) {\n        fetchPopularMovies(currentPage.value);\n      }\n    };\n\n    const scrollToTop = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const goToTableView = () => {\n      router.push('/popular/table');\n    };\n\n    const toggleLocalStorage = (item: any) => {\n      let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n      const itemIndex = storedItems.findIndex((storedItem: any) => storedItem.id === item.id);\n\n      if (itemIndex === -1) {\n        storedItems.push(item);\n      } else {\n        storedItems.splice(itemIndex, 1);\n      }\n\n      localStorage.setItem('selectedMovies', JSON.stringify(storedItems));\n      popularItems.value = [...popularItems.value];\n    };\n\n    const isItemInLocalStorage = (item: any) => {\n      let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n      return storedItems.some((storedItem: any) => storedItem.id === item.id);\n    };\n\n    onMounted(() => {\n      fetchPopularMovies();\n\n      const observer = new IntersectionObserver(handleIntersect, {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.1,\n      });\n\n      if (infiniteScrollTarget.value) {\n        observer.observe(infiniteScrollTarget.value);\n      }\n    });\n\n    return {\n      popularItems,\n      isFetching,\n      showTopButton,\n      scrollToTop,\n      goToTableView,\n      toggleLocalStorage,\n      isItemInLocalStorage,\n      infiniteScrollTarget,\n    };\n  },\n});\n</script>\n\n<style scoped>\n/* 모바일 크기에 맞는 반응형 디자인 */\n@media (max-width: 768px) {\n  .poster-list {\n    display: inline;\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n    gap: 10px;\n    \n  }\n\n  .poster-title{\n    font-size: 1px;\n  }\n\n  .poster-container {\n    margin: 0 auto;\n    width: 100%;\n  }\n\n  .poster-image {\n    width: 100%;\n    height: auto;\n    border-radius: 10px;\n  }\n\n  .top-button {\n    padding: 8px 12px;\n    font-size: 0.8em;\n  }\n}\n\n@media (max-width: 480px) {\n  .poster-list {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: 5px;\n    padding: 5px;\n  }\n\n  .poster-image {\n    margin-bottom: 10px;\n  }\n\n  .top-button {\n    bottom: 100px;\n  }\n\n}\n\n.loading {\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(255, 255, 255, 0.8);\n  color: #000000;\n  padding: 20px;\n  border-radius: 5px;\n  z-index: 1000;\n}\n\n.top-button {\n  position: fixed;\n  bottom: 80px;\n  right: 20px;\n  background-color: #e50914;\n  color: #ffffff;\n  border: none;\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.top-button:hover {\n  background-color: #f40612;\n}\n\n.toggle-view-button {\n  margin: 20px;\n  padding: 10px;\n  background-color: #f40612;\n  color: #ffffff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.toggle-view-button:hover {\n  background-color: #333333;\n}\n\n.poster-list {\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 20px;\n}\n\n.poster-container {\n  position: relative;\n  transition: transform 0.3s;\n  cursor: pointer;\n}\n\n.poster-container:hover {\n  transform: scale(1.05);\n}\n\n.poster-image {\n  width: 100%;\n  border-radius: 10px;\n  transition: transform 0.3s;\n  border: 2px solid transparent;\n}\n\n.selected-poster {\n  border-color: #e50914;\n}\n\n.poster-title {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  color: #ffffff;\n  background: rgba(0, 0, 0, 0.5);\n  padding: 5px 10px;\n  border-radius: 5px;\n  transition: color 0.3s;\n}\n\n.infinite-scroll-target {\n  height: 1px;\n  background-color: transparent;\n}\n</style>\n","import { render } from \"./PopularView.vue?vue&type=template&id=15526d25&scoped=true&ts=true\"\nimport script from \"./PopularView.vue?vue&type=script&lang=ts\"\nexport * from \"./PopularView.vue?vue&type=script&lang=ts\"\n\nimport \"./PopularView.vue?vue&type=style&index=0&id=15526d25&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-15526d25\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { id: \"table-view\" }\nconst _hoisted_2 = { class: \"grid-view\" }\nconst _hoisted_3 = { class: \"grid-container\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = { class: \"poster-image-wrapper\" }\nconst _hoisted_6 = [\"src\", \"alt\"]\nconst _hoisted_7 = { class: \"poster-title\" }\nconst _hoisted_8 = { class: \"pagination\" }\nconst _hoisted_9 = [\"disabled\"]\nconst _hoisted_10 = [\"onClick\"]\nconst _hoisted_11 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.goToPopularView && _ctx.goToPopularView(...args))),\n      class: \"toggle-view-button\"\n    }, \"Switch to Popular View\"),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.paginatedItems, (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: item.id,\n            class: \"grid-item\",\n            onClick: ($event: any) => (_ctx.toggleLocalStorage(item))\n          }, [\n            _createElementVNode(\"div\", _hoisted_5, [\n              (item.image)\n                ? (_openBlock(), _createElementBlock(\"img\", {\n                    key: 0,\n                    src: item.image,\n                    alt: item.name,\n                    class: _normalizeClass([\"poster-image\", {'selected-poster': _ctx.isItemInLocalStorage(item)}])\n                  }, null, 10, _hoisted_6))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"div\", _hoisted_7, _toDisplayString(item.name), 1)\n            ])\n          ], 8, _hoisted_4))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", _hoisted_8, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.goToPage(_ctx.currentPage - 1))),\n          disabled: _ctx.currentPage === 1\n        }, \"Previous\", 8, _hoisted_9),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.visiblePages, (page) => {\n          return (_openBlock(), _createElementBlock(\"span\", {\n            key: page,\n            onClick: ($event: any) => (_ctx.goToPage(page)),\n            class: _normalizeClass(['page-number', { active: page === _ctx.currentPage }])\n          }, _toDisplayString(page), 11, _hoisted_10))\n        }), 128)),\n        _createElementVNode(\"button\", {\n          onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.goToPage(_ctx.currentPage + 1))),\n          disabled: _ctx.currentPage === _ctx.totalPages\n        }, \"Next\", 8, _hoisted_11)\n      ])\n    ])\n  ]))\n}","<template>\n  <div id=\"table-view\">\n    <!-- 인기 보기로 전환하는 버튼 -->\n    <button @click=\"goToPopularView\" class=\"toggle-view-button\">Switch to Popular View</button> <!-- 버튼 클릭 시 goToPopularView 함수 호출 -->\n    <div class=\"grid-view\">\n      <div class=\"grid-container\">\n        <!-- 페이지네이션을 적용한 각 영화 아이템 출력 -->\n        <div v-for=\"item in paginatedItems\" :key=\"item.id\" class=\"grid-item\" @click=\"toggleLocalStorage(item)\"> <!-- 각 영화 아이템에 고유 키 설정 및 클릭 시 로컬 스토리지 토글 함수 호출 -->\n          <div class=\"poster-image-wrapper\">\n            <!-- 영화 포스터 이미지 출력, 이미지가 있을 때만 렌더링 -->\n            <img :src=\"item.image\" :alt=\"item.name\" class=\"poster-image\" :class=\"{'selected-poster': isItemInLocalStorage(item)}\" v-if=\"item.image\" />\n            <!-- 영화 제목 출력 -->\n            <div class=\"poster-title\">{{ item.name }}</div> <!-- 영화 제목 텍스트 출력 -->\n          </div>\n        </div>\n      </div>\n      <div class=\"pagination\">\n        <!-- 이전 페이지 버튼, 첫 번째 페이지에서는 비활성화 -->\n        <button @click=\"goToPage(currentPage - 1)\" :disabled=\"currentPage === 1\">Previous</button>\n        <!-- 페이지 번호 목록 반복 출력 -->\n        <span v-for=\"page in visiblePages\" :key=\"page\" @click=\"goToPage(page)\" :class=\"['page-number', { active: page === currentPage }]\">\n          {{ page }} <!-- 페이지 번호 출력 -->\n        </span>\n        <!-- 다음 페이지 버튼, 마지막 페이지에서는 비활성화 -->\n        <button @click=\"goToPage(currentPage + 1)\" :disabled=\"currentPage === totalPages\">Next</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref, onMounted } from 'vue'; // Vue와 필요한 함수들 import\nimport { useRouter } from 'vue-router'; // Vue Router import\n\ninterface Item {\n  id: number; // 영화 ID\n  name: string; // 영화 제목\n  image: string; // 영화 포스터 이미지 URL\n}\n\nexport default defineComponent({\n  name: 'TableViewComponent', // 컴포넌트 이름 설정\n  props: {\n    items: {\n      type: Array as PropType<Item[]>, // props로 영화 데이터 목록 받음\n      required: true, // 필수 props 설정\n    },\n  },\n  setup(props) {\n    const popularItems = ref<Item[]>([]); // 인기 영화 목록 상태 변수\n    const currentPage = ref(1); // 현재 페이지 번호 상태 변수\n    const itemsPerPage = 20; // 페이지당 표시할 아이템 개수\n    const isFetching = ref(false); // 데이터 로딩 상태 여부\n    const router = useRouter(); // Vue Router 사용\n\n    const totalPages = computed(() => Math.ceil(popularItems.value.length / itemsPerPage)); // 총 페이지 수 계산\n\n    const paginatedItems = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage; // 현재 페이지에 해당하는 시작 인덱스 계산\n      const end = start + itemsPerPage; // 현재 페이지에 해당하는 끝 인덱스 계산\n      return popularItems.value.slice(start, end); // 현재 페이지에 해당하는 영화 데이터 반환\n    });\n\n    // 페이지네이션에 표시될 페이지 번호 계산\n    const visiblePages = computed(() => {\n      const pages = []; // 페이지 번호 목록\n      const maxVisiblePages = 8; // 최대 표시할 페이지 번호 개수\n      const total = totalPages.value; // 전체 페이지 개수\n\n      let startPage = Math.max(1, currentPage.value - Math.floor(maxVisiblePages / 2)); // 시작 페이지 번호\n      let endPage = startPage + maxVisiblePages - 1; // 끝 페이지 번호\n\n      if (endPage > total) { // 끝 페이지 번호가 전체 페이지 개수를 초과하는 경우\n        endPage = total; // 끝 페이지 번호를 전체 페이지 개수로 설정\n        startPage = Math.max(1, endPage - maxVisiblePages + 1); // 시작 페이지 번호를 다시 계산\n      }\n      \n      for (let i = startPage; i <= endPage; i++) { // 시작 페이지부터 끝 페이지까지 반복\n        pages.push(i); // 페이지 번호 목록에 추가\n      }\n\n      return pages;\n    });\n\n\n    const API_KEY = process.env.VUE_APP_TMDB_API_KEY;\n\n    // 인기 영화를 가져오는 함수\n    const fetchPopularMovies = async (initialLoad = false) => {\n      if (isFetching.value) return; // 이미 데이터를 로딩 중이면 함수 종료\n      isFetching.value = true; // 데이터 로딩 상태 설정\n\n      const BASE_URL = 'https://api.themoviedb.org/3'; // TMDb API 기본 URL 설정\n      try {\n        if (initialLoad) {\n          // 초기 8페이지까지의 데이터를 한 번에 가져옴\n          for (let page = 1; page <= 8; page++) {\n            const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=ko-KR&page=${page}`; // API 요청 URL 생성\n            const response = await fetch(url); // API 호출\n            const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n\n            popularItems.value = [\n              ...popularItems.value, // 기존 데이터 유지\n              ...data.results.map((item: any) => ({ // 새로운 영화 데이터 추가\n                id: item.id, // 영화 ID\n                name: item.title, // 영화 제목\n                image: `https://image.tmdb.org/t/p/w500${item.poster_path}`, // 포스터 이미지 URL\n              })),\n            ];\n          }\n        } else {\n          // 추가 페이지 데이터를 가져옴\n          const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=ko-KR&page=${currentPage.value}`; // API 요청 URL 생성\n          const response = await fetch(url); // API 호출\n          const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n\n          popularItems.value = [\n            ...popularItems.value, // 기존 데이터 유지\n            ...data.results.map((item: any) => ({ // 새로운 영화 데이터 추가\n              id: item.id, // 영화 ID\n              name: item.title, // 영화 제목\n              image: `https://image.tmdb.org/t/p/w500${item.poster_path}`, // 포스터 이미지 URL\n            })),\n          ];\n        }\n      } catch (error) {\n        console.error('Failed to fetch popular movies:', error); // 오류 발생 시 콘솔에 메시지 출력\n      } finally {\n        isFetching.value = false; // 데이터 로딩 상태 해제\n      }\n    };\n\n    // 특정 페이지로 이동하는 함수\n    const goToPage = (page: number) => {\n      if (page > 0 && page <= totalPages.value) { // 유효한 페이지 범위인지 확인\n        currentPage.value = page; // 현재 페이지 설정\n        fetchPopularMovies(); // 해당 페이지의 인기 영화 데이터 가져오기\n      }\n    };\n\n    // 이전 페이지로 이동하는 함수\n    const previousPage = () => {\n      if (currentPage.value > 1) { // 첫 페이지가 아닌 경우\n        currentPage.value -= 1; // 현재 페이지 감소\n        fetchPopularMovies(); // 이전 페이지의 인기 영화 데이터 가져오기\n      }\n    };\n\n    // 다음 페이지로 이동하는 함수\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) { // 마지막 페이지가 아닌 경우\n        currentPage.value += 1; // 현재 페이지 증가\n        fetchPopularMovies(); // 다음 페이지의 인기 영화 데이터 가져오기\n      }\n    };\n\n    // 인기 보기로 이동하는 함수\n    const goToPopularView = () => {\n      router.push('/popular'); // 인기 보기 뷰로 라우팅\n    };\n\n    // 로컬 스토리지에 포스터 데이터를 저장하거나 삭제하는 함수\n    const toggleLocalStorage = (item: Item) => {\n      let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]'); // 로컬 스토리지에서 기존 저장된 영화 목록 가져오기\n      const itemIndex = storedItems.findIndex((storedItem: Item) => storedItem.id === item.id); // 영화가 이미 저장되어 있는지 확인\n\n      if (itemIndex === -1) {\n        // 아이템이 로컬 스토리지에 없으면 추가\n        storedItems.push(item); // 영화 정보를 저장 목록에 추가\n      } else {\n        // 아이템이 이미 로컬 스토리지에 있으면 제거\n        storedItems.splice(itemIndex, 1); // 영화 정보를 저장 목록에서 제거\n      }\n\n      localStorage.setItem('selectedMovies', JSON.stringify(storedItems)); // 업데이트된 영화 목록을 로컬 스토리지에 저장\n      console.log('Updated localStorage:', storedItems); // 업데이트된 로컬 스토리지 로그 출력\n      popularItems.value = [...popularItems.value]; // 배열을 다시 할당하여 반응성 트리거\n    };\n\n    // 로컬 스토리지에 아이템이 있는지 확인하는 함수\n    const isItemInLocalStorage = (item: Item) => {\n      let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]'); // 로컬 스토리지에서 저장된 영화 목록 가져오기\n      return storedItems.some((storedItem: Item) => storedItem.id === item.id); // 해당 영화가 저장되어 있는지 확인\n    };\n\n    // 컴포넌트가 마운트될 때 호출되는 함수\n    onMounted(() => {\n      fetchPopularMovies(true); // 초기 로드 시 8페이지 데이터 가져오기\n    });\n\n    return {\n      paginatedItems, // 페이지네이션된 영화 데이터 반환\n      currentPage, // 현재 페이지 반환\n      totalPages, // 총 페이지 수 반환\n      visiblePages, // 표시할 페이지 번호 목록 반환\n      goToPage, // 특정 페이지로 이동 함수 반환\n      previousPage, // 이전 페이지로 이동 함수 반환\n      nextPage, // 다음 페이지로 이동 함수 반환\n      popularItems, // 인기 영화 목록 반환\n      goToPopularView, // 인기 보기 뷰 이동 함수 반환\n      toggleLocalStorage, // 로컬 스토리지 토글 함수 반환\n      isItemInLocalStorage, // 로컬 스토리지에 영화가 있는지 확인하는 함수 반환\n    };\n  },\n});\n</script>\n\n<style scoped>\n\n.grid-view {\n  padding: 0; /* 내부 여백 없음 */\n  overflow: hidden; /* 스크롤 제거 */\n  background-color: #141414; /* 배경색 설정 */\n}\n\n.grid-container {\n  margin-top: 10px; /* 상단 여백 설정 */\n  display: grid; /* 그리드 레이아웃 사용 */\n  grid-template-columns: repeat(10, 1fr); /* 한 줄에 10개 아이템 */\n  gap: 10px; /* 각 아이템 사이의 간격 설정 */\n  padding: 0 30px; /* 좌우 여백 설정 */\n  overflow: hidden; /* 스크롤 제거 */\n}\n\n.grid-item {\n  transition: transform 0.2s; /* 크기 변화 시 부드러운 트랜지션 설정 */\n}\n\n.grid-item:hover {\n  transform: scale(1.03); /* 호버 시 크기 확대 */\n}\n\n.poster-title {\n  position: absolute; /* 절대 위치 설정 */\n  bottom: 5px; /* 하단 여백 설정 */\n  left: 5px; /* 왼쪽 여백 설정 */\n  font-size: 0.8em; /* 글꼴 크기 설정 */\n  padding: 3px; /* 내부 여백 설정 */\n  border-radius: 3px; /* 모서리 둥글게 설정 */\n}\n\n.poster-image {\n  width: 100%; /* 너비 100% 설정 */\n  height: auto; /* 높이는 자동 설정 */\n  border-radius: 3px; /* 모서리 둥글게 설정 */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4); /* 그림자 설정 */\n  border: 1px solid transparent; /* 기본 테두리는 투명 설정 */\n}\n\n.selected-poster {\n  border-color: #e50914; /* 로컬 스토리지에 저장된 경우 테두리 빨강 설정 */\n}\n\n.pagination {\n  display: flex; /* 플렉스 레이아웃 사용 */\n  justify-content: center; /* 수평 가운데 정렬 */\n  align-items: center; /* 수직 가운데 정렬 */\n  gap: 5px; /* 각 아이템 사이의 간격 설정 */\n  margin-top: 20px; /* 상단 여백 설정 */\n}\n\n.page-number {\n  padding: 5px; /* 내부 여백 설정 */\n  font-size: 0.9em; /* 글꼴 크기 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  transition: background-color 0.2s; /* 배경색 변화 시 부드러운 트랜지션 설정 */\n}\n\n.page-number:hover {\n  background-color: #333333; /* 호버 시 배경색 변경 */\n  border-radius: 3px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.page-number.active {\n  font-weight: bold; /* 굵은 글꼴 설정 */\n  text-decoration: underline; /* 밑줄 설정 */\n}\n\nbutton {\n  margin: 10px; /* 바깥 여백 설정 */\n  padding: 8px; /* 내부 여백 설정 */\n  font-size: 0.9em; /* 글꼴 크기 설정 */\n  background-color: #f40612; /* 배경색 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 3px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n#table-view {\n  overflow-y: hidden !important; /* 세로 스크롤 제거 */\n}\n</style>\n","import { render } from \"./TableView.vue?vue&type=template&id=238ef5e6&scoped=true&ts=true\"\nimport script from \"./TableView.vue?vue&type=script&lang=ts\"\nexport * from \"./TableView.vue?vue&type=script&lang=ts\"\n\nimport \"./TableView.vue?vue&type=style&index=0&id=238ef5e6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-238ef5e6\"]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"loading\"\n}\nconst _hoisted_2 = { id: \"wishlist\" }\nconst _hoisted_3 = { class: \"poster-list\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = [\"src\"]\nconst _hoisted_6 = { class: \"poster-title\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (_ctx.isFetching)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading...\"))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_ctx.showTopButton)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.scrollToTop && _ctx.scrollToTop(...args))),\n            class: \"top-button\"\n          }, \"TOP\"))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.popularItems, (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: item.id,\n            class: _normalizeClass([\"poster-container\", {'selected-poster': _ctx.isItemInLocalStorage(item)}]),\n            onClick: ($event: any) => (_ctx.toggleLocalStorage(item))\n          }, [\n            _createElementVNode(\"img\", {\n              src: item.image,\n              alt: \"movie poster\",\n              class: \"poster-image\"\n            }, null, 8, _hoisted_5),\n            _createElementVNode(\"p\", _hoisted_6, _toDisplayString(item.name), 1)\n          ], 10, _hoisted_4))\n        }), 128))\n      ])\n    ])\n  ], 64))\n}","<template>\n    <div v-if=\"isFetching\" class=\"loading\">Loading...</div>\n    <div id=\"wishlist\">\n      <button v-if=\"showTopButton\" @click=\"scrollToTop\" class=\"top-button\">TOP</button>\n      <!-- 포스터 리스트 추가 -->\n      <div class=\"poster-list\">\n        <div\n          v-for=\"item in popularItems\"\n          :key=\"item.id\"\n          class=\"poster-container\"\n          @click=\"toggleLocalStorage(item)\"\n          :class=\"{'selected-poster': isItemInLocalStorage(item)}\"\n        >\n          <img :src=\"item.image\" alt=\"movie poster\" class=\"poster-image\" />\n          <p class=\"poster-title\">{{ item.name }}</p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script lang=\"ts\">\n  import { defineComponent, ref, onMounted, onBeforeUnmount } from 'vue';\n  import { useRouter } from 'vue-router';\n  \n  export default defineComponent({\n    name: 'WishlistViewComponent',\n    setup() {\n      const popularItems = ref<any[]>([]);\n      const currentPage = ref(1);\n      const isFetching = ref(false);\n      const showTopButton = ref(false);\n      const router = useRouter();\n  \n      const fetchPopularMovies = async () => {\n        if (isFetching.value) return;\n        isFetching.value = true;\n  \n        try {\n          // LocalStorage에서 아이템 불러오기\n          const storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n          popularItems.value = [...storedItems];\n        } catch (error) {\n          console.error('Failed to fetch popular movies:', error);\n        } finally {\n          isFetching.value = false;\n        }\n      };\n  \n      // 스크롤 이벤트를 처리하는 함수\n      const handleScroll = () => {\n        // 화면의 맨 아래에 도달했는지 확인\n        const bottomOfWindow =\n          window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 10;\n        if (bottomOfWindow) {\n          fetchPopularMovies();\n        }\n  \n        // 스크롤 위치에 따라 TOP 버튼 표시 여부 설정\n        showTopButton.value = window.scrollY > 200;\n      };\n  \n      // TOP 버튼 클릭 시 화면 맨 위로 스크롤하는 함수\n      const scrollToTop = () => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      };\n  \n      // Table View로 이동하는 함수\n      const goToPopularView = () => {\n        router.push('/popular');\n      };\n  \n      // 로컬 스토리지에 포스터 데이터를 저장하거나 삭제하는 함수\n      const toggleLocalStorage = (item: any) => {\n        let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n        const itemIndex = storedItems.findIndex((storedItem: any) => storedItem.id === item.id);\n  \n        if (itemIndex === -1) {\n          // 아이템이 로컬 스토리지에 없으면 추가\n          storedItems.push(item);\n        } else {\n          // 아이템이 이미 로컬 스토리지에 있으면 제거\n          storedItems.splice(itemIndex, 1);\n        }\n  \n        localStorage.setItem('selectedMovies', JSON.stringify(storedItems));\n        popularItems.value = [...storedItems];\n      };\n  \n      // 로컬 스토리지에 아이템이 있는지 확인하는 함수\n      const isItemInLocalStorage = (item: any) => {\n        let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n        return storedItems.some((storedItem: any) => storedItem.id === item.id);\n      };\n  \n      // 컴포넌트가 마운트될 때 호출되는 함수\n      onMounted(() => {\n        // 초기 로드 시 로컬 스토리지 데이터 가져오기\n        fetchPopularMovies();\n        // 스크롤 이벤트 리스너 추가\n        window.addEventListener('scroll', handleScroll);\n      });\n  \n      // 컴포넌트가 언마운트될 때 호출되는 함수\n      onBeforeUnmount(() => {\n        // 스크롤 이벤트 리스너 제거\n        window.removeEventListener('scroll', handleScroll);\n      });\n  \n      return {\n        popularItems,\n        isFetching,\n        showTopButton,\n        scrollToTop,\n        goToPopularView,\n        toggleLocalStorage,\n        isItemInLocalStorage,\n      };\n    },\n  });\n  </script>\n  \n  <style scoped>\n  /* 기존 스타일 유지 */\n  .loading {\n    position: fixed;\n    bottom: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: rgba(0, 0, 0, 0.8);\n    color: #ffffff;\n    padding: 10px;\n    border-radius: 5px;\n    z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n  }\n  \n  .top-button {\n    position: fixed;\n    bottom: 80px;\n    right: 20px;\n    background-color: #e50914;\n    color: #ffffff;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n  }\n  \n  .top-button:hover {\n    background-color: #f40612;\n  }\n  \n  /* 포스터 이미지와 제목을 포함한 컨테이너 */\n  .poster-list {\n    margin-top: 50px;\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    gap: 20px;\n  }\n  \n  .poster-container {\n    position: relative;\n    transition: transform 0.3s;\n    cursor: pointer;\n  }\n  \n  .poster-container:hover {\n    transform: scale(1.1);\n  }\n  \n  .poster-image {\n    width: 100%;\n    border-radius: 10px;\n    transition: transform 0.3s;\n    border: 2px solid transparent;\n    border-color: #e50914; /* 로컬 스토리지에 있는 경우 얇은 빨간 테두리 추가 */\n  }\n  \n  .selected-poster {\n    border-color: #e50914; /* 로컬 스토리지에 있는 경우 얇은 빨간 테두리 추가 */\n  }\n  \n  .poster-title {\n    position: absolute;\n    bottom: 10px;\n    left: 10px;\n    color: #ffffff;\n    background: rgba(0, 0, 0, 0.5);\n    padding: 5px 10px;\n    border-radius: 5px;\n    transition: color 0.3s;\n  }\n  \n  .poster-container:hover .poster-title {\n    color: #ffffff; /* 글자 색상 변경 */\n  }\n   /* 모바일 크기에 맞는 반응형 디자인 */\n   @media (max-width: 768px) {\n    .poster-list {\n      grid-template-columns: repeat(2, 1fr);\n      gap: 10px;\n      padding: 10px;\n      width: 100%;\n    }\n\n    .poster-title {\n      font-size: 12px;\n    }\n\n    .poster-container {\n      margin: 0 auto;\n      width: 100%;\n    }\n\n    .poster-image {\n      width: 100%;\n      height: auto;\n      border-radius: 10px;\n    }\n\n    .top-button {\n      padding: 8px 12px;\n      font-size: 0.8em;\n    }\n  }\n\n  @media (max-width: 480px) {\n    .poster-list {\n      grid-template-columns: repeat(2, minmax(0, 1fr));\n      gap: 5px;\n      padding: 5px;\n    }\n\n    .poster-image {\n      margin-bottom: 10px;\n    }\n\n    .poster-title {\n      font-size: 10px;\n    }\n\n    .top-button {\n      bottom: 60px;\n      right: 10px;\n      font-size: 0.7em;\n    }\n  }\n  </style>\n  ","import { render } from \"./WishlistView.vue?vue&type=template&id=96404bda&scoped=true&ts=true\"\nimport script from \"./WishlistView.vue?vue&type=script&lang=ts\"\nexport * from \"./WishlistView.vue?vue&type=script&lang=ts\"\n\nimport \"./WishlistView.vue?vue&type=style&index=0&id=96404bda&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-96404bda\"]])\n\nexport default __exports__","import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"search-filter-container\" }\nconst _hoisted_2 = { class: \"search-container\" }\nconst _hoisted_3 = { class: \"filter-section\" }\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"loading\"\n}\nconst _hoisted_6 = { class: \"grid-view\" }\nconst _hoisted_7 = { class: \"grid-container\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = [\"src\", \"alt\"]\nconst _hoisted_10 = { class: \"poster-title\" }\nconst _hoisted_11 = {\n  ref: \"infiniteScrollTarget\",\n  class: \"infinite-scroll-target\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.searchQuery) = $event)),\n          placeholder: \"Search movies...\",\n          class: \"search-input\"\n        }, null, 512), [\n          [_vModelText, _ctx.searchQuery]\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.searchMovies && _ctx.searchMovies(...args))),\n          class: \"search-button\"\n        }, \"Search\")\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"label\", null, [\n          _cache[8] || (_cache[8] = _createTextVNode(\" Genre: \")),\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.selectedGenre) = $event))\n          }, [\n            _cache[7] || (_cache[7] = _createElementVNode(\"option\", { value: \"\" }, \"All\", -1)),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.genres, (genre) => {\n              return (_openBlock(), _createElementBlock(\"option\", {\n                key: genre.id,\n                value: genre.id\n              }, _toDisplayString(genre.name), 9, _hoisted_4))\n            }), 128))\n          ], 512), [\n            [_vModelSelect, _ctx.selectedGenre]\n          ])\n        ]),\n        _createElementVNode(\"label\", null, [\n          _cache[10] || (_cache[10] = _createTextVNode(\" Rating: \")),\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.selectedRatingRange) = $event))\n          }, _cache[9] || (_cache[9] = [\n            _createStaticVNode(\"<option value=\\\"\\\" data-v-4d18d958>All</option><option value=\\\"0-4\\\" data-v-4d18d958>4 and below</option><option value=\\\"4-5\\\" data-v-4d18d958>4 - 5</option><option value=\\\"5-6\\\" data-v-4d18d958>5 - 6</option><option value=\\\"6-7\\\" data-v-4d18d958>6 - 7</option><option value=\\\"7-8\\\" data-v-4d18d958>7 - 8</option><option value=\\\"8-9\\\" data-v-4d18d958>8 - 9</option><option value=\\\"9-10\\\" data-v-4d18d958>9 - 10</option>\", 8)\n          ]), 512), [\n            [_vModelSelect, _ctx.selectedRatingRange]\n          ])\n        ]),\n        _createElementVNode(\"label\", null, [\n          _cache[12] || (_cache[12] = _createTextVNode(\" Sort By: \")),\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.sortBy) = $event))\n          }, _cache[11] || (_cache[11] = [\n            _createElementVNode(\"option\", { value: \"popularity.asc\" }, \"Popularity (Ascending)\", -1),\n            _createElementVNode(\"option\", { value: \"popularity.desc\" }, \"Popularity (Descending)\", -1)\n          ]), 512), [\n            [_vModelSelect, _ctx.sortBy]\n          ])\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.resetFilters && _ctx.resetFilters(...args))),\n          class: \"reset-button\"\n        }, \"Reset Filters\")\n      ])\n    ]),\n    (_ctx.isFetching)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"Loading...\"))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"div\", _hoisted_7, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.movies, (movie) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: movie.id,\n            class: \"grid-item poster-container\",\n            onClick: ($event: any) => (_ctx.toggleLocalStorage(movie))\n          }, [\n            _createElementVNode(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n              alt: movie.title,\n              class: _normalizeClass([\"poster-image\", {'selected-poster': _ctx.isItemInLocalStorage(movie)}])\n            }, null, 10, _hoisted_9),\n            _createElementVNode(\"p\", _hoisted_10, _toDisplayString(movie.title), 1)\n          ], 8, _hoisted_8))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", _hoisted_11, null, 512)\n    ]),\n    (_ctx.showTopButton)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 1,\n          onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.scrollToTop && _ctx.scrollToTop(...args))),\n          class: \"top-button\"\n        }, \"TOP\"))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","<template>\n  <div class=\"search-filter-container\">\n    <!-- 검색창과 버튼 섹션 -->\n    <div class=\"search-container\">\n      <!-- 사용자가 영화 제목을 검색할 수 있는 입력 필드 -->\n      <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search movies...\" class=\"search-input\" /> <!-- 검색어 입력 필드 -->\n      <!-- 검색 버튼 -->\n      <button @click=\"searchMovies\" class=\"search-button\">Search</button> <!-- 검색 버튼 클릭 시 영화 검색 -->\n    </div>\n\n    <!-- 필터 섹션 -->\n    <div class=\"filter-section\">\n      <!-- 장르 필터 -->\n      <label>\n        Genre:\n        <select v-model=\"selectedGenre\"> <!-- 장르 선택 드롭다운 -->\n          <option value=\"\">All</option> <!-- 모든 장르 옵션 -->\n          <!-- 사용 가능한 장르 목록을 동적으로 생성 -->\n          <option v-for=\"genre in genres\" :key=\"genre.id\" :value=\"genre.id\">\n            {{ genre.name }} <!-- 각 장르 이름 표시 -->\n          </option>\n        </select>\n      </label>\n\n      <!-- 평점 필터 -->\n      <label>\n        Rating:\n        <select v-model=\"selectedRatingRange\"> <!-- 평점 범위 선택 드롭다운 -->\n          <option value=\"\">All</option> <!-- 모든 평점 옵션 -->\n          <!-- 평점 범위 필터 옵션 -->\n          <option value=\"0-4\">4 and below</option> <!-- 평점 4 이하 -->\n          <option value=\"4-5\">4 - 5</option> <!-- 평점 4에서 5 사이 -->\n          <option value=\"5-6\">5 - 6</option> <!-- 평점 5에서 6 사이 -->\n          <option value=\"6-7\">6 - 7</option> <!-- 평점 6에서 7 사이 -->\n          <option value=\"7-8\">7 - 8</option> <!-- 평점 7에서 8 사이 -->\n          <option value=\"8-9\">8 - 9</option> <!-- 평점 8에서 9 사이 -->\n          <option value=\"9-10\">9 - 10</option> <!-- 평점 9에서 10 사이 -->\n        </select>\n      </label>\n\n      <!-- 정렬 옵션 필터 -->\n      <label>\n        Sort By:\n        <select v-model=\"sortBy\"> <!-- 정렬 기준 선택 드롭다운 -->\n          <option value=\"popularity.asc\">Popularity (Ascending)</option> <!-- 인기도 오름차순 -->\n          <option value=\"popularity.desc\">Popularity (Descending)</option> <!-- 인기도 내림차순 -->\n        </select>\n      </label>\n\n      <!-- 필터 초기화 버튼 -->\n      <button @click=\"resetFilters\" class=\"reset-button\">Reset Filters</button> <!-- 모든 필터 초기화 버튼 -->\n    </div>\n  </div>\n\n  <!-- 로딩 표시 (영화 데이터가 로딩 중일 때 표시됨) -->\n  <div v-if=\"isFetching\" class=\"loading\">Loading...</div> <!-- 데이터 로딩 중일 때 로딩 표시 -->\n\n  <!-- 영화 목록 그리드 뷰 -->\n  <div class=\"grid-view\">\n    <div class=\"grid-container\">\n      <!-- 각 영화 포스터 및 제목을 표시 -->\n      <div v-for=\"movie in movies\" :key=\"movie.id\" class=\"grid-item poster-container\" @click=\"toggleLocalStorage(movie)\"> <!-- 영화 아이템 클릭 시 로컬 스토리지 추가/제거 -->\n        <img :src=\"`https://image.tmdb.org/t/p/w500${movie.poster_path}`\" :alt=\"movie.title\" class=\"poster-image\" :class=\"{'selected-poster': isItemInLocalStorage(movie)}\" /> <!-- 영화 포스터 이미지 -->\n        <p class=\"poster-title\">{{ movie.title }}</p> <!-- 영화 제목 표시 -->\n      </div>\n    </div>\n    <!-- 무한 스크롤을 위한 감시 요소 -->\n    <div ref=\"infiniteScrollTarget\" class=\"infinite-scroll-target\"></div> <!-- 무한 스크롤을 위한 타겟 요소 -->\n  </div>\n\n  <!-- 페이지 상단으로 이동 버튼 -->\n  <button v-if=\"showTopButton\" @click=\"scrollToTop\" class=\"top-button\">TOP</button> <!-- 페이지 상단으로 이동 버튼 -->\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { useRouter } from 'vue-router';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport default defineComponent({\n  name: 'SearchViewComponent',\n  setup() {\n    // 상태 변수들 정의\n    const movies = ref<any[]>([]); // 영화 목록 데이터\n    const genres = ref<any[]>([]); // 장르 목록 데이터\n    const selectedGenre = ref<string>(''); // 선택된 장르\n    const selectedRatingRange = ref<string>(''); // 선택된 평점 범위\n    const sortBy = ref<string>('popularity'); // 정렬 기준\n    const isFetching = ref(false); // 데이터를 로딩 중인지 여부\n    const currentPage = ref(1); // 현재 페이지 번호\n    const showTopButton = ref(false); // 상단 이동 버튼 표시 여부\n    const searchQuery = ref<string>(''); // 검색어\n    const infiniteScrollTarget = ref<HTMLElement | null>(null); // 무한 스크롤 감시 요소\n\n\n    // 영화 목록을 가져오는 함수\n    const fetchMovies = async (page = 1) => {\n      if (isFetching.value) return; // 이미 데이터를 로딩 중인 경우 함수 종료\n      isFetching.value = true; // 로딩 상태 설정\n\n      const API_KEY = process.env.VUE_APP_TMDB_API_KEY;\n\n      let url = `${BASE_URL}/discover/movie?api_key=${API_KEY}&language=ko-KR&page=${page}`; // 영화 데이터 요청 URL 생성\n\n      // 선택된 필터 적용\n      if (selectedGenre.value) {\n        url += `&with_genres=${selectedGenre.value}`; // 선택된 장르 필터 추가\n      }\n\n      if (selectedRatingRange.value) {\n        const [minRating, maxRating] = selectedRatingRange.value.split('-'); // 평점 범위 분할\n        url += `&vote_average.gte=${minRating}&vote_average.lte=${maxRating}`; // 평점 범위 필터 추가\n      }\n\n      url += `&sort_by=${sortBy.value}`; // 정렬 기준 추가\n\n      // 검색어가 있는 경우 검색 API 사용\n      if (searchQuery.value) {\n        url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=ko-KR&query=${searchQuery.value}&page=${page}`; // 검색어 기반 영화 검색 URL 생성\n      }\n\n      try {\n        // API 호출 및 데이터 처리\n        const response = await fetch(url); // 영화 데이터를 가져오기 위해 API 호출\n        const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n        movies.value = [...movies.value, ...data.results]; // 기존 영화 목록에 새 데이터 추가\n      } catch (error) {\n        console.error('Failed to fetch movies:', error); // 오류 발생 시 콘솔에 오류 메시지 출력\n      } finally {\n        isFetching.value = false; // 로딩 상태 해제\n      }\n    };\n\n    // 장르 목록을 가져오는 함수\n    const fetchGenres = async () => {\n      const API_KEY = process.env.VUE_APP_TMDB_API_KEY\n      const url = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=ko-KR`; // 장르 목록 요청 URL 생성\n      try {\n        const response = await fetch(url); // 장르 데이터를 가져오기 위해 API 호출\n        const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n        genres.value = data.genres; // 장르 목록 설정\n      } catch (error) {\n        console.error('Failed to fetch genres:', error); // 오류 발생 시 콘솔에 오류 메시지 출력\n      }\n    };\n\n    // 필터 값이 변경될 때마다 영화 목록 초기화 후 다시 가져오기\n    watch([selectedGenre, selectedRatingRange, sortBy], () => {\n      movies.value = []; // 기존 데이터를 초기화\n      currentPage.value = 1; // 페이지 번호를 초기화\n      fetchMovies(currentPage.value); // 첫 페이지의 영화 목록 다시 가져오기\n    });\n\n    // 검색 버튼 클릭 시 동작\n    const searchMovies = () => {\n      // 검색어와 검색 횟수를 로컬 스토리지에 저장\n      let storedSearches = JSON.parse(localStorage.getItem('searchQueries') || '{}'); // 로컬 스토리지에서 기존 검색 기록 가져오기\n      if (searchQuery.value) {\n        if (storedSearches[searchQuery.value]) {\n          storedSearches[searchQuery.value]++; // 기존 검색어의 검색 횟수 증가\n        } else {\n          storedSearches[searchQuery.value] = 1; // 새로운 검색어의 검색 횟수 설정\n        }\n        localStorage.setItem('searchQueries', JSON.stringify(storedSearches)); // 업데이트된 검색 기록을 로컬 스토리지에 저장\n      }\n\n      movies.value = []; // 기존 영화 목록 초기화\n      currentPage.value = 1; // 페이지 번호 초기화\n      fetchMovies(currentPage.value); // 첫 페이지의 영화 목록 다시 가져오기\n    };\n\n    // 필터 초기화 함수\n    const resetFilters = () => {\n      selectedGenre.value = ''; // 선택된 장르 초기화\n      selectedRatingRange.value = ''; // 선택된 평점 범위 초기화\n      sortBy.value = 'popularity'; // 정렬 기준 초기화\n      searchQuery.value = ''; // 검색어 초기화\n    };\n\n    // 무한 스크롤을 처리하는 함수\n    const handleIntersect = (entries: IntersectionObserverEntry[]) => {\n      const [entry] = entries; // 첫 번째 감시 항목 가져오기\n      if (entry.isIntersecting && !isFetching.value) { // 감시 항목이 화면에 나타나고 데이터를 로딩 중이 아닌 경우\n        currentPage.value++; // 페이지 번호 증가\n        fetchMovies(currentPage.value); // 다음 페이지의 영화 목록 가져오기\n      }\n    };\n\n    // 영화 포스터 클릭 시 로컬 스토리지에 영화 정보 추가 또는 제거\n    const toggleLocalStorage = (movie: any) => {\n      let storedMovies = JSON.parse(localStorage.getItem('selectedMovies') || '[]'); // 로컬 스토리지에서 선택된 영화 목록 가져오기\n      const movieIndex = storedMovies.findIndex((storedMovie: any) => storedMovie.id === movie.id); // 영화가 이미 저장되어 있는지 확인\n\n      if (movieIndex === -1) {\n        // 아이템이 로컬 스토리지에 없으면 추가\n        storedMovies.push({ id: movie.id, name: movie.title, image: `https://image.tmdb.org/t/p/w500${movie.poster_path}` }); // 영화 정보를 저장 목록에 추가\n      } else {\n        // 아이템이 이미 로컬 스토리지에 있으면 제거\n        storedMovies.splice(movieIndex, 1); // 영화 정보를 저장 목록에서 제거\n      }\n\n      localStorage.setItem('selectedMovies', JSON.stringify(storedMovies)); // 업데이트된 영화 목록을 로컬 스토리지에 저장\n      movies.value = [...movies.value]; // 반응성 트리거\n    };\n\n    // 로컬 스토리지에 영화가 있는지 확인하는 함수\n    const isItemInLocalStorage = (movie: any) => {\n      let storedMovies = JSON.parse(localStorage.getItem('selectedMovies') || '[]'); // 로컬 스토리지에서 선택된 영화 목록 가져오기\n      return storedMovies.some((storedMovie: any) => storedMovie.id === movie.id); // 해당 영화가 저장되어 있는지 확인\n    };\n\n    // 페이지 상단으로 스크롤하는 함수\n    const scrollToTop = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' }); // 페이지 상단으로 부드럽게 스크롤\n    };\n\n    // 스크롤 이벤트 핸들러 (상단 이동 버튼 표시 여부 설정)\n    const handleScroll = () => {\n      showTopButton.value = window.scrollY > 200; // 스크롤 위치가 200px 이상일 때 상단 이동 버튼 표시\n    };\n\n    // 컴포넌트가 마운트될 때 호출되는 함수\n    onMounted(() => {\n      fetchMovies(); // 영화 목록 가져오기\n      fetchGenres(); // 장르 목록 가져오기\n\n      // 무한 스크롤을 위한 IntersectionObserver 생성 및 설정\n      const observer = new IntersectionObserver(handleIntersect, {\n        root: null, // 루트 요소는 뷰포트\n        rootMargin: '0px', // 루트 여백 없음\n        threshold: 1.0, // 감시 요소가 100% 보일 때 트리거\n      });\n\n      if (infiniteScrollTarget.value) {\n        observer.observe(infiniteScrollTarget.value); // 무한 스크롤 타겟 요소 감시 시작\n      }\n\n      // 스크롤 이벤트 리스너 추가\n      window.addEventListener('scroll', handleScroll); // 스크롤 이벤트 리스너 추가\n    });\n\n    // 컴포넌트가 언마운트될 때 호출되는 함수 (스크롤 이벤트 리스너 제거)\n    onBeforeUnmount(() => {\n      window.removeEventListener('scroll', handleScroll); // 스크롤 이벤트 리스너 제거\n    });\n\n    return {\n      movies, // 영화 목록 상태 반환\n      genres, // 장르 목록 상태 반환\n      selectedGenre, // 선택된 장르 상태 반환\n      selectedRatingRange, // 선택된 평점 범위 상태 반환\n      sortBy, // 정렬 기준 상태 반환\n      isFetching, // 로딩 상태 반환\n      searchQuery, // 검색어 상태 반환\n      resetFilters, // 필터 초기화 함수 반환\n      searchMovies, // 영화 검색 함수 반환\n      infiniteScrollTarget, // 무한 스크롤 타겟 요소 반환\n      toggleLocalStorage, // 로컬 스토리지 토글 함수 반환\n      isItemInLocalStorage, // 로컬 스토리지에 영화가 있는지 확인하는 함수 반환\n      scrollToTop, // 상단 이동 함수 반환\n      showTopButton, // 상단 이동 버튼 표시 여부 상태 반환\n    };\n  },\n});\n</script>\n\n<style scoped>\n.search-filter-container {\n  display: flex;\n  justify-content: space-between; /* 검색창과 필터 섹션을 양 끝에 배치 */\n  align-items: center; /* 검색창과 필터 섹션의 수직 가운데 정렬 */\n  margin-top: 51px; /* 상단 여백 */\n  margin-bottom: 20px; /* 하단 여백 */\n}\n\n.filter-section {\n  display: flex;\n  flex-direction: row; /* 가로 방향으로 배치 */\n  gap: 15px; /* 각 필터 사이의 간격 */\n}\n\n.search-container {\n  display: flex;\n  gap: 5px; /* 검색창과 버튼 사이의 간격 */\n  align-items: center; /* 검색창과 버튼의 수직 가운데 정렬 */\n}\n\n/* 검색 입력 필드 스타일 */\n.search-input {\n  padding: 8px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  border: 1px solid #e74c3c; /* 테두리 색상 설정 */\n  background-color: #f8d7da; /* 배경 색상 설정 */\n  transition: border-color 0.3s ease; /* 테두리 색상이 부드럽게 변경되도록 설정 */\n}\n\n/* 검색 입력 필드 포커스 스타일 */\n.search-input:focus {\n  border-color: #c0392b; /* 포커스 시 테두리 색상 변경 */\n  background-color: #fadbd8; /* 포커스 시 배경 색상 변경 */\n}\n\n/* 검색 버튼 스타일 */\n.search-button {\n  padding: 8px 15px; /* 내부 여백 */\n  border: none; /* 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  background-color: #e74c3c; /* 배경 색상 설정 */\n  color: white; /* 텍스트 색상 설정 */\n  transition: background-color 0.3s ease; /* 배경 색상이 부드럽게 변경되도록 설정 */\n}\n\n/* 검색 버튼 호버 스타일 */\n.search-button:hover {\n  background-color: #c0392b; /* 호버 시 배경 색상 변경 */\n}\n\n/* 필터 섹션의 레이블 및 셀렉트 스타일 */\nlabel {\n  display: flex;\n  flex-direction: column; /* 세로 방향으로 배치 */\n  font-weight: bold; /* 텍스트 굵게 설정 */\n  color: #c0392b; /* 텍스트 색상 설정 */\n}\n\nselect, input {\n  margin-top: 5px; /* 상단 여백 */\n  padding: 8px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  border: 1px solid #e74c3c; /* 테두리 색상 설정 */\n  background-color: #f8d7da; /* 배경 색상 설정 */\n  transition: border-color 0.3s ease; /* 테두리 색상이 부드럽게 변경되도록 설정 */\n}\n\n/* 셀렉트 요소 스타일 */\nselect {\n  appearance: none; /* 기본 드롭다운 화살표 제거 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\nselect:focus, input:focus {\n  border-color: #c0392b; /* 포커스 시 테두리 색상 변경 */\n  background-color: #fadbd8; /* 포커스 시 배경 색상 변경 */\n}\n\nselect option {\n  padding: 10px; /* 내부 여백 */\n  background-color: rgb(0, 0, 0); /* 배경 색상 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  font-size: 16px; /* 글꼴 크기 설정 */\n  color: #c0392b; /* 텍스트 색상 설정 */\n}\n\n/* 필터 초기화 버튼 스타일 */\n.reset-button {\n  padding: 10px 20px; /* 내부 여백 */\n  border: none; /* 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  background-color: #e74c3c; /* 배경 색상 설정 */\n  color: white; /* 텍스트 색상 설정 */\n  transition: background-color 0.3s ease; /* 배경 색상이 부드럽게 변경되도록 설정 */\n}\n\n/* 로딩 표시 스타일 */\n.loading {\n  position: fixed; /* 고정 위치 설정 */\n  bottom: 20px; /* 하단 위치 설정 */\n  left: 50%; /* 왼쪽에서 50% 이동 */\n  transform: translateX(-50%); /* 가로 중앙 정렬 */\n  background-color: rgba(255, 255, 255, 0.8); /* 반투명 흰색 배경 */\n  color: #000000; /* 텍스트 색상 설정 */\n  padding: 50px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n/* 그리드 컨테이너 스타일 */\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(6, 1fr); /* 한 줄에 6개 아이템 */\n  gap: 20px; /* 각 아이템 사이의 간격 */\n  margin: 20px 0; /* 상하 여백 */\n}\n\n.poster-container {\n  position: relative; /* 포스터 위치 설정 */\n  transition: transform 0.3s; /* 크기 변경 시 부드럽게 적용 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n/* 영화 포스터 이미지 스타일 */\n.poster-image {\n  width: 100%; /* 포스터 이미지 너비 설정 */\n  border-radius: 10px; /* 모서리 둥글게 */\n  transition: transform 0.3s; /* 이미지 확대/축소 시 부드럽게 적용 */\n  border: 2px solid transparent; /* 기본 테두리는 투명하게 설정 */\n}\n\n/* 로컬 스토리지에 저장된 포스터 테두리 스타일 */\n.selected-poster {\n  border-color: #e50914; /* 로컬 스토리지에 저장된 포스터의 테두리 색상 설정 */\n}\n\n/* 영화 제목 스타일 */\n.poster-title {\n  position: absolute; /* 절대 위치 설정 */\n  bottom: 10px; /* 하단에서 10px 위치 */\n  left: 10px; /* 왼쪽에서 10px 위치 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  background: rgba(0, 0, 0, 0.5); /* 반투명 검정 배경 */\n  padding: 5px 10px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  transition: color 0.3s; /* 색상 변경 시 부드럽게 적용 */\n}\n\n/* TOP 버튼 스타일 */\n.top-button {\n  position: fixed; /* 고정 위치 설정 */\n  bottom: 80px; /* 하단에서 80px 위치 */\n  right: 20px; /* 오른쪽에서 20px 위치 */\n  background-color: #e50914; /* 배경 색상 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  padding: 10px 15px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  z-index: 2000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n/* 반응형 스타일 (768px 이하 화면 크기) */\n@media (max-width: 768px) {\n  .search-filter-container {\n    flex-direction: column; /* 세로 방향으로 배치 */\n    align-items: flex-start; /* 시작점에 맞춰 정렬 */\n    gap: 5px; /* 각 필터 사이의 간격 */\n  }\n\n  .filter-section {\n    flex-direction: row; /* 세로 방향으로 배치 */\n    align-items: flex-start; /* 시작점에 맞춰 정렬 */\n    gap: 10px; /* 각 필터 사이의 간격 */\n  }\n\n  .grid-container {\n    grid-template-columns: repeat(2, 1fr); /* 한 줄에 2개 아이템 */\n    gap: 10px; /* 각 아이템 사이의 간격 */\n  }\n\n  .search-input, select, .search-button, .reset-button {\n    width: 100%; /* 너비 100% 설정 */\n    max-width: none; /* 최대 너비 제한 없음 */\n  }\n\n  .poster-container {\n    transition: transform 0.2s; /* 크기 변경 시 부드럽게 적용 */\n  }\n}\n\n/* 반응형 스타일 (480px 이하 화면 크기) */\n@media (max-width: 480px) {\n  .grid-container {\n    grid-template-columns: repeat(1, 1fr); /* 한 줄에 1개 아이템 */\n  }\n\n  .poster-title {\n    font-size: 0.8rem; /* 글꼴 크기 축소 */\n    padding: 3px 7px; /* 내부 여백 축소 */\n  }\n\n  .top-button {\n    bottom: 100px; /* 하단에서 100px 위치로 수정 */\n  }\n}\n</style>\n","import { render } from \"./SearchView.vue?vue&type=template&id=4d18d958&scoped=true&ts=true\"\nimport script from \"./SearchView.vue?vue&type=script&lang=ts\"\nexport * from \"./SearchView.vue?vue&type=script&lang=ts\"\n\nimport \"./SearchView.vue?vue&type=style&index=0&id=4d18d958&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4d18d958\"]])\n\nexport default __exports__","<template>\n    <div id=\"app\">\n      <transition name=\"fade\">\n        <!-- currentComponent 변수를 사용하여 SignIn과 SignUp 컴포넌트를 전환하는 부분 -->\n        <component :is=\"currentComponent\" @switch-form=\"switchForm\" @login-success=\"navigateHome\" @signup-success=\"navigateSignin\"/>\n      </transition>\n    </div>\n  </template>\n  \n  <script>\n  import SignInComponent from '../components/SignIn.vue';\n  import SignUpComponent from '../components/SignUp.vue';\n  import { defineComponent } from 'vue';\n\n  export default defineComponent({\n    name: 'SignViewComponent',\n    data() {\n      return {\n        currentComponent: 'SignInComponent', // 초기 컴포넌트는 SignIn으로 설정\n      };\n    },\n    components: {\n      SignInComponent,\n      SignUpComponent,\n    },\n    methods: {\n      // SignIn과 SignUp 컴포넌트를 전환하는 메서드\n      switchForm() {\n        this.currentComponent = this.currentComponent === 'SignInComponent' ? 'SignUpComponent' : 'SignInComponent';\n      },\n      // 로그인 성공 시 홈 화면으로 이동하는 메서드\n      navigateHome() {\n        this.$router.push('/');\n      },\n      // 회원가입 성공 시 로그인 화면으로 전환하는 메서드\n      navigateSignin() {\n        this.currentComponent = 'SignInComponent';\n      }\n    },\n  });\n  </script>\n  \n  <style>\n  /* 컴포넌트 전환 시 페이드 효과 적용 */\n  .fade-enter-active, .fade-leave-active {\n    transition: opacity 0.5s;\n  }\n  .fade-enter, .fade-leave-to {\n    opacity: 0;\n  }\n\n\n  .netflix-toast {\n  background-color: #000000 !important; /* 강제로 어두운 배경 적용 */\n  border-left: 5px solid #000000 !important; /* 빨간색 테두리 강제 적용 */\n  border-radius: 6px;\n  color: rgb(181, 13, 13);\n  padding: 14px;\n  font-weight: bold;\n  font-size: 16px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.7);\n  max-width: 300px;\n  text-align: center;\n}\n\n/* Toast body 스타일 */\n.netflix-toast-body {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 아이콘 스타일 */\n.netflix-toast-body::before {\n  content: \"🎬\";\n  font-size: 20px;\n  color: #e50914;\n  margin-right: 10px;\n}\n\n/* 애니메이션 효과 */\n.netflix-toast {\n  animation: netflixFadeIn 0.4s ease;\n}\n\n/* 페이드 인 애니메이션 */\n@keyframes netflixFadeIn {\n  from {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n  </style>\n  \n  \n  ","<!-- SignIn.vue -->\n<template>\n  <div class=\"signin-form\">\n    <div class=\"signin-container\">\n      <h2 class=\"signin-title\">Login</h2> <!-- 로그인 폼 제목 출력 -->\n      <!-- 이메일이 유효하지 않을 경우 오류 메시지 출력 -->\n      <span v-if=\"!validEmail\" class=\"error\">Invalid email address</span>\n      <input type=\"email\" v-model=\"email\" class=\"signin-input\" placeholder=\"Enter your email\" /> <!-- 이메일 입력 필드 -->\n      <input type=\"password\" v-model=\"password\" class=\"signin-input\" placeholder=\"Enter your password\" /> <!-- 비밀번호 입력 필드 -->\n      <div class=\"signin-remember\">\n        <!-- 로그인 시 아이디와 비밀번호를 기억할지 여부 선택 -->\n        <input type=\"checkbox\" v-model=\"rememberMe\" /> <span>Remember me</span> <!-- rememberMe 체크박스 및 텍스트 -->\n      </div>\n      <button @click=\"handleLogin\" class=\"signin-button\">Login</button> <!-- 로그인 버튼 클릭 시 handleLogin 함수 호출 -->\n      <!-- 회원가입 폼으로 전환하는 버튼 -->\n      <button @click=\"$emit('switch-form')\" class=\"signup-button\">Go to Sign Up</button> <!-- 회원가입 폼으로 전환하는 버튼 -->\n      <!-- 로그인 실패 시 오류 메시지 출력 -->\n      <span v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</span> <!-- 오류 메시지 출력 -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'; // Vue 컴포넌트 정의를 위해 import\nimport { useAuthStore } from '../store/auth'; // 인증 관련 상태 관리 스토어 import\nimport { useToast } from 'vue-toastification'; // 토스트 알림 사용을 위해 import\n\nexport default defineComponent({\n  name: 'SignInComponent', // 컴포넌트 이름 설정\n  setup() {\n    const toast = useToast(); // 토스트 알림 사용 설정\n\n    // 토스트 메시지 출력 함수\n    const showToast = () => {\n      toast.success('Login Success'); // 로그인 성공 시 토스트 메시지 출력\n    };\n\n    return {\n      toast, // 토스트 알림 객체 반환\n      showToast, // 토스트 메시지 출력 함수 반환\n    };\n  },\n  data() {\n    return {\n      email: '', // 이메일 입력 값\n      password: '', // 비밀번호 입력 값\n      rememberMe: false, // 아이디와 비밀번호 기억 여부\n      errorMessage: '' // 오류 메시지\n    };\n  },\n  created() {\n    // rememberMe가 체크되어 있는 경우, 이메일과 비밀번호를 input에 미리 넣어줌\n    const rememberedUser = JSON.parse(localStorage.getItem('rememberedUser')); // 로컬 스토리지에서 rememberedUser 정보 가져오기\n    if (rememberedUser) {\n      this.email = rememberedUser.email; // 이메일 설정\n      this.password = rememberedUser.password; // 비밀번호 설정\n      this.rememberMe = true; // rememberMe 체크 상태 설정\n    }\n  },\n  computed: {\n    // 이메일이 유효한지 검사하는 계산 속성\n    validEmail() {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // 이메일 정규 표현식\n      return emailRegex.test(this.email); // 이메일 유효성 검사 결과 반환\n    },\n  },\n  methods: {\n    // 로그인 처리 메서드\n    handleLogin() {\n      if (!this.validEmail) { // 이메일이 유효하지 않은 경우\n        this.errorMessage = 'Please enter a valid email.'; // 오류 메시지 설정\n        return; // 함수 종료\n      }\n      if (this.password.length < 6) { // 비밀번호 길이가 6자 미만인 경우\n        this.errorMessage = 'Password must be at least 6 characters.'; // 오류 메시지 설정\n        return; // 함수 종료\n      }\n\n      // 로컬스토리지에 저장된 이메일과 비밀번호 배열 중 입력 이메일과 비밀번호와 일치하는지 확인\n      let users = JSON.parse(localStorage.getItem('userCredentials')); // 로컬 스토리지에서 사용자 자격 증명 목록 가져오기\n      if (!Array.isArray(users)) { // 가져온 데이터가 배열이 아닌 경우\n        users = []; // 빈 배열로 초기화\n      }\n\n      const userExists = users.some(user => user.email === this.email && user.password === this.password); // 사용자가 존재하는지 확인\n\n      if (userExists) { // 사용자가 존재하는 경우\n        const authStore = useAuthStore(); // 전역변수로 사용할 authStore 객체 가져오기\n        authStore.login({ email: this.email, password: this.password }); // 인증 상태 설정\n        if (this.rememberMe) { // rememberMe가 체크된 경우\n          localStorage.setItem('rememberedUser', JSON.stringify({ email: this.email, password: this.password })); // 이메일과 비밀번호를 로컬 스토리지에 저장\n        } else { // rememberMe가 체크되지 않은 경우\n          localStorage.removeItem('rememberedUser'); // 로컬 스토리지에서 저장된 사용자 정보 제거\n        }\n        this.showToast(); // 토스트 메시지 출력\n        this.$emit('login-success'); // 부모 컴포넌트에 로그인 성공 이벤트 발생\n      } else { // 사용자가 존재하지 않는 경우\n        this.errorMessage = 'Invalid email or password.'; // 오류 메시지 설정\n      }\n    },\n  },\n});\n</script>\n\n<style scoped>\n/* 전체 폼 스타일 */\n.signin-form {\n  display: flex; /* 플렉스 레이아웃 사용 */\n  justify-content: center; /* 수평 가운데 정렬 */\n  align-items: center; /* 수직 가운데 정렬 */\n  min-height: 100vh; /* 최소 높이를 화면 전체로 설정 */\n  background-color: #141414; /* 배경색 설정 */\n}\n\n/* 로그인 폼 컨테이너 스타일 */\n.signin-container {\n  width: 300px; /* 너비 설정 */\n  padding: 40px; /* 내부 여백 설정 */\n  background-color: #000; /* 배경색 설정 */\n  border-radius: 8px; /* 모서리 둥글게 설정 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5); /* 그림자 설정 */\n  color: #fff; /* 텍스트 색상 설정 */\n}\n\n/* 제목 스타일 */\n.signin-title {\n  font-size: 24px; /* 글꼴 크기 설정 */\n  font-weight: bold; /* 굵은 글꼴 설정 */\n  margin-bottom: 20px; /* 하단 여백 설정 */\n  text-align: center; /* 텍스트 가운데 정렬 */\n}\n\n/* 입력 필드 스타일 */\n.signin-input {\n  width: 100%; /* 너비 100% 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  margin: 10px 0; /* 상하 여백 설정 */\n  border: 1px solid #333; /* 테두리 설정 */\n  border-radius: 4px; /* 모서리 둥글게 설정 */\n  background-color: #333; /* 배경색 설정 */\n  color: #fff; /* 텍스트 색상 설정 */\n}\n\n/* Remember me 스타일 */\n.signin-remember {\n  display: flex; /* 플렉스 레이아웃 사용 */\n  align-items: center; /* 수직 가운데 정렬 */\n  margin-bottom: 20px; /* 하단 여백 설정 */\n  font-size: 14px; /* 글꼴 크기 설정 */\n}\n\n/* 로그인 버튼 스타일 */\n.signin-button {\n  width: 100%; /* 너비 100% 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  background-color: #e50914; /* 배경색 설정 */\n  color: #fff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 4px; /* 모서리 둥글게 설정 */\n  font-size: 16px; /* 글꼴 크기 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  margin-bottom: 10px; /* 하단 여백 설정 */\n}\n\n.signin-button:hover {\n  background-color: #f6121d; /* 호버 시 배경색 변경 */\n}\n\n/* 회원가입 버튼 스타일 */\n.signup-button {\n  width: 100%; /* 너비 100% 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  background-color: #333; /* 배경색 설정 */\n  color: #fff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 4px; /* 모서리 둥글게 설정 */\n  font-size: 16px; /* 글꼴 크기 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.signup-button:hover {\n  background-color: #444; /* 호버 시 배경색 변경 */\n}\n\n/* 오류 메시지 스타일 */\n.error {\n  color: #e50914; /* 텍스트 색상 빨강 설정 */\n  font-size: 14px; /* 글꼴 크기 설정 */\n  margin-top: 10px; /* 상단 여백 설정 */\n  display: block; /* 블록 요소로 설정 */\n}\n</style>\n","import { render } from \"./SignIn.vue?vue&type=template&id=70f14640&scoped=true\"\nimport script from \"./SignIn.vue?vue&type=script&lang=js\"\nexport * from \"./SignIn.vue?vue&type=script&lang=js\"\n\nimport \"./SignIn.vue?vue&type=style&index=0&id=70f14640&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-70f14640\"]])\n\nexport default __exports__","<!-- SignUp.vue -->\n<template>\n  <div class=\"signup-form\">\n    <div class=\"signup-container\">\n      <h2 class=\"signup-title\">Sign Up</h2>\n      <input type=\"email\" v-model=\"email\" class=\"signup-input\" placeholder=\"Enter your email\" />\n      <!-- 이메일이 유효하지 않을 경우 오류 메시지 출력 -->\n      <span v-if=\"!validEmail\" class=\"error\">Invalid email address</span>\n      <input type=\"password\" v-model=\"password\" class=\"signup-input\" placeholder=\"Enter your password\" />\n      <input type=\"password\" v-model=\"confirmPassword\" class=\"signup-input\" placeholder=\"Confirm your password\" />\n      <!-- 비밀번호가 일치하지 않을 경우 오류 메시지 출력 -->\n      <span v-if=\"!passwordsMatch\" class=\"error\">Passwords do not match</span>\n      <div class=\"signup-terms\">\n        <!-- 약관 동의 체크박스 -->\n        <input type=\"checkbox\" v-model=\"agreeToTerms\" /> <span>I agree to the terms and conditions</span>\n      </div>\n      <button @click=\"handleSignup\" class=\"signup-button\">Sign Up</button>\n      <!-- 로그인 폼으로 전환하는 버튼 -->\n      <button @click=\"$emit('switch-form')\" class=\"signin-button\">Go to Sign In</button>\n      <!-- 회원가입 실패 시 오류 메시지 출력 -->\n      <span v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'SignUpComponent',\n  data() {\n    return {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      agreeToTerms: false,\n      errorMessage: ''\n    };\n  },\n  computed: {\n    // 이메일이 유효한지 검사하는 계산 속성\n    validEmail() {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(this.email);\n    },\n    // 비밀번호와 확인 비밀번호가 일치하는지 검사하는 계산 속성\n    passwordsMatch() {\n      return this.password === this.confirmPassword;\n    },\n  },\n  methods: {\n    // 회원가입 처리 메서드\n    handleSignup() {\n      if (!this.validEmail) {\n        this.errorMessage = 'Please enter a valid email.';\n        return;\n      }\n      if (this.password.length < 6) {\n        this.errorMessage = 'Password must be at least 6 characters.';\n        return;\n      }\n      if (!this.passwordsMatch) {\n        this.errorMessage = 'Passwords do not match.';\n        return;\n      }\n      if (!this.agreeToTerms) {\n        this.errorMessage = 'You must agree to the terms and conditions.';\n        return;\n      }\n\n      // 회원가입 성공 시 이메일과 비밀번호를 객체로 묶어서 localStorage의 배열에 저장\n      const userCredentials = {\n        email: this.email,\n        password: this.password\n      };\n      let users = JSON.parse(localStorage.getItem('userCredentials'));\n      if (!Array.isArray(users)) {\n        users = [];\n      }\n\n      // 이메일 중복 체크\n      if (users.some(user => user.email === this.email)) {\n        this.errorMessage = 'Email is already registered.';\n        return;\n      }\n\n      users.push(userCredentials);\n      localStorage.setItem('userCredentials', JSON.stringify(users));\n\n      // 회원가입 성공 가정 및 부모 컴포넌트로 이벤트 전파\n      this.$emit('signup-success');\n    },\n  },\n});\n</script>\n\n<style scoped>\n/* 전체 폼 스타일 */\n.signup-form {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #141414;\n}\n\n/* 회원가입 폼 컨테이너 스타일 */\n.signup-container {\n  width: 300px;\n  padding: 40px;\n  background-color: #000;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n/* 제목 스타일 */\n.signup-title {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n/* 입력 필드 스타일 */\n.signup-input {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #333;\n  border-radius: 4px;\n  background-color: #333;\n  color: #fff;\n}\n\n/* 약관 동의 스타일 */\n.signup-terms {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  font-size: 14px;\n}\n\n/* 회원가입 버튼 스타일 */\n.signup-button {\n  width: 100%;\n  padding: 10px;\n  background-color: #e50914;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  margin-bottom: 10px;\n}\n\n.signup-button:hover {\n  background-color: #f6121d;\n}\n\n/* 로그인 버튼 스타일 */\n.signin-button {\n  width: 100%;\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\n.signin-button:hover {\n  background-color: #444;\n}\n\n/* 오류 메시지 스타일 */\n.error {\n  color: #e50914;\n  font-size: 14px;\n  margin-top: 10px;\n  display: block;\n}\n</style>\n","import { render } from \"./SignUp.vue?vue&type=template&id=162ea04e&scoped=true\"\nimport script from \"./SignUp.vue?vue&type=script&lang=js\"\nexport * from \"./SignUp.vue?vue&type=script&lang=js\"\n\nimport \"./SignUp.vue?vue&type=style&index=0&id=162ea04e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-162ea04e\"]])\n\nexport default __exports__","import { render } from \"./SignView.vue?vue&type=template&id=6df11459\"\nimport script from \"./SignView.vue?vue&type=script&lang=js\"\nexport * from \"./SignView.vue?vue&type=script&lang=js\"\n\nimport \"./SignView.vue?vue&type=style&index=0&id=6df11459&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport PopularView from '../views/PopularView.vue';\nimport TableView from '../views/TableView.vue';\nimport WishlistView from '../views/WishlistView.vue';\nimport SearchView from '../views/SearchView.vue';\nimport SignView from '../views/SignView.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView,\n  },\n  {\n    path: '/popular',\n    name: 'popular',\n    component: PopularView,\n  },\n  {\n    path: '/popular/table',\n    name: 'table',\n    component: TableView,\n  },\n  {\n    path: '/wishlist',\n    name: 'wishlist',\n    component: WishlistView\n  },\n  {\n    path: '/search',\n    name: 'search',\n    component: SearchView,\n  },\n  {\n    path: '/sign',\n    name: 'sign',\n    component: SignView,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(process.env.BASE_URL),\n  routes,\n});\n\nexport default router;\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport { createPinia } from 'pinia'\nimport Toast from 'vue-toastification'\nimport 'vue-toastification/dist/index.css'; // 기본 스타일 가져오기\n\nconst options = {\n    position: 'top-center',  // 중앙 상단에 표시하여 주목도 향상\n    timeout: 3000,\n    closeOnClick: true,\n    toastClassName: \"netflix-toast\",\n    bodyClassName: \"netflix-toast-body\",\n  };\n\nconst pinia = createPinia() // 전역 상태 관리 라이브러리인 Pinia를 생성합니다.\ncreateApp(App).use(router).use(pinia).use(Toast,options).mount('#app')\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknetflix_clone\"] = self[\"webpackChunknetflix_clone\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(1252); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","id","class","_hoisted_2","_hoisted_3","key","render","_ctx","_cache","$props","$setup","$data","$options","_component_NavbarComponent","_resolveComponent","_component_router_view","_component_FooterComponent","_openBlock","_createElementBlock","_createElementVNode","_createVNode","isPopularTableRoute","_createCommentVNode","focusable","role","xmlns","viewBox","style","_hoisted_4","_hoisted_5","_hoisted_6","_component_router_link","to","default","_withCtx","fill","d","_","_createTextVNode","isAuthenticated","_toDisplayString","userEmail","onClick","logout","_createBlock","useAuthStore","defineStore","state","localStorage","getItem","user","JSON","parse","actions","login","userData","this","setItem","stringify","removeItem","defineComponent","name","setup","authStore","storeToRefs","value","email","__exports__","components","NavbarComponent","FooterComponent","route","useRoute","computed","path","_component_PosterComponent","_Fragment","isFetching","_renderList","movieSections","movies","index","title","data","item","movie","onToggleMovieDetails","toggleMovieDetails","selectedMovie","onCloseMovieDetails","closeMovieDetails","args","handlePosterClick","src","image","alt","_normalizeClass","isItemInLocalStorage","showDetails","_withModifiers","description","rating","genre","props","type","Object","required","ref","toggleLocalStorage","storedMovies","movieIndex","findIndex","storedMovie","push","splice","some","BASE_URL","PosterComponent","showTopButton","router","useRouter","API_KEY","process","VUE_APP_TMDB_API_KEY","fetchMoviesFromAPI","async","endpoint","url","response","fetch","json","results","slice","map","poster_path","overview","vote_average","genre_ids","join","error","console","fetchAllMovies","Promise","all","handleScroll","window","scrollY","scrollToTop","scrollTo","top","behavior","goToWishlistView","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_hoisted_7","goToTableView","isTableView","popularItems","$event","currentPage","infiniteScrollTarget","fetchPopularMovies","page","ok","Error","handleIntersect","entries","entry","isIntersecting","storedItems","itemIndex","storedItem","observer","IntersectionObserver","root","rootMargin","threshold","observe","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","goToPopularView","paginatedItems","goToPage","disabled","visiblePages","active","totalPages","items","Array","itemsPerPage","Math","ceil","length","start","end","pages","maxVisiblePages","total","startPage","max","floor","endPage","i","initialLoad","previousPage","nextPage","log","bottomOfWindow","innerHeight","document","documentElement","scrollHeight","_withDirectives","searchQuery","placeholder","_vModelText","searchMovies","selectedGenre","genres","_vModelSelect","selectedRatingRange","_createStaticVNode","sortBy","resetFilters","fetchMovies","minRating","maxRating","split","fetchGenres","watch","storedSearches","_Transition","_resolveDynamicComponent","currentComponent","onSwitchForm","switchForm","onLoginSuccess","navigateHome","onSignupSuccess","navigateSignin","validEmail","password","rememberMe","handleLogin","$emit","errorMessage","toast","useToast","showToast","success","created","rememberedUser","emailRegex","test","methods","users","isArray","userExists","confirmPassword","passwordsMatch","agreeToTerms","handleSignup","userCredentials","SignInComponent","SignUpComponent","$router","routes","component","HomeView","PopularView","TableView","WishlistView","SearchView","SignView","createRouter","history","createWebHashHistory","options","position","timeout","closeOnClick","toastClassName","bodyClassName","pinia","createPinia","createApp","App","use","Toast","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}