{"version":3,"file":"js/app.ebead46c.js","mappings":"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","sources":["webpack://netflix_clone/./src/App.vue?33d4","webpack://netflix_clone/./src/App.vue","webpack://netflix_clone/./src/App.vue?7ccd","webpack://netflix_clone/./src/views/HomeView.vue?0434","webpack://netflix_clone/./src/views/HomeView.vue","webpack://netflix_clone/./src/components/Poster.vue?f385","webpack://netflix_clone/./src/components/Poster.vue","webpack://netflix_clone/./src/components/Poster.vue?9608","webpack://netflix_clone/./src/components/Navbar.vue?c82e","webpack://netflix_clone/./src/components/Navbar.vue","webpack://netflix_clone/./src/store/auth.ts","webpack://netflix_clone/./src/components/Navbar.vue?436b","webpack://netflix_clone/./src/components/Footer.vue?2712","webpack://netflix_clone/./src/components/Footer.vue","webpack://netflix_clone/./src/components/Footer.vue?7cca","webpack://netflix_clone/./src/views/HomeView.vue?1da1","webpack://netflix_clone/./src/views/PopularView.vue?42a5","webpack://netflix_clone/./src/views/PopularView.vue","webpack://netflix_clone/./src/views/PopularView.vue?691f","webpack://netflix_clone/./src/views/TableView.vue?7511","webpack://netflix_clone/./src/views/TableView.vue","webpack://netflix_clone/./src/views/TableView.vue?cc98","webpack://netflix_clone/./src/views/WishlistView.vue?b9dd","webpack://netflix_clone/./src/views/WishlistView.vue","webpack://netflix_clone/./src/views/WishlistView.vue?79bf","webpack://netflix_clone/./src/views/SearchView.vue?622a","webpack://netflix_clone/./src/views/SearchView.vue","webpack://netflix_clone/./src/views/SearchView.vue?f97a","webpack://netflix_clone/./src/views/SignView.vue","webpack://netflix_clone/./src/components/SignIn.vue","webpack://netflix_clone/./src/components/SignIn.vue?faab","webpack://netflix_clone/./src/components/SignUp.vue","webpack://netflix_clone/./src/components/SignUp.vue?b466","webpack://netflix_clone/./src/views/SignView.vue?e5c8","webpack://netflix_clone/./src/views/SingCongraturation.vue","webpack://netflix_clone/./src/views/SingCongraturation.vue?c5aa","webpack://netflix_clone/./src/views/NotFoundView.vue","webpack://netflix_clone/./src/views/NotFoundView.vue?345e","webpack://netflix_clone/./src/router/index.ts","webpack://netflix_clone/./src/main.ts","webpack://netflix_clone/webpack/bootstrap","webpack://netflix_clone/webpack/runtime/chunk loaded","webpack://netflix_clone/webpack/runtime/compat get default export","webpack://netflix_clone/webpack/runtime/define property getters","webpack://netflix_clone/webpack/runtime/global","webpack://netflix_clone/webpack/runtime/hasOwnProperty shorthand","webpack://netflix_clone/webpack/runtime/jsonp chunk loading","webpack://netflix_clone/webpack/startup"],"sourcesContent":["import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"full-width\"\n}\nconst _hoisted_2 = {\n  key: 0,\n  class: \"full-width\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"nav\", { class: \"full-width\" }, null, -1)),\n    _createVNode(_component_router_view),\n    (!_ctx.isPopularTableRoute)\n      ? (_openBlock(), _createElementBlock(\"footer\", _hoisted_2))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div id=\"app\" class=\"full-width\">\n    <!-- 공통 네비게이션 바 -->\n    <nav class=\"full-width\">\n    </nav>\n    <!-- 라우트에 따라 다른 컴포넌트가 렌더링되는 부분 -->\n    <router-view />\n    <!-- 공통 푸터, 특정 라우트에서만 렌더링 안 되도록 조건 추가 -->\n    <footer class=\"full-width\" v-if=\"!isPopularTableRoute\">\n    </footer>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue';\nimport { useRoute } from 'vue-router';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n  },\n  setup() {\n    const route = useRoute();\n\n    // 현재 라우트가 /popular/table인지 확인하는 계산 속성\n    const isPopularTableRoute = computed(() => route.path === '/popular/table');\n\n    return {\n      isPopularTableRoute,\n    };\n  },\n});\n</script>\n\n<style>\n/* 기존 스타일 유지 */\nbody {\n  background-color: #141414;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden; /* 수평 스크롤 방지 */\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=34df2038&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=34df2038&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"home\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n}\nconst _hoisted_3 = { class: \"section-title\" }\nconst _hoisted_4 = { class: \"poster-list\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_NavbarComponent = _resolveComponent(\"NavbarComponent\")!\n  const _component_PosterComponent = _resolveComponent(\"PosterComponent\")!\n  const _component_FooterComponent = _resolveComponent(\"FooterComponent\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_NavbarComponent),\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_ctx.isFetching)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\"))\n        : _createCommentVNode(\"\", true),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.movieSections, (movies, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          class: \"movie-section\",\n          key: index\n        }, [\n          _createElementVNode(\"h2\", _hoisted_3, _toDisplayString(movies.title), 1),\n          _createElementVNode(\"div\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(movies.data, (item) => {\n              return (_openBlock(), _createBlock(_component_PosterComponent, {\n                key: item.id,\n                movie: item,\n                onToggleMovieDetails: _ctx.toggleMovieDetails\n              }, null, 8, [\"movie\", \"onToggleMovieDetails\"]))\n            }), 128))\n          ])\n        ]))\n      }), 128)),\n      _createVNode(_component_FooterComponent)\n    ]),\n    (_ctx.selectedMovie)\n      ? (_openBlock(), _createBlock(_component_PosterComponent, {\n          key: 0,\n          movie: _ctx.selectedMovie,\n          onCloseMovieDetails: _ctx.closeMovieDetails\n        }, null, 8, [\"movie\", \"onCloseMovieDetails\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","<template>\n  <NavbarComponent />\n  <div id=\"home\">\n    <!-- 데이터 로딩 중일 때 로딩 표시 -->\n    <div v-if=\"isFetching\" class=\"loading\">Loading...</div> <!-- 로딩 중일 때 표시되는 텍스트 -->\n    <!-- 각 API에서 가져온 영화 섹션 반복 출력 -->\n    <div class=\"movie-section\" v-for=\"(movies, index) in movieSections\" :key=\"index\"> <!-- 각 영화 섹션에 고유 키 설정 -->\n      <h2 class=\"section-title\">{{ movies.title }}</h2> <!-- 영화 섹션의 제목 출력 -->\n      <div class=\"poster-list\">\n        <!-- PosterComponent 컴포넌트를 사용하여 각 영화 포스터 출력 -->\n        <PosterComponent\n          v-for=\"item in movies.data\"\n          :key=\"item.id\" \n          :movie=\"item\" \n          @toggle-movie-details=\"toggleMovieDetails\" \n        />\n      </div>\n    </div>\n    <FooterComponent />\n  </div>\n\n  <!-- 선택된 영화가 있을 경우 영화 상세 정보 표시 -->\n  <PosterComponent\n    v-if=\"selectedMovie\" \n    :movie=\"selectedMovie\"\n    @close-movie-details=\"closeMovieDetails\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, onMounted, onBeforeUnmount } from 'vue'; // Vue 컴포넌트와 필요한 함수들 import\nimport { useRouter } from 'vue-router'; // Vue Router import\nimport PosterComponent from '../components/Poster.vue'; // PosterComponent 컴포넌트 import\nimport NavbarComponent from '../components/Navbar.vue';\nimport FooterComponent from '../components/Footer.vue';\n\n\n// TMDb API 키 및 기본 URL 설정\nconst BASE_URL = 'https://api.themoviedb.org/3'; // TMDb API 기본 URL\n\nexport default defineComponent({\n  name: 'HomeViewComponent', // 컴포넌트 이름 설정\n  components: {\n    PosterComponent, // 사용할 컴포넌트 등록\n    NavbarComponent,\n    FooterComponent,\n  },\n  setup() {\n    const movieSections = ref<any[]>([]); // 영화 섹션 데이터 목록\n    const isFetching = ref(false); // 데이터 로딩 상태 여부\n    const showTopButton = ref(false); // 상단 이동 버튼 표시 여부\n    const selectedMovie = ref<any | null>(null); // 선택된 영화 데이터\n    const router = useRouter(); // Vue Router 사용\n\n    // API 키 가져오는 함수\n    const API_KEY = process.env.VUE_APP_TMDB_API_KEY || '';\n    \n    if (!API_KEY) {\n      console.error('API key is missing!');\n    }\n\n    // 특정 엔드포인트에서 영화 데이터를 가져오는 함수\n    const fetchMoviesFromAPI = async (endpoint: string, title: string) => {\n      const url = `${BASE_URL}/${endpoint}?api_key=${API_KEY}&language=ko-KR&page=1`; // API 요청 URL 생성\n      try {\n        const response = await fetch(url); // API 호출\n        const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n        const movies = data.results.slice(0, 5).map((item: any) => ({ // 영화 데이터를 필요한 형식으로 가공\n          id: item.id, // 영화 ID\n          name: item.title, // 영화 제목\n          image: `https://image.tmdb.org/t/p/w500${item.poster_path}`, // 포스터 이미지 URL\n          description: item.overview, // 영화 설명\n          rating: item.vote_average, // 영화 평점\n          genre: item.genre_ids.join(', '), // 영화 장르 ID 목록을 문자열로 변환\n        }));\n        movieSections.value.push({ title, data: movies }); // 영화 섹션에 추가\n      } catch (error) {\n        console.error('Failed to fetch movies:', error); // 오류 발생 시 콘솔에 메시지 출력\n  \n      }\n    };\n\n    // 모든 영화 섹션 데이터를 가져오는 함수\n    const fetchAllMovies = async () => {\n      if (isFetching.value) return; // 이미 데이터를 로딩 중이면 함수 종료\n      isFetching.value = true; // 데이터 로딩 상태 설정\n      try {\n        await Promise.all([\n          fetchMoviesFromAPI('movie/popular', 'Popular Movies'), // 인기 영화 데이터 가져오기\n          fetchMoviesFromAPI('movie/top_rated', 'Top Rated Movies'), // 높은 평점 영화 데이터 가져오기\n          fetchMoviesFromAPI('movie/upcoming', 'Upcoming Movies'), // 개봉 예정 영화 데이터 가져오기\n          fetchMoviesFromAPI('trending/movie/week', 'Trending This Week'), // 이번 주 인기 영화 데이터 가져오기\n        ]);\n      } catch (error) {\n        console.error('Failed to fetch all movie sections:', error); // 오류 발생 시 콘솔에 메시지 출력\n      } finally {\n        isFetching.value = false; // 데이터 로딩 상태 해제\n      }\n    };\n\n    // 스크롤 이벤트를 처리하는 함수\n    const handleScroll = () => {\n      showTopButton.value = window.scrollY > 200; // 스크롤 위치에 따라 TOP 버튼 표시 여부 설정\n    };\n\n    // TOP 버튼 클릭 시 화면 맨 위로 스크롤하는 함수\n    const scrollToTop = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' }); // 화면 맨 위로 부드럽게 스크롤\n    };\n\n    // Wishlist View로 이동하는 함수\n    const goToWishlistView = () => {\n      router.push('/wishlist'); // 위시리스트 뷰로 라우팅\n    };\n\n    // 영화 포스터 클릭 시 상세 정보 표시 또는 숨기는 함수\n    const toggleMovieDetails = (item: any) => {\n      if (selectedMovie.value && selectedMovie.value.id === item.id) {\n        selectedMovie.value = null; // 이미 선택된 영화인 경우 상세 정보 숨기기\n      } else {\n        selectedMovie.value = item; // 새로운 영화 선택 시 상세 정보 표시\n      }\n    };\n\n    // 영화 상세 정보 모달 닫기 함수\n    const closeMovieDetails = () => {\n      selectedMovie.value = null; // 선택된 영화 정보 숨기기\n    };\n\n    // 컴포넌트가 마운트될 때 호출되는 함수\n    onMounted(() => {\n      fetchAllMovies(); // 모든 영화 섹션 데이터 가져오기\n      window.addEventListener('scroll', handleScroll); // 스크롤 이벤트 리스너 추가\n    });\n\n    // 컴포넌트가 언마운트될 때 호출되는 함수\n    onBeforeUnmount(() => {\n      window.removeEventListener('scroll', handleScroll); // 스크롤 이벤트 리스너 제거\n    });\n\n    return {\n      movieSections, // 영화 섹션 데이터 반환\n      isFetching, // 데이터 로딩 상태 반환\n      showTopButton, // 상단 이동 버튼 표시 여부 반환\n      selectedMovie, // 선택된 영화 데이터 반환\n      scrollToTop, // 상단 이동 함수 반환\n      goToWishlistView, // 위시리스트 뷰 이동 함수 반환\n      toggleMovieDetails, // 영화 상세 정보 토글 함수 반환\n      closeMovieDetails, // 영화 상세 정보 닫기 함수 반환\n    };\n  },\n});\n</script>\n\n<style scoped>\n\n@media (max-width: 768px) {\n  .poster-list {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr); /* 한 줄에 2개 아이템 */\n    gap: 10px; /* 각 아이템 간격 */\n    padding: 10px; /* 좌우 패딩 추가 */\n  }\n\n  .poster-container {\n    margin: 0 auto; /* 가운데 정렬 */\n    width: 100%; /* 컨테이너 너비 100% */\n  }\n\n  .poster-image {\n    width: 100%; /* 이미지 너비 100% */\n    height: auto; /* 높이는 비율에 맞게 자동 설정 */\n    border-radius: 10px; /* 모서리 둥글게 */\n  }\n\n  .movie-details-modal {\n    padding: 10px; /* 내부 여백 추가 */\n  }\n\n  .movie-details-content {\n    max-width: 95%; /* 최대 너비 95% */\n    font-size: 0.9em; /* 텍스트 크기 약간 줄임 */\n  }\n\n  .section-title {\n    font-size: 1.2em; /* 섹션 제목 크기 줄임 */\n    text-align: center; /* 텍스트 중앙 정렬 */\n    padding: 10px 0; /* 위아래 패딩 추가 */\n  }\n\n  .loading {\n    bottom: 10px; /* 로딩 표시 위치 조정 */\n    font-size: 0.9em; /* 텍스트 크기 줄임 */\n  }\n\n  .top-button {\n    padding: 8px 12px; /* 버튼 크기 줄임 */\n    font-size: 0.8em; /* 텍스트 크기 줄임 */\n  }\n}\n\n/* 작은 모바일 크기용 미디어 쿼리 */\n@media (max-width: 480px) {\n  .poster-list {\n    grid-template-columns: 1fr; /* 한 줄에 1개 아이템 */\n  }\n\n  .poster-image {\n    margin-bottom: 15px; /* 이미지 하단 간격 추가 */\n  }\n\n  .movie-details-content {\n    font-size: 0.8em; /* 텍스트 크기 더 줄임 */\n  }\n\n  .section-title {\n    font-size: 1em; /* 섹션 제목 크기 더 줄임 */\n  }\n\n  .top-button {\n    bottom: 60px; /* 버튼 위치 조정 */\n    right: 10px; /* 버튼 오른쪽 위치 조정 */\n    font-size: 0.7em; /* 버튼 텍스트 크기 더 줄임 */\n  }\n}\n\n\n/******** 기본 스타일 유지 ********/\n.loading {\n  position: fixed; /* 고정 위치 설정 */\n  bottom: 20px; /* 하단에서 20px 위치 */\n  left: 50%; /* 왼쪽에서 50% 위치 (가운데 정렬) */\n  transform: translateX(-50%); /* X축 방향으로 -50% 이동 (가운데 정렬 보정) */\n  background-color: rgba(0, 0, 0, 0.8); /* 배경색을 검정색으로 하고 투명도 적용 */\n  color: #ffffff; /* 텍스트 색상 흰색 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  border-radius: 5px; /* 모서리 둥글게 설정 */\n  z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n.top-button {\n  position: fixed; /* 고정 위치 설정 */\n  bottom: 80px; /* 하단에서 80px 위치 */\n  right: 20px; /* 오른쪽에서 20px 위치 */\n  background-color: #e50914; /* 배경색 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  padding: 10px 15px; /* 내부 여백 설정 */\n  border-radius: 5px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n.top-button:hover {\n  background-color: #f40612; /* 호버 시 배경색 변경 */\n}\n\n.toggle-view-button {\n  margin: 20px; /* 바깥 여백 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  background-color: #f40612; /* 배경색 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.toggle-view-button:hover {\n  background-color: #333333; /* 호버 시 배경색 변경 */\n}\n\n/******** 영화 포스터 스타일 ********/\n.movie-section {\n  margin-bottom: 50px; /* 섹션 간 하단 여백 설정 */\n}\n\n.section-title {\n  color: #ffffff; /* 텍스트 색상 흰색 설정 */\n  margin-bottom: 15px; /* 하단 여백 설정 */\n  padding-left: 10px; /* 왼쪽 여백 설정 */\n  font-size: 1.5em; /* 글꼴 크기 설정 */\n}\n\n.poster-list {\n  display: grid; /* 그리드 레이아웃 사용 */\n  grid-template-columns: repeat(5, 1fr); /* 한 줄에 5개 아이템 */\n  gap: 20px; /* 각 아이템 사이의 간격 설정 */\n  padding-left: 10px; /* 왼쪽 여백 설정 */\n  padding-right: 10px; /* 오른쪽 여백 설정 */\n}\n\n.poster-container {\n  position: relative; /* 상대 위치 설정 */\n  transition: transform 0.3s; /* 크기 변화 시 부드러운 트랜지션 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.poster-container:hover {\n  transform: scale(1.1); /* 호버 시 크기 확대 */\n}\n\n.poster-image {\n  width: 60%; /* 너비 설정 */\n  border-radius: 10px; /* 모서리 둥글게 설정 */\n  transition: transform 0.3s; /* 크기 변화 시 부드러운 트랜지션 설정 */\n  border: 2px solid transparent; /* 기본 테두리는 투명 설정 */\n}\n\n.poster-title {\n  color: #ffffff; /* 텍스트 색상 흰색 설정 */\n  margin-top: 10px; /* 상단 여백 설정 */\n  text-align: center; /* 텍스트 가운데 정렬 */\n  font-size: 1em; /* 글꼴 크기 설정 */\n}\n\n/******** 영화 상세 정보 모달 ********/\n.movie-details-modal {\n  position: fixed; /* 고정 위치 설정 */\n  top: 0; /* 상단에서 0 위치 */\n  left: 0; /* 왼쪽에서 0 위치 */\n  width: 100%; /* 너비 100% 설정 */\n  height: 100%; /* 높이 100% 설정 */\n  background-color: rgba(0, 0, 0, 0.8); /* 배경색을 검정색으로 하고 투명도 적용 */\n  display: flex; /* 플렉스 레이아웃 사용 */\n  align-items: center; /* 수직 가운데 정렬 */\n  justify-content: center; /* 수평 가운데 정렬 */\n  z-index: 2000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n.movie-details-content {\n  background-color: #333; /* 배경색 설정 */\n  padding: 20px; /* 내부 여백 설정 */\n  border-radius: 10px; /* 모서리 둥글게 설정 */\n  color: #fff; /* 텍스트 색상 흰색 설정 */\n  max-width: 500px; /* 최대 너비 설정 */\n  width: 90%; /* 너비 설정 */\n  text-align: center; /* 텍스트 가운데 정렬 */\n}\n\n.details-poster-image {\n  width: 50%; /* 너비 설정 */\n  height: auto; /* 높이는 자동 설정 */\n  border-radius: 10px; /* 모서리 둥글게 설정 */\n  margin-bottom: 20px; /* 하단 여백 설정 */\n}\n\n.close-button {\n  margin-top: 20px; /* 상단 여백 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  background-color: #e50914; /* 배경색 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.close-button:hover {\n  background-color: #f40612; /* 호버 시 배경색 변경 */\n}\n</style>\n","import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"poster-title\" }\nconst _hoisted_3 = { class: \"movie-details-content\" }\nconst _hoisted_4 = [\"src\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", {\n      class: \"poster-container\",\n      onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.handlePosterClick && _ctx.handlePosterClick(...args)))\n    }, [\n      _createElementVNode(\"img\", {\n        src: _ctx.movie.image,\n        alt: \"movie poster\",\n        class: _normalizeClass(['poster-image', { 'selected': _ctx.isItemInLocalStorage(_ctx.movie) }])\n      }, null, 10, _hoisted_1),\n      _createElementVNode(\"p\", _hoisted_2, _toDisplayString(_ctx.movie.name), 1)\n    ]),\n    (_ctx.showDetails)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"movie-details-modal\",\n          onClick: _cache[2] || (_cache[2] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.closeMovieDetails && _ctx.closeMovieDetails(...args)), [\"self\"]))\n        }, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"h2\", null, _toDisplayString(_ctx.movie.name), 1),\n            _createElementVNode(\"img\", {\n              src: _ctx.movie.image,\n              alt: \"movie poster\",\n              class: \"details-poster-image\"\n            }, null, 8, _hoisted_4),\n            _createElementVNode(\"p\", null, [\n              _cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Description:\", -1)),\n              _createTextVNode(\" \" + _toDisplayString(_ctx.movie.description), 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Rating:\", -1)),\n              _createTextVNode(\" \" + _toDisplayString(_ctx.movie.rating), 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Genres:\", -1)),\n              _createTextVNode(\" \" + _toDisplayString(_ctx.movie.genre), 1)\n            ]),\n            _createElementVNode(\"button\", {\n              onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.closeMovieDetails && _ctx.closeMovieDetails(...args))),\n              class: \"close-button\"\n            }, \"Close\")\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n    <div>\n      <!-- 포스터를 클릭할 수 있는 컨테이너. 클릭 시 toggleMovieDetails 및 toggleLocalStorage 메소드가 호출됨 -->\n      <div\n        class=\"poster-container\"\n        @click=\"handlePosterClick\"\n      >\n        <!-- 영화 포스터 이미지 -->\n        <img :src=\"movie.image\" alt=\"movie poster\" :class=\"['poster-image', { 'selected': isItemInLocalStorage(movie) }]\" />\n        <!-- 영화 제목 -->\n        <p class=\"poster-title\">{{ movie.name }}</p>\n      </div>\n  \n      <!-- 영화 상세 정보 모달 -->\n      <div v-if=\"showDetails\" class=\"movie-details-modal\" @click.self=\"closeMovieDetails\">\n        <div class=\"movie-details-content\">\n          <!-- 영화 제목 -->\n          <h2>{{ movie.name }}</h2>\n          <!-- 영화 포스터 이미지 (상세 모달 내) -->\n          <img :src=\"movie.image\" alt=\"movie poster\" class=\"details-poster-image\" />\n          <!-- 영화 설명 -->\n          <p><strong>Description:</strong> {{ movie.description }}</p>\n          <!-- 영화 평점 -->\n          <p><strong>Rating:</strong> {{ movie.rating }}</p>\n          <!-- 영화 장르 -->\n          <p><strong>Genres:</strong> {{ movie.genre }}</p>\n          <!-- 모달 닫기 버튼 -->\n          <button @click=\"closeMovieDetails\" class=\"close-button\">Close</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script lang=\"ts\">\n  import { defineComponent, ref, onMounted } from 'vue';\n  \n  export default defineComponent({\n    name: 'PosterComponent',\n    props: {\n      // 부모 컴포넌트로부터 전달받는 movie 데이터, Object 타입이며 필수 속성\n      movie: {\n        type: Object,\n        required: true,\n      },\n    },\n    setup(props) {\n      // showDetails는 모달의 표시 여부를 나타내는 상태값 (false일 때 모달 숨김)\n      const showDetails = ref(false);\n  \n      /**\n       * 포스터 클릭 시 호출되는 함수\n       * - 모달을 토글\n       * - 로컬 스토리지에 영화 정보 저장 또는 제거\n       */\n      const handlePosterClick = () => {\n        toggleMovieDetails();\n        toggleLocalStorage(props.movie);\n      };\n  \n      // 모달을 열거나 닫는 함수\n      const toggleMovieDetails = () => {\n        showDetails.value = !showDetails.value;\n      };\n  \n      // 모달을 닫는 함수\n      const closeMovieDetails = () => {\n        showDetails.value = false;\n      };\n  \n      /**\n       * 로컬 스토리지에서 선택된 영화 목록을 토글하는 함수\n       * @param movie 선택된 영화 객체\n       */\n      const toggleLocalStorage = (movie: any) => {\n        let storedMovies = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n        const movieIndex = storedMovies.findIndex((storedMovie: any) => storedMovie.id === movie.id);\n  \n        if (movieIndex === -1) {\n          // 아이템이 로컬 스토리지에 없으면 추가\n          storedMovies.push({\n            id: movie.id,\n            name: movie.name,\n            image: movie.image,\n          });\n        } else {\n          // 아이템이 이미 로컬 스토리지에 있으면 제거\n          storedMovies.splice(movieIndex, 1);\n        }\n  \n        localStorage.setItem('selectedMovies', JSON.stringify(storedMovies));\n        // 반응성 트리거를 위해 업데이트 (필요 시 사용)\n      };\n  \n      /**\n       * 해당 영화가 로컬 스토리지에 저장되어 있는지 확인하는 함수\n       * @param movie 확인할 영화 객체\n       * @returns 저장 여부\n       */\n      const isItemInLocalStorage = (movie: any) => {\n        let storedMovies = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n        return storedMovies.some((storedMovie: any) => storedMovie.id === movie.id);\n      };\n  \n      return {\n        showDetails,\n        toggleMovieDetails,\n        closeMovieDetails,\n        toggleLocalStorage,\n        isItemInLocalStorage,\n        handlePosterClick,\n      };\n    },\n  });\n  </script>\n  \n  <style scoped>\n  /* 포스터 컨테이너 스타일 */\n  .poster-container {\n    position: relative;\n    transition: transform 0.3s, border 0.3s;\n    cursor: pointer;\n    border: 2px solid transparent; /* 기본 테두리 */\n  }\n  \n  /* 포스터 컨테이너에 마우스 올릴 때 확대 효과 */\n  .poster-container:hover {\n    transform: scale(1.1);\n  }\n  \n  /* 선택된 포스터 이미지 스타일 */\n  .poster-image.selected {\n    border: 2px solid red; /* 선택된 경우 빨간 테두리 */\n  }\n  \n  /* 포스터 이미지 스타일 */\n  .poster-image {\n    width: 100%;\n    border-radius: 10px;\n    transition: transform 0.3s;\n  }\n  \n  /* 포스터 제목 스타일 */\n  .poster-title {\n    color: #ffffff;\n    margin-top: 10px;\n    text-align: center;\n    font-size: 1em;\n  }\n  \n  /* 모달 배경 스타일 - 화면 전체를 덮는 핵심 스타일 */\n  .movie-details-modal {\n    position: fixed; /* 화면에 고정되어 스크롤해도 위치 유지 */\n    top: 0; /* 상단을 기준으로 시작 */\n    left: 0; /* 좌측을 기준으로 시작 */\n    width: 100%; /* 화면의 너비 전체를 덮음 */\n    height: 100%; /* 화면의 높이 전체를 덮음 */\n    background-color: rgba(0, 0, 0, 0.8); /* 배경을 어둡게 하여 모달이 강조되도록 함 */\n    display: flex; /* 모달 내용을 가운데 정렬하기 위한 flexbox 사용 */\n    align-items: center; /* 수직 방향으로 가운데 정렬 */\n    justify-content: center; /* 수평 방향으로 가운데 정렬 */\n    z-index: 2000; /* 다른 요소보다 위에 표시되도록 높은 z-index 설정 */\n    margin-bottom: 200px;\n  }\n  \n  /* 모달 내용 스타일 */\n  .movie-details-content {\n    background-color: #333;\n    border-radius: 10px;\n    color: #fff;\n    max-width: 400px; /* 모달의 최대 너비를 줄임 */\n    width: 80%; /* 모달의 너비를 줄임 */\n    text-align: center;\n    padding: 20px;\n  }\n  \n  /* 상세 포스터 이미지 스타일 */\n  .details-poster-image {\n    width: 40%; /* 상세 포스터 이미지 크기를 줄임 */\n    height: auto;\n    border-radius: 10px;\n    margin-bottom: 20px;\n  }\n  \n  /* 모달 닫기 버튼 스타일 */\n  .close-button {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #e50914;\n    color: #ffffff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  \n  /* 닫기 버튼에 마우스 올릴 때 색상 변경 */\n  .close-button:hover {\n    background-color: #f40612;\n  }\n  </style>","import { render } from \"./Poster.vue?vue&type=template&id=8d1cb87a&scoped=true&ts=true\"\nimport script from \"./Poster.vue?vue&type=script&lang=ts\"\nexport * from \"./Poster.vue?vue&type=script&lang=ts\"\n\nimport \"./Poster.vue?vue&type=style&index=0&id=8d1cb87a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8d1cb87a\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"navbar\" }\nconst _hoisted_2 = { class: \"navbar-left\" }\nconst _hoisted_3 = {\n  class: \"svg-inline--fa fa-ticket\",\n  \"aria-hidden\": \"true\",\n  focusable: \"false\",\n  \"data-prefix\": \"fas\",\n  \"data-icon\": \"ticket\",\n  role: \"img\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 576 512\",\n  style: {\"height\":\"100%\",\"color\":\"rgb(229, 9, 20)\"}\n}\nconst _hoisted_4 = { class: \"navbar-right\" }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"nav-item\"\n}\nconst _hoisted_6 = { class: \"user-email\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(\"nav\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_link, {\n        to: \"/#\",\n        class: \"logo\"\n      }, {\n        default: _withCtx(() => [\n          (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, _cache[0] || (_cache[0] = [\n            _createElementVNode(\"path\", {\n              class: \"\",\n              fill: \"currentColor\",\n              d: \"M64 64C28.7 64 0 92.7 0 128l0 64c0 8.8 7.4 15.7 15.7 18.6C34.5 217.1 48 235 48 256s-13.5 38.9-32.3 45.4C7.4 304.3 0 311.2 0 320l0 64c0 35.3 28.7 64 64 64l448 0c35.3 0 64-28.7 64-64l0-64c0-8.8-7.4-15.7-15.7-18.6C541.5 294.9 528 277 528 256s13.5-38.9 32.3-45.4c8.3-2.9 15.7-9.8 15.7-18.6l0-64c0-35.3-28.7-64-64-64L64 64zm64 112l0 160c0 8.8 7.2 16 16 16l288 0c8.8 0 16-7.2 16-16l0-160c0-8.8-7.2-16-16-16l-288 0c-8.8 0-16 7.2-16 16zM96 160c0-17.7 14.3-32 32-32l320 0c17.7 0 32 14.3 32 32l0 192c0 17.7-14.3 32-32 32l-320 0c-17.7 0-32-14.3-32-32l0-192z\"\n            }, null, -1)\n          ])))\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/\",\n        class: \"nav-item\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [\n          _createTextVNode(\"Home\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/popular\",\n        class: \"nav-item\"\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [\n          _createTextVNode(\"Popular\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/search\",\n        class: \"nav-item\"\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [\n          _createTextVNode(\"Search\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/wishlist\",\n        class: \"nav-item\"\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [\n          _createTextVNode(\"Wishlist\")\n        ])),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      (!_ctx.isAuthenticated)\n        ? (_openBlock(), _createBlock(_component_router_link, {\n            key: 0,\n            to: \"/Sign\",\n            class: \"nav-item sign-button\"\n          }, {\n            default: _withCtx(() => _cache[5] || (_cache[5] = [\n              _createTextVNode(\"Sign\")\n            ])),\n            _: 1\n          }))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n            _createElementVNode(\"span\", _hoisted_6, _toDisplayString(_ctx.userInfo), 1),\n            _createVNode(_component_router_link, {\n              onClick: _ctx.logout,\n              to: \"/Sign\",\n              class: \"nav-item logout-button\"\n            }, {\n              default: _withCtx(() => _cache[6] || (_cache[6] = [\n                _createTextVNode(\"Logout\")\n              ])),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]))\n    ])\n  ]))\n}","<template>\n  <nav class=\"navbar\">\n    <div class=\"navbar-left\">\n      <router-link to=\"/#\" class=\"logo\">\n        <svg class=\"svg-inline--fa fa-ticket\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"ticket\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" style=\"height: 100%; color: rgb(229, 9, 20);\">\n          <path class=\"\" fill=\"currentColor\" d=\"M64 64C28.7 64 0 92.7 0 128l0 64c0 8.8 7.4 15.7 15.7 18.6C34.5 217.1 48 235 48 256s-13.5 38.9-32.3 45.4C7.4 304.3 0 311.2 0 320l0 64c0 35.3 28.7 64 64 64l448 0c35.3 0 64-28.7 64-64l0-64c0-8.8-7.4-15.7-15.7-18.6C541.5 294.9 528 277 528 256s13.5-38.9 32.3-45.4c8.3-2.9 15.7-9.8 15.7-18.6l0-64c0-35.3-28.7-64-64-64L64 64zm64 112l0 160c0 8.8 7.2 16 16 16l288 0c8.8 0 16-7.2 16-16l0-160c0-8.8-7.2-16-16-16l-288 0c-8.8 0-16 7.2-16 16zM96 160c0-17.7 14.3-32 32-32l320 0c17.7 0 32 14.3 32 32l0 192c0 17.7-14.3 32-32 32l-320 0c-17.7 0-32-14.3-32-32l0-192z\"></path>\n        </svg>\n      </router-link>\n      <router-link to=\"/\" class=\"nav-item\">Home</router-link>\n      <router-link to=\"/popular\" class=\"nav-item\">Popular</router-link>\n      <router-link to=\"/search\" class=\"nav-item\">Search</router-link>\n      <router-link to=\"/wishlist\" class=\"nav-item\">Wishlist</router-link>\n    </div>\n    <div class=\"navbar-right\">\n      <router-link v-if=\"!isAuthenticated\" to=\"/Sign\" class=\"nav-item sign-button\">Sign</router-link>\n      <div v-else class=\"nav-item\">\n        <span class=\"user-email\">{{ userInfo  }}</span>\n      <router-link @click=\"logout\" to=\"/Sign\" class=\"nav-item logout-button\">Logout</router-link>\n    </div>\n    </div>\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { useAuthStore } from '../store/auth';\nimport { storeToRefs } from 'pinia';\n\nexport default defineComponent({\n  name: 'NavbarComponent',\n  setup() {\n    const authStore = useAuthStore();\n    const { isAuthenticated, user } = storeToRefs(authStore);\n    const { logout } = authStore;\n\n    return {\n      isAuthenticated,\n      userInfo: user?.value?.email || user?.value?.userInfo?.properties?.nickname || '',\n      logout,\n    };\n  },\n});\n</script>\n\n<style scoped>\n/* 기존의 스타일 그대로 유지 */\n.navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  background-color: #141414;\n  color: #ffffff;\n  margin: 0;\n}\n\n.navbar-left,\n.navbar-right {\n  display: flex;\n  gap: 1rem;\n}\n\n.nav-item {\n  color: #ffffff;\n  font-weight: bold;\n  text-decoration: none;\n\n}\n\n.nav-item:hover {\n  color: #e50914;\n}\n\n.navbar-left a svg {\n  margin-right: 1rem;\n  height: fit-content;\n  width: 27px;\n}\n\n/* 로그인 버튼 스타일 */\n.sign-button {\n  background-color: transparent;\n  color: #ffffff;\n  border: 2px solid #e50914;\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  height: auto;\n}\n\n.sign-button:hover {\n  background-color: #f51b26;\n  text-decoration: none;\n}\n\n/* 로그아웃 버튼 스타일 */\n.logout-button {\n  background-color: transparent;\n  color: #ffffff;\n  border: 2px solid #e50914;\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n}\n\n.logout-button:hover {\n  background-color: #e50914;\n  color: #ffffff;\n}\n\n.user-email{\n  margin-right: 1rem;\n  font-weight: bold;\n}\n\n/* 반응형 디자인 */\n@media (max-width: 768px) {\n  .navbar {\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 0.5rem;\n  }\n\n  .mobile-menu-icon {\n    display: block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin: 0.5rem 0;\n  }\n\n  .navbar-links {\n    display: none;\n    flex-direction: column;\n    gap: 1rem;\n    width: 100%;\n    background-color: #141414;\n    padding: 0.5rem;\n  }\n\n  .navbar-links.mobile-menu-open {\n    display: flex;\n  }\n\n  .navbar-left {\n    width: 100%;\n    justify-content: space-between;\n  }\n\n   /* 기존에 .navbar-right가 display: none; 이었던 부분 수정 */\n   .navbar-right .nav-item {\n    flex-direction: column;\n    width: 100%;\n    gap: 0.5rem;\n    margin-top: 1rem;\n  }\n}\n</style>\n","// src/stores/auth.ts\nimport { defineStore } from 'pinia';\n\n// Pinia store를 정의하여 사용자 인증 상태를 관리합니다.\nexport const useAuthStore = defineStore('auth', {\n  // state: store에서 관리할 상태를 정의합니다.\n  state: () => ({\n    // 사용자가 로그인했는지 여부를 나타내는 상태입니다. localStorage에서 'authUser' 항목을 확인하여 설정합니다.\n    isAuthenticated: !!localStorage.getItem('authUser'),\n    // 로그인한 사용자의 정보를 저장합니다. localStorage에서 'authUser' 항목을 가져와 JSON 객체로 변환하여 저장합니다.\n    user: localStorage.getItem('authUser') ? JSON.parse(localStorage.getItem('authUser') || '{}') : null,\n  }),\n  actions: {\n    // 사용자가 로그인할 때 호출되는 메서드입니다.\n    login(userData: object) {\n      // 로그인 상태를 true로 설정합니다.\n      this.isAuthenticated = true;\n      // 사용자 정보를 설정합니다.\n      this.user = userData;\n      // localStorage에 사용자 정보를 JSON 문자열로 저장하여 새로고침 후에도 로그인 상태를 유지합니다.\n      localStorage.setItem('authUser', JSON.stringify(userData));\n    },\n    // 사용자가 로그아웃할 때 호출되는 메서드입니다.\n    logout() {\n      // 로그인 상태를 false로 설정합니다.\n      this.isAuthenticated = false;\n      // 사용자 정보를 null로 설정합니다.\n      this.user = null;\n      // localStorage에서 'authUser' 항목을 제거하여 로그인 상태를 초기화합니다.\n      localStorage.removeItem('authUser');\n    },\n  },\n});\n","import { render } from \"./Navbar.vue?vue&type=template&id=68e2c5f6&scoped=true&ts=true\"\nimport script from \"./Navbar.vue?vue&type=script&lang=ts\"\nexport * from \"./Navbar.vue?vue&type=script&lang=ts\"\n\nimport \"./Navbar.vue?vue&type=style&index=0&id=68e2c5f6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-68e2c5f6\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"footer\" }\nconst _hoisted_2 = { class: \"footer-links\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(\"footer\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_link, {\n        to: \"/help\",\n        class: \"footer-link\"\n      }, {\n        default: _withCtx(() => _cache[0] || (_cache[0] = [\n          _createTextVNode(\"Help Center\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/terms\",\n        class: \"footer-link\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [\n          _createTextVNode(\"Terms of Use\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/privacy\",\n        class: \"footer-link\"\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [\n          _createTextVNode(\"Privacy Policy\")\n        ])),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/contact\",\n        class: \"footer-link\"\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [\n          _createTextVNode(\"Contact Us\")\n        ])),\n        _: 1\n      })\n    ]),\n    _cache[4] || (_cache[4] = _createElementVNode(\"div\", { class: \"footer-copyright\" }, [\n      _createElementVNode(\"p\", null, \"© 2024 Netflix Clone. All rights reserved.\")\n    ], -1))\n  ]))\n}","<template>\n    <footer class=\"footer\">\n      <div class=\"footer-links\">\n        <router-link to=\"/help\" class=\"footer-link\">Help Center</router-link>\n        <router-link to=\"/terms\" class=\"footer-link\">Terms of Use</router-link>\n        <router-link to=\"/privacy\" class=\"footer-link\">Privacy Policy</router-link>\n        <router-link to=\"/contact\" class=\"footer-link\">Contact Us</router-link>\n      </div>\n      <div class=\"footer-copyright\">\n        <p>&copy; 2024 Netflix Clone. All rights reserved.</p>\n      </div>\n    </footer>\n  </template>\n  \n  <script lang=\"ts\">\n  import { defineComponent } from 'vue';\n  \n  export default defineComponent({\n    name: 'FooterComponent',\n  });\n  </script>\n  \n  <style scoped>\n  .footer {\n    background-color: #141414;\n    color: #ffffff;\n    padding: 2rem;\n    text-align: center;\n    margin-top: 2rem;\n  }\n  \n  .footer-links {\n    display: flex;\n    justify-content: center;\n    gap: 2rem;\n    margin-bottom: 1rem;\n  }\n  \n  .footer-link {\n    color: #ffffff;\n    text-decoration: none;\n    font-size: 0.9rem;\n  }\n  \n  .footer-link:hover {\n    color: #e50914;\n  }\n  \n  .footer-copyright {\n    font-size: 0.8rem;\n  }\n  </style>\n  ","import { render } from \"./Footer.vue?vue&type=template&id=2e1fd282&scoped=true&ts=true\"\nimport script from \"./Footer.vue?vue&type=script&lang=ts\"\nexport * from \"./Footer.vue?vue&type=script&lang=ts\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=2e1fd282&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2e1fd282\"]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=4e61b0b2&scoped=true&ts=true\"\nimport script from \"./HomeView.vue?vue&type=script&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&lang=ts\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=4e61b0b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e61b0b2\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { id: \"popular\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n}\nconst _hoisted_3 = { class: \"poster-list\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = [\"src\"]\nconst _hoisted_6 = { class: \"poster-title\" }\nconst _hoisted_7 = {\n  ref: \"infiniteScrollTarget\",\n  class: \"infinite-scroll-target\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_NavbarComponent = _resolveComponent(\"NavbarComponent\")!\n  const _component_FooterComponent = _resolveComponent(\"FooterComponent\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_NavbarComponent),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.goToTableView && _ctx.goToTableView(...args))),\n          class: \"toggle-view-button\"\n        }, \" Switch to Table View \")\n      ]),\n      (_ctx.isFetching && !_ctx.isTableView)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\"))\n        : _createCommentVNode(\"\", true),\n      (!_ctx.isTableView)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 1,\n            onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.scrollToTop && _ctx.scrollToTop(...args))),\n            class: \"top-button\"\n          }, \"TOP\"))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.popularItems, (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: item.id,\n            class: \"poster-container\",\n            onClick: ($event: any) => (_ctx.toggleLocalStorage(item))\n          }, [\n            _createElementVNode(\"img\", {\n              src: item.image,\n              alt: \"movie poster\",\n              class: _normalizeClass([\"poster-image\", {'selected-poster': _ctx.isItemInLocalStorage(item)}])\n            }, null, 10, _hoisted_5),\n            _createElementVNode(\"p\", _hoisted_6, _toDisplayString(item.name), 1)\n          ], 8, _hoisted_4))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, null, 512)\n    ]),\n    _createVNode(_component_FooterComponent)\n  ], 64))\n}","<template>\n  <NavbarComponent />\n  <div id=\"popular\">\n    <div>\n      <!-- 테이블 뷰로 전환하는 버튼 -->\n      <button @click=\"goToTableView\" class=\"toggle-view-button\">\n        Switch to Table View\n      </button>\n    </div>\n    <!-- 데이터 로딩 중일 때 로딩 표시 -->\n    <div v-if=\"isFetching && !isTableView\" class=\"loading\">Loading...</div>\n    <!-- 페이지 상단으로 이동 버튼 -->\n    <button v-if=\"!isTableView\" @click=\"scrollToTop\" class=\"top-button\">TOP</button>\n    <!-- 포스터 리스트 추가 -->\n    <div class=\"poster-list\">\n      <div\n        v-for=\"item in popularItems\"\n        :key=\"item.id\"\n        class=\"poster-container\"\n        @click=\"toggleLocalStorage(item)\"\n      >\n        <img :src=\"item.image\" alt=\"movie poster\" class=\"poster-image\" :class=\"{'selected-poster': isItemInLocalStorage(item)}\" />\n        <p class=\"poster-title\">{{ item.name }}</p>\n      </div>\n    </div>\n    <!-- 무한 스크롤을 위한 감시 요소 -->\n    <div ref=\"infiniteScrollTarget\" class=\"infinite-scroll-target\"></div>\n  </div>\n  <FooterComponent />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { useRouter } from 'vue-router';\nimport NavbarComponent from '../components/Navbar.vue';\nimport FooterComponent from '../components/Footer.vue';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    NavbarComponent,\n    FooterComponent,\n  },\n  setup() {\n    const popularItems = ref<any[]>([]);\n    const currentPage = ref(1);\n    const isFetching = ref(false);\n    const showTopButton = ref(true);\n    const router = useRouter();\n    const infiniteScrollTarget = ref<HTMLElement | null>(null);\n\n\n    const API_KEY = process.env.VUE_APP_TMDB_API_KEY\n\n    const fetchPopularMovies = async (page = 1) => {\n      if (isFetching.value) return;\n      isFetching.value = true;\n\n      const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=ko-KR&page=${page}`;\n      console.log(API_KEY)\n      try {\n        const response = await fetch(url);\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n\n        popularItems.value = [\n          ...popularItems.value,\n          ...data.results.map((item: any) => ({\n            id: item.id,\n            name: item.title,\n            image: `https://image.tmdb.org/t/p/w500${item.poster_path}`,\n          })),\n        ];\n        currentPage.value += 1;\n      } catch (error) {\n        console.error('Failed to fetch popular movies:', error);\n      } finally {\n        isFetching.value = false;\n      }\n    };\n\n    const handleIntersect = (entries: IntersectionObserverEntry[]) => {\n      const [entry] = entries;\n      if (entry.isIntersecting && !isFetching.value) {\n        fetchPopularMovies(currentPage.value);\n      }\n    };\n\n    const scrollToTop = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const goToTableView = () => {\n      router.push('/popular/table');\n    };\n\n    const toggleLocalStorage = (item: any) => {\n      let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n      const itemIndex = storedItems.findIndex((storedItem: any) => storedItem.id === item.id);\n\n      if (itemIndex === -1) {\n        storedItems.push(item);\n      } else {\n        storedItems.splice(itemIndex, 1);\n      }\n\n      localStorage.setItem('selectedMovies', JSON.stringify(storedItems));\n      popularItems.value = [...popularItems.value];\n    };\n\n    const isItemInLocalStorage = (item: any) => {\n      let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n      return storedItems.some((storedItem: any) => storedItem.id === item.id);\n    };\n\n    onMounted(() => {\n      fetchPopularMovies();\n\n      const observer = new IntersectionObserver(handleIntersect, {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.1,\n      });\n\n      if (infiniteScrollTarget.value) {\n        observer.observe(infiniteScrollTarget.value);\n      }\n    });\n\n    return {\n      popularItems,\n      isFetching,\n      showTopButton,\n      scrollToTop,\n      goToTableView,\n      toggleLocalStorage,\n      isItemInLocalStorage,\n      infiniteScrollTarget,\n    };\n  },\n});\n</script>\n\n<style scoped>\n/* 모바일 크기에 맞는 반응형 디자인 */\n@media (max-width: 768px) {\n  .poster-list {\n    display: inline;\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n    gap: 10px;\n    \n  }\n\n  .poster-title{\n    font-size: 1px;\n  }\n\n  .poster-container {\n    margin: 0 auto;\n    width: 100%;\n  }\n\n  .poster-image {\n    width: 100%;\n    height: auto;\n    border-radius: 10px;\n  }\n\n  .top-button {\n    padding: 8px 12px;\n    font-size: 0.8em;\n  }\n}\n\n@media (max-width: 480px) {\n  .poster-list {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: 5px;\n    padding: 5px;\n  }\n\n  .poster-image {\n    margin-bottom: 10px;\n  }\n\n  .top-button {\n    bottom: 100px;\n  }\n\n}\n\n.loading {\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(255, 255, 255, 0.8);\n  color: #000000;\n  padding: 20px;\n  border-radius: 5px;\n  z-index: 1000;\n}\n\n.top-button {\n  position: fixed;\n  bottom: 80px;\n  right: 20px;\n  background-color: #e50914;\n  color: #ffffff;\n  border: none;\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.top-button:hover {\n  background-color: #f40612;\n}\n\n.toggle-view-button {\n  margin: 20px;\n  padding: 10px;\n  background-color: #f40612;\n  color: #ffffff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.toggle-view-button:hover {\n  background-color: #333333;\n}\n\n.poster-list {\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 20px;\n}\n\n.poster-container {\n  position: relative;\n  transition: transform 0.3s;\n  cursor: pointer;\n}\n\n.poster-container:hover {\n  transform: scale(1.05);\n}\n\n.poster-image {\n  width: 100%;\n  border-radius: 10px;\n  transition: transform 0.3s;\n  border: 2px solid transparent;\n}\n\n.selected-poster {\n  border-color: #e50914;\n}\n\n.poster-title {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  color: #ffffff;\n  background: rgba(0, 0, 0, 0.5);\n  padding: 5px 10px;\n  border-radius: 5px;\n  transition: color 0.3s;\n}\n\n.infinite-scroll-target {\n  height: 1px;\n  background-color: transparent;\n}\n</style>\n","import { render } from \"./PopularView.vue?vue&type=template&id=1052de06&scoped=true&ts=true\"\nimport script from \"./PopularView.vue?vue&type=script&lang=ts\"\nexport * from \"./PopularView.vue?vue&type=script&lang=ts\"\n\nimport \"./PopularView.vue?vue&type=style&index=0&id=1052de06&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1052de06\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { id: \"table-view\" }\nconst _hoisted_2 = { class: \"grid-view\" }\nconst _hoisted_3 = { class: \"grid-container\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = { class: \"poster-image-wrapper\" }\nconst _hoisted_6 = [\"src\", \"alt\"]\nconst _hoisted_7 = { class: \"poster-title\" }\nconst _hoisted_8 = { class: \"pagination\" }\nconst _hoisted_9 = [\"disabled\"]\nconst _hoisted_10 = [\"onClick\"]\nconst _hoisted_11 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_NavbarComponent = _resolveComponent(\"NavbarComponent\")!\n  const _component_FooterComponent = _resolveComponent(\"FooterComponent\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_NavbarComponent),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.goToPopularView && _ctx.goToPopularView(...args))),\n        class: \"toggle-view-button\"\n      }, \"Switch to Popular View\"),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.paginatedItems, (item) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: item.id,\n              class: \"grid-item\",\n              onClick: ($event: any) => (_ctx.toggleLocalStorage(item))\n            }, [\n              _createElementVNode(\"div\", _hoisted_5, [\n                (item.image)\n                  ? (_openBlock(), _createElementBlock(\"img\", {\n                      key: 0,\n                      src: item.image,\n                      alt: item.name,\n                      class: _normalizeClass([\"poster-image\", {'selected-poster': _ctx.isItemInLocalStorage(item)}])\n                    }, null, 10, _hoisted_6))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_7, _toDisplayString(item.name), 1)\n              ])\n            ], 8, _hoisted_4))\n          }), 128))\n        ]),\n        _createElementVNode(\"div\", _hoisted_8, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.goToPage(_ctx.currentPage - 1))),\n            disabled: _ctx.currentPage === 1\n          }, \"Previous\", 8, _hoisted_9),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.visiblePages, (page) => {\n            return (_openBlock(), _createElementBlock(\"span\", {\n              key: page,\n              onClick: ($event: any) => (_ctx.goToPage(page)),\n              class: _normalizeClass(['page-number', { active: page === _ctx.currentPage }])\n            }, _toDisplayString(page), 11, _hoisted_10))\n          }), 128)),\n          _createElementVNode(\"button\", {\n            onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.goToPage(_ctx.currentPage + 1))),\n            disabled: _ctx.currentPage === _ctx.totalPages\n          }, \"Next\", 8, _hoisted_11)\n        ])\n      ])\n    ]),\n    _createVNode(_component_FooterComponent)\n  ], 64))\n}","<template>\n  <NavbarComponent /> <!-- 네비게이션 바 컴포넌트 추가 -->\n  <div id=\"table-view\">\n    <!-- 인기 보기로 전환하는 버튼 -->\n    <button @click=\"goToPopularView\" class=\"toggle-view-button\">Switch to Popular View</button> <!-- 버튼 클릭 시 goToPopularView 함수 호출 -->\n    <div class=\"grid-view\">\n      <div class=\"grid-container\">\n        <!-- 페이지네이션을 적용한 각 영화 아이템 출력 -->\n        <div v-for=\"item in paginatedItems\" :key=\"item.id\" class=\"grid-item\" @click=\"toggleLocalStorage(item)\"> <!-- 각 영화 아이템에 고유 키 설정 및 클릭 시 로컬 스토리지 토글 함수 호출 -->\n          <div class=\"poster-image-wrapper\">\n            <!-- 영화 포스터 이미지 출력, 이미지가 있을 때만 렌더링 -->\n            <img :src=\"item.image\" :alt=\"item.name\" class=\"poster-image\" :class=\"{'selected-poster': isItemInLocalStorage(item)}\" v-if=\"item.image\" />\n            <!-- 영화 제목 출력 -->\n            <div class=\"poster-title\">{{ item.name }}</div> <!-- 영화 제목 텍스트 출력 -->\n          </div>\n        </div>\n      </div>\n      <div class=\"pagination\">\n        <!-- 이전 페이지 버튼, 첫 번째 페이지에서는 비활성화 -->\n        <button @click=\"goToPage(currentPage - 1)\" :disabled=\"currentPage === 1\">Previous</button>\n        <!-- 페이지 번호 목록 반복 출력 -->\n        <span v-for=\"page in visiblePages\" :key=\"page\" @click=\"goToPage(page)\" :class=\"['page-number', { active: page === currentPage }]\">\n          {{ page }} <!-- 페이지 번호 출력 -->\n        </span>\n        <!-- 다음 페이지 버튼, 마지막 페이지에서는 비활성화 -->\n        <button @click=\"goToPage(currentPage + 1)\" :disabled=\"currentPage === totalPages\">Next</button>\n      </div>\n    </div>\n  </div>\n  <FooterComponent /> <!-- 푸터 컴포넌트 추가 --> \n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref, onMounted } from 'vue'; // Vue와 필요한 함수들 import\nimport { useRouter } from 'vue-router'; // Vue Router import\nimport NavbarComponent from '../components/Navbar.vue';\nimport FooterComponent from '../components/Footer.vue';\ninterface Item {\n  id: number; // 영화 ID\n  name: string; // 영화 제목\n  image: string; // 영화 포스터 이미지 URL\n}\n\nexport default defineComponent({\n  name: 'TableViewComponent', // 컴포넌트 이름 설정\n  components: { // 사용할 컴포넌트 설정\n    NavbarComponent, // 네비게이션 바 컴포넌트\n    FooterComponent, // 푸터 컴포넌트\n  },\n\n  props: {\n    items: {\n      type: Array as PropType<Item[]>, // props로 영화 데이터 목록 받음\n      required: true, // 필수 props 설정\n    },\n  },\n  setup(props) {\n    const popularItems = ref<Item[]>([]); // 인기 영화 목록 상태 변수\n    const currentPage = ref(1); // 현재 페이지 번호 상태 변수\n    const itemsPerPage = 20; // 페이지당 표시할 아이템 개수\n    const isFetching = ref(false); // 데이터 로딩 상태 여부\n    const router = useRouter(); // Vue Router 사용\n\n    const totalPages = computed(() => Math.ceil(popularItems.value.length / itemsPerPage)); // 총 페이지 수 계산\n\n    const paginatedItems = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage; // 현재 페이지에 해당하는 시작 인덱스 계산\n      const end = start + itemsPerPage; // 현재 페이지에 해당하는 끝 인덱스 계산\n      return popularItems.value.slice(start, end); // 현재 페이지에 해당하는 영화 데이터 반환\n    });\n\n    // 페이지네이션에 표시될 페이지 번호 계산\n    const visiblePages = computed(() => {\n      const pages = []; // 페이지 번호 목록\n      const maxVisiblePages = 8; // 최대 표시할 페이지 번호 개수\n      const total = totalPages.value; // 전체 페이지 개수\n\n      let startPage = Math.max(1, currentPage.value - Math.floor(maxVisiblePages / 2)); // 시작 페이지 번호\n      let endPage = startPage + maxVisiblePages - 1; // 끝 페이지 번호\n\n      if (endPage > total) { // 끝 페이지 번호가 전체 페이지 개수를 초과하는 경우\n        endPage = total; // 끝 페이지 번호를 전체 페이지 개수로 설정\n        startPage = Math.max(1, endPage - maxVisiblePages + 1); // 시작 페이지 번호를 다시 계산\n      }\n      \n      for (let i = startPage; i <= endPage; i++) { // 시작 페이지부터 끝 페이지까지 반복\n        pages.push(i); // 페이지 번호 목록에 추가\n      }\n\n      return pages;\n    });\n\n\n    const API_KEY = process.env.VUE_APP_TMDB_API_KEY;\n\n    // 인기 영화를 가져오는 함수\n    const fetchPopularMovies = async (initialLoad = false) => {\n      if (isFetching.value) return; // 이미 데이터를 로딩 중이면 함수 종료\n      isFetching.value = true; // 데이터 로딩 상태 설정\n\n      const BASE_URL = 'https://api.themoviedb.org/3'; // TMDb API 기본 URL 설정\n      try {\n        if (initialLoad) {\n          // 초기 8페이지까지의 데이터를 한 번에 가져옴\n          for (let page = 1; page <= 8; page++) {\n            const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=ko-KR&page=${page}`; // API 요청 URL 생성\n            const response = await fetch(url); // API 호출\n            const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n\n            popularItems.value = [\n              ...popularItems.value, // 기존 데이터 유지\n              ...data.results.map((item: any) => ({ // 새로운 영화 데이터 추가\n                id: item.id, // 영화 ID\n                name: item.title, // 영화 제목\n                image: `https://image.tmdb.org/t/p/w500${item.poster_path}`, // 포스터 이미지 URL\n              })),\n            ];\n          }\n        } else {\n          // 추가 페이지 데이터를 가져옴\n          const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=ko-KR&page=${currentPage.value}`; // API 요청 URL 생성\n          const response = await fetch(url); // API 호출\n          const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n\n          popularItems.value = [\n            ...popularItems.value, // 기존 데이터 유지\n            ...data.results.map((item: any) => ({ // 새로운 영화 데이터 추가\n              id: item.id, // 영화 ID\n              name: item.title, // 영화 제목\n              image: `https://image.tmdb.org/t/p/w500${item.poster_path}`, // 포스터 이미지 URL\n            })),\n          ];\n        }\n      } catch (error) {\n        console.error('Failed to fetch popular movies:', error); // 오류 발생 시 콘솔에 메시지 출력\n      } finally {\n        isFetching.value = false; // 데이터 로딩 상태 해제\n      }\n    };\n\n    // 특정 페이지로 이동하는 함수\n    const goToPage = (page: number) => {\n      if (page > 0 && page <= totalPages.value) { // 유효한 페이지 범위인지 확인\n        currentPage.value = page; // 현재 페이지 설정\n        fetchPopularMovies(); // 해당 페이지의 인기 영화 데이터 가져오기\n      }\n    };\n\n    // 이전 페이지로 이동하는 함수\n    const previousPage = () => {\n      if (currentPage.value > 1) { // 첫 페이지가 아닌 경우\n        currentPage.value -= 1; // 현재 페이지 감소\n        fetchPopularMovies(); // 이전 페이지의 인기 영화 데이터 가져오기\n      }\n    };\n\n    // 다음 페이지로 이동하는 함수\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) { // 마지막 페이지가 아닌 경우\n        currentPage.value += 1; // 현재 페이지 증가\n        fetchPopularMovies(); // 다음 페이지의 인기 영화 데이터 가져오기\n      }\n    };\n\n    // 인기 보기로 이동하는 함수\n    const goToPopularView = () => {\n      router.push('/popular'); // 인기 보기 뷰로 라우팅\n    };\n\n    // 로컬 스토리지에 포스터 데이터를 저장하거나 삭제하는 함수\n    const toggleLocalStorage = (item: Item) => {\n      let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]'); // 로컬 스토리지에서 기존 저장된 영화 목록 가져오기\n      const itemIndex = storedItems.findIndex((storedItem: Item) => storedItem.id === item.id); // 영화가 이미 저장되어 있는지 확인\n\n      if (itemIndex === -1) {\n        // 아이템이 로컬 스토리지에 없으면 추가\n        storedItems.push(item); // 영화 정보를 저장 목록에 추가\n      } else {\n        // 아이템이 이미 로컬 스토리지에 있으면 제거\n        storedItems.splice(itemIndex, 1); // 영화 정보를 저장 목록에서 제거\n      }\n\n      localStorage.setItem('selectedMovies', JSON.stringify(storedItems)); // 업데이트된 영화 목록을 로컬 스토리지에 저장\n      console.log('Updated localStorage:', storedItems); // 업데이트된 로컬 스토리지 로그 출력\n      popularItems.value = [...popularItems.value]; // 배열을 다시 할당하여 반응성 트리거\n    };\n\n    // 로컬 스토리지에 아이템이 있는지 확인하는 함수\n    const isItemInLocalStorage = (item: Item) => {\n      let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]'); // 로컬 스토리지에서 저장된 영화 목록 가져오기\n      return storedItems.some((storedItem: Item) => storedItem.id === item.id); // 해당 영화가 저장되어 있는지 확인\n    };\n\n    // 컴포넌트가 마운트될 때 호출되는 함수\n    onMounted(() => {\n      fetchPopularMovies(true); // 초기 로드 시 8페이지 데이터 가져오기\n    });\n\n    return {\n      paginatedItems, // 페이지네이션된 영화 데이터 반환\n      currentPage, // 현재 페이지 반환\n      totalPages, // 총 페이지 수 반환\n      visiblePages, // 표시할 페이지 번호 목록 반환\n      goToPage, // 특정 페이지로 이동 함수 반환\n      previousPage, // 이전 페이지로 이동 함수 반환\n      nextPage, // 다음 페이지로 이동 함수 반환\n      popularItems, // 인기 영화 목록 반환\n      goToPopularView, // 인기 보기 뷰 이동 함수 반환\n      toggleLocalStorage, // 로컬 스토리지 토글 함수 반환\n      isItemInLocalStorage, // 로컬 스토리지에 영화가 있는지 확인하는 함수 반환\n    };\n  },\n});\n</script>\n\n<style scoped>\n\n.grid-view {\n  padding: 0; /* 내부 여백 없음 */\n  overflow: hidden; /* 스크롤 제거 */\n  background-color: #141414; /* 배경색 설정 */\n}\n\n.grid-container {\n  margin-top: 10px; /* 상단 여백 설정 */\n  display: grid; /* 그리드 레이아웃 사용 */\n  grid-template-columns: repeat(10, 1fr); /* 한 줄에 10개 아이템 */\n  gap: 10px; /* 각 아이템 사이의 간격 설정 */\n  padding: 0 30px; /* 좌우 여백 설정 */\n  overflow: hidden; /* 스크롤 제거 */\n}\n\n.grid-item {\n  transition: transform 0.2s; /* 크기 변화 시 부드러운 트랜지션 설정 */\n}\n\n.grid-item:hover {\n  transform: scale(1.03); /* 호버 시 크기 확대 */\n}\n\n.poster-title {\n  position: absolute; /* 절대 위치 설정 */\n  bottom: 5px; /* 하단 여백 설정 */\n  left: 5px; /* 왼쪽 여백 설정 */\n  font-size: 0.8em; /* 글꼴 크기 설정 */\n  padding: 3px; /* 내부 여백 설정 */\n  border-radius: 3px; /* 모서리 둥글게 설정 */\n}\n\n.poster-image {\n  width: 100%; /* 너비 100% 설정 */\n  height: auto; /* 높이는 자동 설정 */\n  border-radius: 3px; /* 모서리 둥글게 설정 */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4); /* 그림자 설정 */\n  border: 1px solid transparent; /* 기본 테두리는 투명 설정 */\n}\n\n.selected-poster {\n  border-color: #e50914; /* 로컬 스토리지에 저장된 경우 테두리 빨강 설정 */\n}\n\n.pagination {\n  display: flex; /* 플렉스 레이아웃 사용 */\n  justify-content: center; /* 수평 가운데 정렬 */\n  align-items: center; /* 수직 가운데 정렬 */\n  gap: 5px; /* 각 아이템 사이의 간격 설정 */\n  margin-top: 20px; /* 상단 여백 설정 */\n}\n\n.page-number {\n  padding: 5px; /* 내부 여백 설정 */\n  font-size: 0.9em; /* 글꼴 크기 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  transition: background-color 0.2s; /* 배경색 변화 시 부드러운 트랜지션 설정 */\n}\n\n.page-number:hover {\n  background-color: #333333; /* 호버 시 배경색 변경 */\n  border-radius: 3px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.page-number.active {\n  font-weight: bold; /* 굵은 글꼴 설정 */\n  text-decoration: underline; /* 밑줄 설정 */\n}\n\nbutton {\n  margin: 10px; /* 바깥 여백 설정 */\n  padding: 8px; /* 내부 여백 설정 */\n  font-size: 0.9em; /* 글꼴 크기 설정 */\n  background-color: #f40612; /* 배경색 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 3px; /* 모서리 둥글게 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n#table-view {\n  overflow-y: hidden !important; /* 세로 스크롤 제거 */\n}\n</style>\n","import { render } from \"./TableView.vue?vue&type=template&id=6befdbee&scoped=true&ts=true\"\nimport script from \"./TableView.vue?vue&type=script&lang=ts\"\nexport * from \"./TableView.vue?vue&type=script&lang=ts\"\n\nimport \"./TableView.vue?vue&type=style&index=0&id=6befdbee&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6befdbee\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"loading\"\n}\nconst _hoisted_2 = { id: \"wishlist\" }\nconst _hoisted_3 = { class: \"poster-list\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = [\"src\"]\nconst _hoisted_6 = { class: \"poster-title\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_NavbarComponent = _resolveComponent(\"NavbarComponent\")!\n  const _component_FooterComponent = _resolveComponent(\"FooterComponent\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_NavbarComponent),\n    (_ctx.isFetching)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading...\"))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_ctx.showTopButton)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.scrollToTop && _ctx.scrollToTop(...args))),\n            class: \"top-button\"\n          }, \"TOP\"))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.popularItems, (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: item.id,\n            class: _normalizeClass([\"poster-container\", {'selected-poster': _ctx.isItemInLocalStorage(item)}]),\n            onClick: ($event: any) => (_ctx.toggleLocalStorage(item))\n          }, [\n            _createElementVNode(\"img\", {\n              src: item.image,\n              alt: \"movie poster\",\n              class: \"poster-image\"\n            }, null, 8, _hoisted_5),\n            _createElementVNode(\"p\", _hoisted_6, _toDisplayString(item.name), 1)\n          ], 10, _hoisted_4))\n        }), 128))\n      ])\n    ]),\n    _createVNode(_component_FooterComponent)\n  ], 64))\n}","<template>\n    <NavbarComponent />\n    <div v-if=\"isFetching\" class=\"loading\">Loading...</div>\n    <div id=\"wishlist\">\n      <button v-if=\"showTopButton\" @click=\"scrollToTop\" class=\"top-button\">TOP</button>\n      <!-- 포스터 리스트 추가 -->\n      <div class=\"poster-list\">\n        <div\n          v-for=\"item in popularItems\"\n          :key=\"item.id\"\n          class=\"poster-container\"\n          @click=\"toggleLocalStorage(item)\"\n          :class=\"{'selected-poster': isItemInLocalStorage(item)}\"\n        >\n          <img :src=\"item.image\" alt=\"movie poster\" class=\"poster-image\" />\n          <p class=\"poster-title\">{{ item.name }}</p>\n        </div>\n      </div>\n    </div>\n    <FooterComponent />\n  </template>\n  \n  <script lang=\"ts\">\n  import { defineComponent, ref, onMounted, onBeforeUnmount } from 'vue';\n  import { useRouter } from 'vue-router';\n  import NavbarComponent from '../components/Navbar.vue';\n  import FooterComponent from '../components/Footer.vue';\n  \n  export default defineComponent({\n    name: 'WishlistViewComponent',\n    components: {\n      NavbarComponent,\n      FooterComponent,\n    },\n    setup() {\n      const popularItems = ref<any[]>([]);\n      const currentPage = ref(1);\n      const isFetching = ref(false);\n      const showTopButton = ref(false);\n      const router = useRouter();\n  \n      const fetchPopularMovies = async () => {\n        if (isFetching.value) return;\n        isFetching.value = true;\n  \n        try {\n          // LocalStorage에서 아이템 불러오기\n          const storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n          popularItems.value = [...storedItems];\n        } catch (error) {\n          console.error('Failed to fetch popular movies:', error);\n        } finally {\n          isFetching.value = false;\n        }\n      };\n  \n      // 스크롤 이벤트를 처리하는 함수\n      const handleScroll = () => {\n        // 화면의 맨 아래에 도달했는지 확인\n        const bottomOfWindow =\n          window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 10;\n        if (bottomOfWindow) {\n          fetchPopularMovies();\n        }\n  \n        // 스크롤 위치에 따라 TOP 버튼 표시 여부 설정\n        showTopButton.value = window.scrollY > 200;\n      };\n  \n      // TOP 버튼 클릭 시 화면 맨 위로 스크롤하는 함수\n      const scrollToTop = () => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      };\n  \n      // Table View로 이동하는 함수\n      const goToPopularView = () => {\n        router.push('/popular');\n      };\n  \n      // 로컬 스토리지에 포스터 데이터를 저장하거나 삭제하는 함수\n      const toggleLocalStorage = (item: any) => {\n        let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n        const itemIndex = storedItems.findIndex((storedItem: any) => storedItem.id === item.id);\n  \n        if (itemIndex === -1) {\n          // 아이템이 로컬 스토리지에 없으면 추가\n          storedItems.push(item);\n        } else {\n          // 아이템이 이미 로컬 스토리지에 있으면 제거\n          storedItems.splice(itemIndex, 1);\n        }\n  \n        localStorage.setItem('selectedMovies', JSON.stringify(storedItems));\n        popularItems.value = [...storedItems];\n      };\n  \n      // 로컬 스토리지에 아이템이 있는지 확인하는 함수\n      const isItemInLocalStorage = (item: any) => {\n        let storedItems = JSON.parse(localStorage.getItem('selectedMovies') || '[]');\n        return storedItems.some((storedItem: any) => storedItem.id === item.id);\n      };\n  \n      // 컴포넌트가 마운트될 때 호출되는 함수\n      onMounted(() => {\n        // 초기 로드 시 로컬 스토리지 데이터 가져오기\n        fetchPopularMovies();\n        // 스크롤 이벤트 리스너 추가\n        window.addEventListener('scroll', handleScroll);\n      });\n  \n      // 컴포넌트가 언마운트될 때 호출되는 함수\n      onBeforeUnmount(() => {\n        // 스크롤 이벤트 리스너 제거\n        window.removeEventListener('scroll', handleScroll);\n      });\n  \n      return {\n        popularItems,\n        isFetching,\n        showTopButton,\n        scrollToTop,\n        goToPopularView,\n        toggleLocalStorage,\n        isItemInLocalStorage,\n      };\n    },\n  });\n  </script>\n  \n  <style scoped>\n  /* 기존 스타일 유지 */\n  .loading {\n    position: fixed;\n    bottom: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: rgba(0, 0, 0, 0.8);\n    color: #ffffff;\n    padding: 10px;\n    border-radius: 5px;\n    z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n  }\n  \n  .top-button {\n    position: fixed;\n    bottom: 80px;\n    right: 20px;\n    background-color: #e50914;\n    color: #ffffff;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n  }\n  \n  .top-button:hover {\n    background-color: #f40612;\n  }\n  \n  /* 포스터 이미지와 제목을 포함한 컨테이너 */\n  .poster-list {\n    margin-top: 50px;\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    gap: 20px;\n  }\n  \n  .poster-container {\n    position: relative;\n    transition: transform 0.3s;\n    cursor: pointer;\n  }\n  \n  .poster-container:hover {\n    transform: scale(1.1);\n  }\n  \n  .poster-image {\n    width: 100%;\n    border-radius: 10px;\n    transition: transform 0.3s;\n    border: 2px solid transparent;\n    border-color: #e50914; /* 로컬 스토리지에 있는 경우 얇은 빨간 테두리 추가 */\n  }\n  \n  .selected-poster {\n    border-color: #e50914; /* 로컬 스토리지에 있는 경우 얇은 빨간 테두리 추가 */\n  }\n  \n  .poster-title {\n    position: absolute;\n    bottom: 10px;\n    left: 10px;\n    color: #ffffff;\n    background: rgba(0, 0, 0, 0.5);\n    padding: 5px 10px;\n    border-radius: 5px;\n    transition: color 0.3s;\n  }\n  \n  .poster-container:hover .poster-title {\n    color: #ffffff; /* 글자 색상 변경 */\n  }\n   /* 모바일 크기에 맞는 반응형 디자인 */\n   @media (max-width: 768px) {\n    .poster-list {\n      grid-template-columns: repeat(2, 1fr);\n      gap: 10px;\n      padding: 10px;\n      width: 100%;\n    }\n\n    .poster-title {\n      font-size: 12px;\n    }\n\n    .poster-container {\n      margin: 0 auto;\n      width: 100%;\n    }\n\n    .poster-image {\n      width: 100%;\n      height: auto;\n      border-radius: 10px;\n    }\n\n    .top-button {\n      padding: 8px 12px;\n      font-size: 0.8em;\n    }\n  }\n\n  @media (max-width: 480px) {\n    .poster-list {\n      grid-template-columns: repeat(2, minmax(0, 1fr));\n      gap: 5px;\n      padding: 5px;\n    }\n\n    .poster-image {\n      margin-bottom: 10px;\n    }\n\n    .poster-title {\n      font-size: 10px;\n    }\n\n    .top-button {\n      bottom: 60px;\n      right: 10px;\n      font-size: 0.7em;\n    }\n  }\n  </style>\n  ","import { render } from \"./WishlistView.vue?vue&type=template&id=1097f807&scoped=true&ts=true\"\nimport script from \"./WishlistView.vue?vue&type=script&lang=ts\"\nexport * from \"./WishlistView.vue?vue&type=script&lang=ts\"\n\nimport \"./WishlistView.vue?vue&type=style&index=0&id=1097f807&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1097f807\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"search-filter-container\" }\nconst _hoisted_2 = { class: \"search-container\" }\nconst _hoisted_3 = { class: \"filter-section\" }\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"loading\"\n}\nconst _hoisted_6 = { class: \"grid-view\" }\nconst _hoisted_7 = { class: \"grid-container\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = [\"src\", \"alt\"]\nconst _hoisted_10 = { class: \"poster-title\" }\nconst _hoisted_11 = {\n  ref: \"infiniteScrollTarget\",\n  class: \"infinite-scroll-target\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_NavbarComponent = _resolveComponent(\"NavbarComponent\")!\n  const _component_FooterComponent = _resolveComponent(\"FooterComponent\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_NavbarComponent),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.searchQuery) = $event)),\n          placeholder: \"Search movies...\",\n          class: \"search-input\"\n        }, null, 512), [\n          [_vModelText, _ctx.searchQuery]\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.searchMovies && _ctx.searchMovies(...args))),\n          class: \"search-button\"\n        }, \"Search\")\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"label\", null, [\n          _cache[8] || (_cache[8] = _createTextVNode(\" Genre: \")),\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.selectedGenre) = $event))\n          }, [\n            _cache[7] || (_cache[7] = _createElementVNode(\"option\", { value: \"\" }, \"All\", -1)),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.genres, (genre) => {\n              return (_openBlock(), _createElementBlock(\"option\", {\n                key: genre.id,\n                value: genre.id\n              }, _toDisplayString(genre.name), 9, _hoisted_4))\n            }), 128))\n          ], 512), [\n            [_vModelSelect, _ctx.selectedGenre]\n          ])\n        ]),\n        _createElementVNode(\"label\", null, [\n          _cache[10] || (_cache[10] = _createTextVNode(\" Rating: \")),\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.selectedRatingRange) = $event))\n          }, _cache[9] || (_cache[9] = [\n            _createStaticVNode(\"<option value=\\\"\\\" data-v-285d8cea>All</option><option value=\\\"0-4\\\" data-v-285d8cea>4 and below</option><option value=\\\"4-5\\\" data-v-285d8cea>4 - 5</option><option value=\\\"5-6\\\" data-v-285d8cea>5 - 6</option><option value=\\\"6-7\\\" data-v-285d8cea>6 - 7</option><option value=\\\"7-8\\\" data-v-285d8cea>7 - 8</option><option value=\\\"8-9\\\" data-v-285d8cea>8 - 9</option><option value=\\\"9-10\\\" data-v-285d8cea>9 - 10</option>\", 8)\n          ]), 512), [\n            [_vModelSelect, _ctx.selectedRatingRange]\n          ])\n        ]),\n        _createElementVNode(\"label\", null, [\n          _cache[12] || (_cache[12] = _createTextVNode(\" Sort By: \")),\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.sortBy) = $event))\n          }, _cache[11] || (_cache[11] = [\n            _createElementVNode(\"option\", { value: \"popularity.asc\" }, \"Popularity (Ascending)\", -1),\n            _createElementVNode(\"option\", { value: \"popularity.desc\" }, \"Popularity (Descending)\", -1)\n          ]), 512), [\n            [_vModelSelect, _ctx.sortBy]\n          ])\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.resetFilters && _ctx.resetFilters(...args))),\n          class: \"reset-button\"\n        }, \"Reset Filters\")\n      ])\n    ]),\n    (_ctx.isFetching)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"Loading...\"))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"div\", _hoisted_7, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.movies, (movie) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: movie.id,\n            class: \"grid-item poster-container\",\n            onClick: ($event: any) => (_ctx.toggleLocalStorage(movie))\n          }, [\n            _createElementVNode(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n              alt: movie.title,\n              class: _normalizeClass([\"poster-image\", {'selected-poster': _ctx.isItemInLocalStorage(movie)}])\n            }, null, 10, _hoisted_9),\n            _createElementVNode(\"p\", _hoisted_10, _toDisplayString(movie.title), 1)\n          ], 8, _hoisted_8))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", _hoisted_11, null, 512)\n    ]),\n    (_ctx.showTopButton)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 1,\n          onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.scrollToTop && _ctx.scrollToTop(...args))),\n          class: \"top-button\"\n        }, \"TOP\"))\n      : _createCommentVNode(\"\", true),\n    _createVNode(_component_FooterComponent)\n  ], 64))\n}","<template>\n  <NavbarComponent /> <!-- 네비게이션 바 컴포넌트 -->\n  <div class=\"search-filter-container\">\n    <!-- 검색창과 버튼 섹션 -->\n    <div class=\"search-container\">\n      <!-- 사용자가 영화 제목을 검색할 수 있는 입력 필드 -->\n      <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search movies...\" class=\"search-input\" /> <!-- 검색어 입력 필드 -->\n      <!-- 검색 버튼 -->\n      <button @click=\"searchMovies\" class=\"search-button\">Search</button> <!-- 검색 버튼 클릭 시 영화 검색 -->\n    </div>\n\n    <!-- 필터 섹션 -->\n    <div class=\"filter-section\">\n      <!-- 장르 필터 -->\n      <label>\n        Genre:\n        <select v-model=\"selectedGenre\"> <!-- 장르 선택 드롭다운 -->\n          <option value=\"\">All</option> <!-- 모든 장르 옵션 -->\n          <!-- 사용 가능한 장르 목록을 동적으로 생성 -->\n          <option v-for=\"genre in genres\" :key=\"genre.id\" :value=\"genre.id\">\n            {{ genre.name }} <!-- 각 장르 이름 표시 -->\n          </option>\n        </select>\n      </label>\n\n      <!-- 평점 필터 -->\n      <label>\n        Rating:\n        <select v-model=\"selectedRatingRange\"> <!-- 평점 범위 선택 드롭다운 -->\n          <option value=\"\">All</option> <!-- 모든 평점 옵션 -->\n          <!-- 평점 범위 필터 옵션 -->\n          <option value=\"0-4\">4 and below</option> <!-- 평점 4 이하 -->\n          <option value=\"4-5\">4 - 5</option> <!-- 평점 4에서 5 사이 -->\n          <option value=\"5-6\">5 - 6</option> <!-- 평점 5에서 6 사이 -->\n          <option value=\"6-7\">6 - 7</option> <!-- 평점 6에서 7 사이 -->\n          <option value=\"7-8\">7 - 8</option> <!-- 평점 7에서 8 사이 -->\n          <option value=\"8-9\">8 - 9</option> <!-- 평점 8에서 9 사이 -->\n          <option value=\"9-10\">9 - 10</option> <!-- 평점 9에서 10 사이 -->\n        </select>\n      </label>\n\n      <!-- 정렬 옵션 필터 -->\n      <label>\n        Sort By:\n        <select v-model=\"sortBy\"> <!-- 정렬 기준 선택 드롭다운 -->\n          <option value=\"popularity.asc\">Popularity (Ascending)</option> <!-- 인기도 오름차순 -->\n          <option value=\"popularity.desc\">Popularity (Descending)</option> <!-- 인기도 내림차순 -->\n        </select>\n      </label>\n\n      <!-- 필터 초기화 버튼 -->\n      <button @click=\"resetFilters\" class=\"reset-button\">Reset Filters</button> <!-- 모든 필터 초기화 버튼 -->\n    </div>\n  </div>\n\n  <!-- 로딩 표시 (영화 데이터가 로딩 중일 때 표시됨) -->\n  <div v-if=\"isFetching\" class=\"loading\">Loading...</div> <!-- 데이터 로딩 중일 때 로딩 표시 -->\n\n  <!-- 영화 목록 그리드 뷰 -->\n  <div class=\"grid-view\">\n    <div class=\"grid-container\">\n      <!-- 각 영화 포스터 및 제목을 표시 -->\n      <div v-for=\"movie in movies\" :key=\"movie.id\" class=\"grid-item poster-container\" @click=\"toggleLocalStorage(movie)\"> <!-- 영화 아이템 클릭 시 로컬 스토리지 추가/제거 -->\n        <img :src=\"`https://image.tmdb.org/t/p/w500${movie.poster_path}`\" :alt=\"movie.title\" class=\"poster-image\" :class=\"{'selected-poster': isItemInLocalStorage(movie)}\" /> <!-- 영화 포스터 이미지 -->\n        <p class=\"poster-title\">{{ movie.title }}</p> <!-- 영화 제목 표시 -->\n      </div>\n    </div>\n    <!-- 무한 스크롤을 위한 감시 요소 -->\n    <div ref=\"infiniteScrollTarget\" class=\"infinite-scroll-target\"></div> <!-- 무한 스크롤을 위한 타겟 요소 -->\n  </div>\n\n  <!-- 페이지 상단으로 이동 버튼 -->\n  <button v-if=\"showTopButton\" @click=\"scrollToTop\" class=\"top-button\">TOP</button> <!-- 페이지 상단으로 이동 버튼 -->\n  <FooterComponent /> <!-- 푸터 컴포넌트 -->\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted, onBeforeUnmount, watch } from 'vue';\nimport NavbarComponent from '../components/Navbar.vue';\nimport FooterComponent from '../components/Footer.vue';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport default defineComponent({\n  name: 'SearchViewComponent',\n  components: {\n    NavbarComponent,\n    FooterComponent,\n  },\n  setup() {\n    // 상태 변수들 정의\n    const movies = ref<any[]>([]); // 영화 목록 데이터\n    const genres = ref<any[]>([]); // 장르 목록 데이터\n    const selectedGenre = ref<string>(''); // 선택된 장르\n    const selectedRatingRange = ref<string>(''); // 선택된 평점 범위\n    const sortBy = ref<string>('popularity'); // 정렬 기준\n    const isFetching = ref(false); // 데이터를 로딩 중인지 여부\n    const currentPage = ref(1); // 현재 페이지 번호\n    const showTopButton = ref(false); // 상단 이동 버튼 표시 여부\n    const searchQuery = ref<string>(''); // 검색어\n    const infiniteScrollTarget = ref<HTMLElement | null>(null); // 무한 스크롤 감시 요소\n\n\n    // 영화 목록을 가져오는 함수\n    const fetchMovies = async (page = 1) => {\n      if (isFetching.value) return; // 이미 데이터를 로딩 중인 경우 함수 종료\n      isFetching.value = true; // 로딩 상태 설정\n\n      const API_KEY = process.env.VUE_APP_TMDB_API_KEY;\n\n      let url = `${BASE_URL}/discover/movie?api_key=${API_KEY}&language=ko-KR&page=${page}`; // 영화 데이터 요청 URL 생성\n\n      // 선택된 필터 적용\n      if (selectedGenre.value) {\n        url += `&with_genres=${selectedGenre.value}`; // 선택된 장르 필터 추가\n      }\n\n      if (selectedRatingRange.value) {\n        const [minRating, maxRating] = selectedRatingRange.value.split('-'); // 평점 범위 분할\n        url += `&vote_average.gte=${minRating}&vote_average.lte=${maxRating}`; // 평점 범위 필터 추가\n      }\n\n      url += `&sort_by=${sortBy.value}`; // 정렬 기준 추가\n\n      // 검색어가 있는 경우 검색 API 사용\n      if (searchQuery.value) {\n        url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=ko-KR&query=${searchQuery.value}&page=${page}`; // 검색어 기반 영화 검색 URL 생성\n      }\n\n      try {\n        // API 호출 및 데이터 처리\n        const response = await fetch(url); // 영화 데이터를 가져오기 위해 API 호출\n        const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n        movies.value = [...movies.value, ...data.results]; // 기존 영화 목록에 새 데이터 추가\n      } catch (error) {\n        console.error('Failed to fetch movies:', error); // 오류 발생 시 콘솔에 오류 메시지 출력\n      } finally {\n        isFetching.value = false; // 로딩 상태 해제\n      }\n    };\n\n    // 장르 목록을 가져오는 함수\n    const fetchGenres = async () => {\n      const API_KEY = process.env.VUE_APP_TMDB_API_KEY\n      const url = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=ko-KR`; // 장르 목록 요청 URL 생성\n      try {\n        const response = await fetch(url); // 장르 데이터를 가져오기 위해 API 호출\n        const data = await response.json(); // 응답 데이터를 JSON 형식으로 변환\n        genres.value = data.genres; // 장르 목록 설정\n      } catch (error) {\n        console.error('Failed to fetch genres:', error); // 오류 발생 시 콘솔에 오류 메시지 출력\n      }\n    };\n\n    // 필터 값이 변경될 때마다 영화 목록 초기화 후 다시 가져오기\n    watch([selectedGenre, selectedRatingRange, sortBy], () => {\n      movies.value = []; // 기존 데이터를 초기화\n      currentPage.value = 1; // 페이지 번호를 초기화\n      fetchMovies(currentPage.value); // 첫 페이지의 영화 목록 다시 가져오기\n    });\n\n    // 검색 버튼 클릭 시 동작\n    const searchMovies = () => {\n      // 검색어와 검색 횟수를 로컬 스토리지에 저장\n      let storedSearches = JSON.parse(localStorage.getItem('searchQueries') || '{}'); // 로컬 스토리지에서 기존 검색 기록 가져오기\n      if (searchQuery.value) {\n        if (storedSearches[searchQuery.value]) {\n          storedSearches[searchQuery.value]++; // 기존 검색어의 검색 횟수 증가\n        } else {\n          storedSearches[searchQuery.value] = 1; // 새로운 검색어의 검색 횟수 설정\n        }\n        localStorage.setItem('searchQueries', JSON.stringify(storedSearches)); // 업데이트된 검색 기록을 로컬 스토리지에 저장\n      }\n\n      movies.value = []; // 기존 영화 목록 초기화\n      currentPage.value = 1; // 페이지 번호 초기화\n      fetchMovies(currentPage.value); // 첫 페이지의 영화 목록 다시 가져오기\n    };\n\n    // 필터 초기화 함수\n    const resetFilters = () => {\n      selectedGenre.value = ''; // 선택된 장르 초기화\n      selectedRatingRange.value = ''; // 선택된 평점 범위 초기화\n      sortBy.value = 'popularity'; // 정렬 기준 초기화\n      searchQuery.value = ''; // 검색어 초기화\n    };\n\n    // 무한 스크롤을 처리하는 함수\n    const handleIntersect = (entries: IntersectionObserverEntry[]) => {\n      const [entry] = entries; // 첫 번째 감시 항목 가져오기\n      if (entry.isIntersecting && !isFetching.value) { // 감시 항목이 화면에 나타나고 데이터를 로딩 중이 아닌 경우\n        currentPage.value++; // 페이지 번호 증가\n        fetchMovies(currentPage.value); // 다음 페이지의 영화 목록 가져오기\n      }\n    };\n\n    // 영화 포스터 클릭 시 로컬 스토리지에 영화 정보 추가 또는 제거\n    const toggleLocalStorage = (movie: any) => {\n      let storedMovies = JSON.parse(localStorage.getItem('selectedMovies') || '[]'); // 로컬 스토리지에서 선택된 영화 목록 가져오기\n      const movieIndex = storedMovies.findIndex((storedMovie: any) => storedMovie.id === movie.id); // 영화가 이미 저장되어 있는지 확인\n\n      if (movieIndex === -1) {\n        // 아이템이 로컬 스토리지에 없으면 추가\n        storedMovies.push({ id: movie.id, name: movie.title, image: `https://image.tmdb.org/t/p/w500${movie.poster_path}` }); // 영화 정보를 저장 목록에 추가\n      } else {\n        // 아이템이 이미 로컬 스토리지에 있으면 제거\n        storedMovies.splice(movieIndex, 1); // 영화 정보를 저장 목록에서 제거\n      }\n\n      localStorage.setItem('selectedMovies', JSON.stringify(storedMovies)); // 업데이트된 영화 목록을 로컬 스토리지에 저장\n      movies.value = [...movies.value]; // 반응성 트리거\n    };\n\n    // 로컬 스토리지에 영화가 있는지 확인하는 함수\n    const isItemInLocalStorage = (movie: any) => {\n      let storedMovies = JSON.parse(localStorage.getItem('selectedMovies') || '[]'); // 로컬 스토리지에서 선택된 영화 목록 가져오기\n      return storedMovies.some((storedMovie: any) => storedMovie.id === movie.id); // 해당 영화가 저장되어 있는지 확인\n    };\n\n    // 페이지 상단으로 스크롤하는 함수\n    const scrollToTop = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' }); // 페이지 상단으로 부드럽게 스크롤\n    };\n\n    // 스크롤 이벤트 핸들러 (상단 이동 버튼 표시 여부 설정)\n    const handleScroll = () => {\n      showTopButton.value = window.scrollY > 200; // 스크롤 위치가 200px 이상일 때 상단 이동 버튼 표시\n    };\n\n    // 컴포넌트가 마운트될 때 호출되는 함수\n    onMounted(() => {\n      fetchMovies(); // 영화 목록 가져오기\n      fetchGenres(); // 장르 목록 가져오기\n\n      // 무한 스크롤을 위한 IntersectionObserver 생성 및 설정\n      const observer = new IntersectionObserver(handleIntersect, {\n        root: null, // 루트 요소는 뷰포트\n        rootMargin: '0px', // 루트 여백 없음\n        threshold: 1.0, // 감시 요소가 100% 보일 때 트리거\n      });\n\n      if (infiniteScrollTarget.value) {\n        observer.observe(infiniteScrollTarget.value); // 무한 스크롤 타겟 요소 감시 시작\n      }\n\n      // 스크롤 이벤트 리스너 추가\n      window.addEventListener('scroll', handleScroll); // 스크롤 이벤트 리스너 추가\n    });\n\n    // 컴포넌트가 언마운트될 때 호출되는 함수 (스크롤 이벤트 리스너 제거)\n    onBeforeUnmount(() => {\n      window.removeEventListener('scroll', handleScroll); // 스크롤 이벤트 리스너 제거\n    });\n\n    return {\n      movies, // 영화 목록 상태 반환\n      genres, // 장르 목록 상태 반환\n      selectedGenre, // 선택된 장르 상태 반환\n      selectedRatingRange, // 선택된 평점 범위 상태 반환\n      sortBy, // 정렬 기준 상태 반환\n      isFetching, // 로딩 상태 반환\n      searchQuery, // 검색어 상태 반환\n      resetFilters, // 필터 초기화 함수 반환\n      searchMovies, // 영화 검색 함수 반환\n      infiniteScrollTarget, // 무한 스크롤 타겟 요소 반환\n      toggleLocalStorage, // 로컬 스토리지 토글 함수 반환\n      isItemInLocalStorage, // 로컬 스토리지에 영화가 있는지 확인하는 함수 반환\n      scrollToTop, // 상단 이동 함수 반환\n      showTopButton, // 상단 이동 버튼 표시 여부 상태 반환\n    };\n  },\n});\n</script>\n\n<style scoped>\n.search-filter-container {\n  display: flex;\n  justify-content: space-between; /* 검색창과 필터 섹션을 양 끝에 배치 */\n  align-items: center; /* 검색창과 필터 섹션의 수직 가운데 정렬 */\n  margin-top: 51px; /* 상단 여백 */\n  margin-bottom: 20px; /* 하단 여백 */\n}\n\n.filter-section {\n  display: flex;\n  flex-direction: row; /* 가로 방향으로 배치 */\n  gap: 15px; /* 각 필터 사이의 간격 */\n}\n\n.search-container {\n  display: flex;\n  gap: 5px; /* 검색창과 버튼 사이의 간격 */\n  align-items: center; /* 검색창과 버튼의 수직 가운데 정렬 */\n}\n\n/* 검색 입력 필드 스타일 */\n.search-input {\n  padding: 8px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  border: 1px solid #e74c3c; /* 테두리 색상 설정 */\n  background-color: #f8d7da; /* 배경 색상 설정 */\n  transition: border-color 0.3s ease; /* 테두리 색상이 부드럽게 변경되도록 설정 */\n}\n\n/* 검색 입력 필드 포커스 스타일 */\n.search-input:focus {\n  border-color: #c0392b; /* 포커스 시 테두리 색상 변경 */\n  background-color: #fadbd8; /* 포커스 시 배경 색상 변경 */\n}\n\n/* 검색 버튼 스타일 */\n.search-button {\n  padding: 8px 15px; /* 내부 여백 */\n  border: none; /* 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  background-color: #e74c3c; /* 배경 색상 설정 */\n  color: white; /* 텍스트 색상 설정 */\n  transition: background-color 0.3s ease; /* 배경 색상이 부드럽게 변경되도록 설정 */\n}\n\n/* 검색 버튼 호버 스타일 */\n.search-button:hover {\n  background-color: #c0392b; /* 호버 시 배경 색상 변경 */\n}\n\n/* 필터 섹션의 레이블 및 셀렉트 스타일 */\nlabel {\n  display: flex;\n  flex-direction: column; /* 세로 방향으로 배치 */\n  font-weight: bold; /* 텍스트 굵게 설정 */\n  color: #c0392b; /* 텍스트 색상 설정 */\n}\n\nselect, input {\n  margin-top: 5px; /* 상단 여백 */\n  padding: 8px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  border: 1px solid #e74c3c; /* 테두리 색상 설정 */\n  background-color: #f8d7da; /* 배경 색상 설정 */\n  transition: border-color 0.3s ease; /* 테두리 색상이 부드럽게 변경되도록 설정 */\n}\n\n/* 셀렉트 요소 스타일 */\nselect {\n  appearance: none; /* 기본 드롭다운 화살표 제거 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\nselect:focus, input:focus {\n  border-color: #c0392b; /* 포커스 시 테두리 색상 변경 */\n  background-color: #fadbd8; /* 포커스 시 배경 색상 변경 */\n}\n\nselect option {\n  padding: 10px; /* 내부 여백 */\n  background-color: rgb(0, 0, 0); /* 배경 색상 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  font-size: 16px; /* 글꼴 크기 설정 */\n  color: #c0392b; /* 텍스트 색상 설정 */\n}\n\n/* 필터 초기화 버튼 스타일 */\n.reset-button {\n  padding: 10px 20px; /* 내부 여백 */\n  border: none; /* 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  background-color: #e74c3c; /* 배경 색상 설정 */\n  color: white; /* 텍스트 색상 설정 */\n  transition: background-color 0.3s ease; /* 배경 색상이 부드럽게 변경되도록 설정 */\n}\n\n/* 로딩 표시 스타일 */\n.loading {\n  position: fixed; /* 고정 위치 설정 */\n  bottom: 20px; /* 하단 위치 설정 */\n  left: 50%; /* 왼쪽에서 50% 이동 */\n  transform: translateX(-50%); /* 가로 중앙 정렬 */\n  background-color: rgba(255, 255, 255, 0.8); /* 반투명 흰색 배경 */\n  color: #000000; /* 텍스트 색상 설정 */\n  padding: 50px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  z-index: 1000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n/* 그리드 컨테이너 스타일 */\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(6, 1fr); /* 한 줄에 6개 아이템 */\n  gap: 20px; /* 각 아이템 사이의 간격 */\n  margin: 20px 0; /* 상하 여백 */\n}\n\n.poster-container {\n  position: relative; /* 포스터 위치 설정 */\n  transition: transform 0.3s; /* 크기 변경 시 부드럽게 적용 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n/* 영화 포스터 이미지 스타일 */\n.poster-image {\n  width: 100%; /* 포스터 이미지 너비 설정 */\n  border-radius: 10px; /* 모서리 둥글게 */\n  transition: transform 0.3s; /* 이미지 확대/축소 시 부드럽게 적용 */\n  border: 2px solid transparent; /* 기본 테두리는 투명하게 설정 */\n}\n\n/* 로컬 스토리지에 저장된 포스터 테두리 스타일 */\n.selected-poster {\n  border-color: #e50914; /* 로컬 스토리지에 저장된 포스터의 테두리 색상 설정 */\n}\n\n/* 영화 제목 스타일 */\n.poster-title {\n  position: absolute; /* 절대 위치 설정 */\n  bottom: 10px; /* 하단에서 10px 위치 */\n  left: 10px; /* 왼쪽에서 10px 위치 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  background: rgba(0, 0, 0, 0.5); /* 반투명 검정 배경 */\n  padding: 5px 10px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  transition: color 0.3s; /* 색상 변경 시 부드럽게 적용 */\n}\n\n/* TOP 버튼 스타일 */\n.top-button {\n  position: fixed; /* 고정 위치 설정 */\n  bottom: 80px; /* 하단에서 80px 위치 */\n  right: 20px; /* 오른쪽에서 20px 위치 */\n  background-color: #e50914; /* 배경 색상 설정 */\n  color: #ffffff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  padding: 10px 15px; /* 내부 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  z-index: 2000; /* 다른 요소 위에 표시되도록 설정 */\n}\n\n/* 반응형 스타일 (768px 이하 화면 크기) */\n@media (max-width: 768px) {\n  .search-filter-container {\n    flex-direction: column; /* 세로 방향으로 배치 */\n    align-items: flex-start; /* 시작점에 맞춰 정렬 */\n    gap: 5px; /* 각 필터 사이의 간격 */\n  }\n\n  .filter-section {\n    flex-direction: row; /* 세로 방향으로 배치 */\n    align-items: flex-start; /* 시작점에 맞춰 정렬 */\n    gap: 10px; /* 각 필터 사이의 간격 */\n  }\n\n  .grid-container {\n    grid-template-columns: repeat(2, 1fr); /* 한 줄에 2개 아이템 */\n    gap: 10px; /* 각 아이템 사이의 간격 */\n  }\n\n  .search-input, select, .search-button, .reset-button {\n    width: 100%; /* 너비 100% 설정 */\n    max-width: none; /* 최대 너비 제한 없음 */\n  }\n\n  .poster-container {\n    transition: transform 0.2s; /* 크기 변경 시 부드럽게 적용 */\n  }\n}\n\n/* 반응형 스타일 (480px 이하 화면 크기) */\n@media (max-width: 480px) {\n  .grid-container {\n    grid-template-columns: repeat(1, 1fr); /* 한 줄에 1개 아이템 */\n  }\n\n  .poster-title {\n    font-size: 0.8rem; /* 글꼴 크기 축소 */\n    padding: 3px 7px; /* 내부 여백 축소 */\n  }\n\n  .top-button {\n    bottom: 100px; /* 하단에서 100px 위치로 수정 */\n  }\n}\n</style>\n","import { render } from \"./SearchView.vue?vue&type=template&id=285d8cea&scoped=true&ts=true\"\nimport script from \"./SearchView.vue?vue&type=script&lang=ts\"\nexport * from \"./SearchView.vue?vue&type=script&lang=ts\"\n\nimport \"./SearchView.vue?vue&type=style&index=0&id=285d8cea&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-285d8cea\"]])\n\nexport default __exports__","<template>\n    <NavbarComponent />\n    <div id=\"app\">\n      <transition name=\"fade\">\n        <!-- currentComponent 변수를 사용하여 SignIn과 SignUp 컴포넌트를 전환하는 부분 -->\n        <component :is=\"currentComponent\" @switch-form=\"switchForm\" @login-success=\"navigateHome\" @signup-success=\"navigateSignin\"/>\n      </transition>\n    </div>\n    <FooterComponent />\n  </template>\n  \n  <script>\n  import SignInComponent from '../components/SignIn.vue';\n  import SignUpComponent from '../components/SignUp.vue';\n  import { defineComponent } from 'vue';\n  import NavbarComponent from '../components/Navbar.vue';\n  import FooterComponent from '../components/Footer.vue';\n\n  export default defineComponent({\n    name: 'SignViewComponent',\n    data() {\n      return {\n        currentComponent: 'SignInComponent', // 초기 컴포넌트는 SignIn으로 설정\n      };\n    },\n    components: {\n      SignInComponent,\n      SignUpComponent,\n      NavbarComponent,\n      FooterComponent,\n    },\n    methods: {\n      // SignIn과 SignUp 컴포넌트를 전환하는 메서드\n      switchForm() {\n        this.currentComponent = this.currentComponent === 'SignInComponent' ? 'SignUpComponent' : 'SignInComponent';\n      },\n      // 로그인 성공 시 홈 화면으로 이동하는 메서드\n      navigateHome() {\n        this.$router.push('/');\n      },\n      // 회원가입 성공 시 로그인 화면으로 전환하는 메서드\n      navigateSignin() {\n        this.currentComponent = 'SignInComponent';\n      }\n    },\n  });\n  </script>\n  \n  <style>\n  /* 컴포넌트 전환 시 페이드 효과 적용 */\n  .fade-enter-active, .fade-leave-active {\n    transition: opacity 0.5s;\n  }\n  .fade-enter, .fade-leave-to {\n    opacity: 0;\n  }\n\n\n  .netflix-toast {\n  background-color: #000000 !important; /* 강제로 어두운 배경 적용 */\n  border-left: 5px solid #000000 !important; /* 빨간색 테두리 강제 적용 */\n  border-radius: 6px;\n  color: rgb(181, 13, 13);\n  padding: 14px;\n  font-weight: bold;\n  font-size: 16px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.7);\n  max-width: 300px;\n  text-align: center;\n}\n\n/* Toast body 스타일 */\n.netflix-toast-body {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 아이콘 스타일 */\n.netflix-toast-body::before {\n  content: \"🎬\";\n  font-size: 20px;\n  color: #e50914;\n  margin-right: 10px;\n}\n\n/* 애니메이션 효과 */\n.netflix-toast {\n  animation: netflixFadeIn 0.4s ease;\n}\n\n/* 페이드 인 애니메이션 */\n@keyframes netflixFadeIn {\n  from {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n  </style>\n  \n  \n  ","<!-- SignIn.vue -->\n<template>\n  <div class=\"signin-form\">\n    <div class=\"signin-container\">\n      <h2 class=\"signin-title\">Login</h2> <!-- 로그인 폼 제목 출력 -->\n      <!-- 이메일이 유효하지 않을 경우 오류 메시지 출력 -->\n      <span v-if=\"!validEmail\" class=\"error\">Invalid email address</span>\n      <input type=\"email\" v-model=\"email\" class=\"signin-input\" placeholder=\"Enter your email\" /> <!-- 이메일 입력 필드 -->\n      <input type=\"password\" v-model=\"password\" class=\"signin-input\" placeholder=\"Enter your password\" /> <!-- 비밀번호 입력 필드 -->\n      <div class=\"signin-remember\">\n        <!-- 로그인 시 아이디와 비밀번호를 기억할지 여부 선택 -->\n        <input type=\"checkbox\" v-model=\"rememberMe\" /> <span>Remember me</span> <!-- rememberMe 체크박스 및 텍스트 -->\n      </div>\n      <button @click=\"handleLogin\" class=\"signin-button\">Login</button> <!-- 로그인 버튼 클릭 시 handleLogin 함수 호출 -->\n      <!-- 회원가입 폼으로 전환하는 버튼 -->\n      <button @click=\"$emit('switch-form')\" class=\"signup-button\">Go to Sign Up</button> <!-- 회원가입 폼으로 전환하는 버튼 -->\n      <!-- 로그인 실패 시 오류 메시지 출력 -->\n      <span v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</span> <!-- 오류 메시지 출력 -->\n      <button class=\"kakao-login-btn\" @click=\"loginWithKakao()\">\n      <img src=\"../assets/kakao_login_medium_wide.png\" alt=\"카카오 로그인 버튼\" />\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'; // Vue 컴포넌트 정의를 위해 import\nimport { useAuthStore } from '../store/auth'; // 인증 관련 상태 관리 스토어 import\nimport { useToast } from 'vue-toastification'; // 토스트 알림 사용을 위해 import\n\nexport default defineComponent({\n  name: 'SignInComponent', // 컴포넌트 이름 설정\n  setup() {\n    \n    const toast = useToast(); // 토스트 알림 사용 설정\n\n    // 토스트 메시지 출력 함수\n    const showToast = () => {\n      toast.success('Login Success'); // 로그인 성공 시 토스트 메시지 출력\n    };\n\n    return {\n      toast, // 토스트 알림 객체 반환\n      showToast, // 토스트 메시지 출력 함수 반환\n    };\n  },\n  data() {\n    return {\n      email: '', // 이메일 입력 값\n      password: '', // 비밀번호 입력 값\n      rememberMe: false, // 아이디와 비밀번호 기억 여부\n      errorMessage: '' // 오류 메시지\n    };\n  },\n  created() {\n    // rememberMe가 체크되어 있는 경우, 이메일과 비밀번호를 input에 미리 넣어줌\n    const rememberedUser = JSON.parse(localStorage.getItem('rememberedUser')); // 로컬 스토리지에서 rememberedUser 정보 가져오기\n    if (rememberedUser) {\n      this.email = rememberedUser.email; // 이메일 설정\n      this.password = rememberedUser.password; // 비밀번호 설정\n      this.rememberMe = true; // rememberMe 체크 상태 설정\n    }\n  },\n  mounted() {\n    if (!window.Kakao.isInitialized()) {\n      console.log('window.kakao not inited, Initializing Kakao SDK...');\n      window.Kakao.init(process.env.VUE_APP_KAKAO_JS_KEY); // 본인의 JavaScript 앱 키 입력\n      console.log('Kakao SDK initialized:', window.Kakao.isInitialized());\n    }\n  },\n  computed: {\n    // 이메일이 유효한지 검사하는 계산 속성\n    validEmail() {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // 이메일 정규 표현식\n      return emailRegex.test(this.email); // 이메일 유효성 검사 결과 반환\n    },\n  },\n  methods: {\n    // 로그인 처리 메서드\n    handleLogin() {\n      if (!this.validEmail) { // 이메일이 유효하지 않은 경우\n        this.errorMessage = 'Please enter a valid email.'; // 오류 메시지 설정\n        return; // 함수 종료\n      }\n      if (this.password.length < 6) { // 비밀번호 길이가 6자 미만인 경우\n        this.errorMessage = 'Password must be at least 6 characters.'; // 오류 메시지 설정\n        return; // 함수 종료\n      }\n\n      // 로컬스토리지에 저장된 이메일과 비밀번호 배열 중 입력 이메일과 비밀번호와 일치하는지 확인\n      let users = JSON.parse(localStorage.getItem('userCredentials')); // 로컬 스토리지에서 사용자 자격 증명 목록 가져오기\n      if (!Array.isArray(users)) { // 가져온 데이터가 배열이 아닌 경우\n        users = []; // 빈 배열로 초기화\n      }\n\n      const userExists = users.some(user => user.email === this.email && user.password === this.password); // 사용자가 존재하는지 확인\n\n      if (userExists) { // 사용자가 존재하는 경우\n        const authStore = useAuthStore(); // 전역변수로 사용할 authStore 객체 가져오기\n        authStore.login({ email: this.email, password: this.password }); // 인증 상태 설정\n        if (this.rememberMe) { // rememberMe가 체크된 경우\n          localStorage.setItem('rememberedUser', JSON.stringify({ email: this.email, password: this.password })); // 이메일과 비밀번호를 로컬 스토리지에 저장\n        } else { // rememberMe가 체크되지 않은 경우\n          localStorage.removeItem('rememberedUser'); // 로컬 스토리지에서 저장된 사용자 정보 제거\n        }\n        this.showToast(); // 토스트 메시지 출력\n        this.$emit('login-success'); // 부모 컴포넌트에 로그인 성공 이벤트 발생\n      } else { // 사용자가 존재하지 않는 경우\n        this.errorMessage = 'Invalid email or password.'; // 오류 메시지 설정\n      }\n    },\n    loginWithKakao() {\n      if (window.Kakao && window.Kakao.Auth) {\n      window.Kakao.Auth.authorize({\n        redirectUri: process.env.VUE_APP_KAKAO_REDIRECT_URI, // 리다이렉트 URI를 실제 URI로 교체\n      }).catch((err) => {\n        console.error(err);\n      });\n      } else {\n      console.error('Kakao SDK is not initialized.');\n      }\n    }\n  }\n});\n</script>\n\n<style scoped>\n/* 전체 폼 스타일 */\n.signin-form {\n  display: flex; /* 플렉스 레이아웃 사용 */\n  justify-content: center; /* 수평 가운데 정렬 */\n  align-items: center; /* 수직 가운데 정렬 */\n  min-height: 100vh; /* 최소 높이를 화면 전체로 설정 */\n  background-color: #141414; /* 배경색 설정 */\n}\n\n/* 로그인 폼 컨테이너 스타일 */\n.signin-container {\n  width: 300px; /* 너비 설정 */\n  padding: 40px; /* 내부 여백 설정 */\n  background-color: #000; /* 배경색 설정 */\n  border-radius: 8px; /* 모서리 둥글게 설정 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5); /* 그림자 설정 */\n  color: #fff; /* 텍스트 색상 설정 */\n}\n\n/* 제목 스타일 */\n.signin-title {\n  font-size: 24px; /* 글꼴 크기 설정 */\n  font-weight: bold; /* 굵은 글꼴 설정 */\n  margin-bottom: 20px; /* 하단 여백 설정 */\n  text-align: center; /* 텍스트 가운데 정렬 */\n}\n\n/* 입력 필드 스타일 */\n.signin-input {\n  width: 100%; /* 너비 100% 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  margin: 10px 0; /* 상하 여백 설정 */\n  border: 1px solid #333; /* 테두리 설정 */\n  border-radius: 4px; /* 모서리 둥글게 설정 */\n  background-color: #333; /* 배경색 설정 */\n  color: #fff; /* 텍스트 색상 설정 */\n}\n\n/* Remember me 스타일 */\n.signin-remember {\n  display: flex; /* 플렉스 레이아웃 사용 */\n  align-items: center; /* 수직 가운데 정렬 */\n  margin-bottom: 20px; /* 하단 여백 설정 */\n  font-size: 14px; /* 글꼴 크기 설정 */\n}\n\n/* 로그인 버튼 스타일 */\n.signin-button {\n  width: 100%; /* 너비 100% 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  background-color: #e50914; /* 배경색 설정 */\n  color: #fff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 4px; /* 모서리 둥글게 설정 */\n  font-size: 16px; /* 글꼴 크기 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  margin-bottom: 10px; /* 하단 여백 설정 */\n}\n\n.signin-button:hover {\n  background-color: #f6121d; /* 호버 시 배경색 변경 */\n}\n\n/* 회원가입 버튼 스타일 */\n.signup-button {\n  width: 100%; /* 너비 100% 설정 */\n  padding: 10px; /* 내부 여백 설정 */\n  background-color: #333; /* 배경색 설정 */\n  color: #fff; /* 텍스트 색상 설정 */\n  border: none; /* 테두리 제거 */\n  border-radius: 4px; /* 모서리 둥글게 설정 */\n  font-size: 16px; /* 글꼴 크기 설정 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n}\n\n.signup-button:hover {\n  background-color: #444; /* 호버 시 배경색 변경 */\n}\n\n.kakao-login-btn{\n  width: 100%; /* 너비 100% 설정 */\n  height: 100%; /* 높이 100% 설정 */\n  display: flex; /* 플렉스 레이아웃 사용 */\n  background-color: #000;\n  justify-content: center; /* 수평 가운데 정렬 */\n  align-items: center; /* 수직 가운데 정렬 */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\n  margin-top: 10px; /* 상단 여백 설정 */\n  border-radius: 4px;\n  border: 1px solid #000; /* 테두리 색상 빨강 설정 */\n}\n\n/* 오류 메시지 스타일 */\n.error {\n  color: #e50914; /* 텍스트 색상 빨강 설정 */\n  font-size: 14px; /* 글꼴 크기 설정 */\n  margin-top: 10px; /* 상단 여백 설정 */\n  display: block; /* 블록 요소로 설정 */\n}\n</style>\n","import { render } from \"./SignIn.vue?vue&type=template&id=156729b8&scoped=true\"\nimport script from \"./SignIn.vue?vue&type=script&lang=js\"\nexport * from \"./SignIn.vue?vue&type=script&lang=js\"\n\nimport \"./SignIn.vue?vue&type=style&index=0&id=156729b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-156729b8\"]])\n\nexport default __exports__","<!-- SignUp.vue -->\n<template>\n  <div class=\"signup-form\">\n    <div class=\"signup-container\">\n      <h2 class=\"signup-title\">Sign Up</h2>\n      <input type=\"email\" v-model=\"email\" class=\"signup-input\" placeholder=\"Enter your email\" />\n      <!-- 이메일이 유효하지 않을 경우 오류 메시지 출력 -->\n      <span v-if=\"!validEmail\" class=\"error\">Invalid email address</span>\n      <input type=\"password\" v-model=\"password\" class=\"signup-input\" placeholder=\"Enter your password\" />\n      <input type=\"password\" v-model=\"confirmPassword\" class=\"signup-input\" placeholder=\"Confirm your password\" />\n      <!-- 비밀번호가 일치하지 않을 경우 오류 메시지 출력 -->\n      <span v-if=\"!passwordsMatch\" class=\"error\">Passwords do not match</span>\n      <div class=\"signup-terms\">\n        <!-- 약관 동의 체크박스 -->\n        <input type=\"checkbox\" v-model=\"agreeToTerms\" /> <span>I agree to the terms and conditions</span>\n      </div>\n      <button @click=\"handleSignup\" class=\"signup-button\">Sign Up</button>\n      <!-- 로그인 폼으로 전환하는 버튼 -->\n      <button @click=\"$emit('switch-form')\" class=\"signin-button\">Go to Sign In</button>\n      <!-- 회원가입 실패 시 오류 메시지 출력 -->\n      <span v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'SignUpComponent',\n  data() {\n    return {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      agreeToTerms: false,\n      errorMessage: ''\n    };\n  },\n  computed: {\n    // 이메일이 유효한지 검사하는 계산 속성\n    validEmail() {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(this.email);\n    },\n    // 비밀번호와 확인 비밀번호가 일치하는지 검사하는 계산 속성\n    passwordsMatch() {\n      return this.password === this.confirmPassword;\n    },\n  },\n  methods: {\n    // 회원가입 처리 메서드\n    handleSignup() {\n      if (!this.validEmail) {\n        this.errorMessage = 'Please enter a valid email.';\n        return;\n      }\n      if (this.password.length < 6) {\n        this.errorMessage = 'Password must be at least 6 characters.';\n        return;\n      }\n      if (!this.passwordsMatch) {\n        this.errorMessage = 'Passwords do not match.';\n        return;\n      }\n      if (!this.agreeToTerms) {\n        this.errorMessage = 'You must agree to the terms and conditions.';\n        return;\n      }\n\n      // 회원가입 성공 시 이메일과 비밀번호를 객체로 묶어서 localStorage의 배열에 저장\n      const userCredentials = {\n        email: this.email,\n        password: this.password\n      };\n      let users = JSON.parse(localStorage.getItem('userCredentials'));\n      if (!Array.isArray(users)) {\n        users = [];\n      }\n\n      // 이메일 중복 체크\n      if (users.some(user => user.email === this.email)) {\n        this.errorMessage = 'Email is already registered.';\n        return;\n      }\n\n      users.push(userCredentials);\n      localStorage.setItem('userCredentials', JSON.stringify(users));\n\n      // 회원가입 성공 가정 및 부모 컴포넌트로 이벤트 전파\n      this.$emit('signup-success');\n    },\n  },\n});\n</script>\n\n<style scoped>\n/* 전체 폼 스타일 */\n.signup-form {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #141414;\n}\n\n/* 회원가입 폼 컨테이너 스타일 */\n.signup-container {\n  width: 300px;\n  padding: 40px;\n  background-color: #000;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n/* 제목 스타일 */\n.signup-title {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n/* 입력 필드 스타일 */\n.signup-input {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #333;\n  border-radius: 4px;\n  background-color: #333;\n  color: #fff;\n}\n\n/* 약관 동의 스타일 */\n.signup-terms {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  font-size: 14px;\n}\n\n/* 회원가입 버튼 스타일 */\n.signup-button {\n  width: 100%;\n  padding: 10px;\n  background-color: #e50914;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  margin-bottom: 10px;\n}\n\n.signup-button:hover {\n  background-color: #f6121d;\n}\n\n/* 로그인 버튼 스타일 */\n.signin-button {\n  width: 100%;\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\n.signin-button:hover {\n  background-color: #444;\n}\n\n/* 오류 메시지 스타일 */\n.error {\n  color: #e50914;\n  font-size: 14px;\n  margin-top: 10px;\n  display: block;\n}\n</style>\n","import { render } from \"./SignUp.vue?vue&type=template&id=162ea04e&scoped=true\"\nimport script from \"./SignUp.vue?vue&type=script&lang=js\"\nexport * from \"./SignUp.vue?vue&type=script&lang=js\"\n\nimport \"./SignUp.vue?vue&type=style&index=0&id=162ea04e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-162ea04e\"]])\n\nexport default __exports__","import { render } from \"./SignView.vue?vue&type=template&id=64beccfd\"\nimport script from \"./SignView.vue?vue&type=script&lang=js\"\nexport * from \"./SignView.vue?vue&type=script&lang=js\"\n\nimport \"./SignView.vue?vue&type=style&index=0&id=64beccfd&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"congratulations\">\n      <div class=\"box\">\n        <div v-if=\"userInfo\">\n        <h1>{{ userInfo.kakao_account.profile.nickname }}님 회원가입을 축하합니다!</h1>\n        <p>넷플릭스 클론사이트에 오신 것을 환영합니다.</p>\n          <div>\n            <img\n              v-if=\"userInfo.kakao_account.profile.profile_image_url\"\n              :src=\"userInfo.kakao_account.profile.profile_image_url\"\n              alt=\"프로필 이미지\"\n              style=\"width: 100px; height: 100px; border-radius: 50%;\"\n            />\n            <p v-else>프로필 이미지가 없습니다.</p>\n          </div>\n        </div>\n        <router-link to=\"/\">서비스 이용하기</router-link>\n      </div>\n    </div>\n    <FooterComponent />\n  </template>\n  \n  <script>\nimport FooterComponent from '../components/Footer.vue';\nimport { useAuthStore } from '../store/auth';\n\n  export default {\n    name: \"SignCongratulationsViewComponent\",\n    components: {\n      FooterComponent,\n    },\n\n    data() {\n      return {\n        userInfo: null, // 사용자 정보 저장\n      };\n    },\n    mounted() {\n      this.getKaKaoOauthCode();\n    },\n    methods: {\n      async getKaKaoOauthCode() {\n        const params = new URLSearchParams(window.location.search);\n        const code = params.get(\"code\");\n  \n        if (code) {\n          console.log(\"Authorization Code:\", code);\n          const accessToken = await this.getAccessToken(code); // Access Token 요청\n          const userInfo = await this.getUserInfo(accessToken); // 사용자 정보 요청\n          this.userInfo = userInfo; // 사용자 정보를 Vue data에 저장\n\n          const existingCredentials = JSON.parse(localStorage.getItem('userCredentials')) || [];\n          const userExists = existingCredentials.some(cred => cred.kakao_account_id === userInfo.id);\n\n          if (userExists) // 이미 가입한 사용자인 경우\n          {\n            const authStore = useAuthStore(); // 전역변수로 사용할 authStore 객체 가져오기\n            authStore.login({ access_token: accessToken, userInfo : this.userInfo }); // access token과 사용자 정보를 저장\n            this.$router.push('/');\n          } else // 신규 사용자인 경우\n          {\n            const authStore = useAuthStore(); // 전역변수로 사용할 authStore 객체 가져오기\n            authStore.login({ access_token: accessToken, userInfo : this.userInfo }); // access token과 사용자 정보를 저장\n            // 회원가입 성공 시 이메일과 비밀번호를 객체로 묶어서 localStorage의 배열에 저장\n            const userCredentials = {\n            kakao_account_id: userInfo.id\n            };\n            existingCredentials.push(userCredentials);\n            localStorage.setItem('userCredentials', JSON.stringify(existingCredentials));\n          }\n        } else {\n          console.warn(\"No Authorization Code found in URL.\");\n        }\n      },\n      async getAccessToken(code) {\n        console.log(\"Requesting Access Token...\");\n        const appKey = process.env.VUE_APP_KAKAO_REST_API_KEY; // REST API 키\n        const redirectUri = process.env.VUE_APP_KAKAO_REDIRECT_URI; // 리다이렉트 URI\n  \n        try {\n          const response = await fetch(\"https://kauth.kakao.com/oauth/token\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n            },\n            body: new URLSearchParams({\n              grant_type: \"authorization_code\",\n              client_id: appKey,\n              redirect_uri: redirectUri,\n              code: code,\n            }),\n          });\n  \n          const data = await response.json();\n          if (data.access_token) {\n            console.log(\"Access Token:\", data.access_token);\n            return data.access_token;            \n          } else {\n            console.error(\"Failed to fetch access token:\", data);\n          }\n        } catch (error) {\n          console.error(\"Error fetching access token:\", error);\n        }\n      },\n      async getUserInfo(accessToken) {\n        console.log(\"Requesting User Info...\");\n        try {\n          const response = await fetch(\"https://kapi.kakao.com/v2/user/me\", {\n            method: \"GET\",\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n            },\n          });\n  \n          const userInfo = await response.json();\n          console.log(\"User Info:\", userInfo);\n          return userInfo;\n          \n        } catch (error) {\n          console.error(\"Error fetching user info:\", error);\n        }\n      },\n\n    },\n  };\n  \n  </script>\n  \n  <style scoped>\n  .congratulations {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    margin-top: 50px;\n  }\n  \n  .box {\n    border: 2px solid #e50914;\n    padding: 20px;\n    display: inline-block;\n  }\n  \n  h1 {\n    color: #e50914;\n  }\n  \n  p {\n    color: #e50914;\n    font-size: 18px;\n    margin: 20px 0;\n  }\n  \n  a {\n    color: #e50914;\n    text-decoration: none;\n    font-weight: bold;\n  }\n  </style>\n  ","import { render } from \"./SingCongraturation.vue?vue&type=template&id=23ac0219&scoped=true\"\nimport script from \"./SingCongraturation.vue?vue&type=script&lang=js\"\nexport * from \"./SingCongraturation.vue?vue&type=script&lang=js\"\n\nimport \"./SingCongraturation.vue?vue&type=style&index=0&id=23ac0219&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-23ac0219\"]])\n\nexport default __exports__","<template>\n    <div class=\"not-found\">\n      <h1>404 - Page Not Found</h1>\n      <p>존재하지 않는 페이지 입니다.</p>\n    <router-link to=\"/\" style=\"color: #f40612;\">Go Back Home</router-link>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'NotFoundViewComponent',\n  };\n  </script>\n  \n  <style scoped>\n  .not-found {\n    font-size: 1.5rem;\n    color: #f40612;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100vh;\n\n  }\n  </style>\n  ","import { render } from \"./NotFoundView.vue?vue&type=template&id=6b9b90e3&scoped=true\"\nimport script from \"./NotFoundView.vue?vue&type=script&lang=js\"\nexport * from \"./NotFoundView.vue?vue&type=script&lang=js\"\n\nimport \"./NotFoundView.vue?vue&type=style&index=0&id=6b9b90e3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6b9b90e3\"]])\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport PopularView from '../views/PopularView.vue';\nimport TableView from '../views/TableView.vue';\nimport WishlistView from '../views/WishlistView.vue';\nimport SearchView from '../views/SearchView.vue';\nimport SignView from '../views/SignView.vue';\nimport SignCongratulationsViewComponent from '../views/SingCongraturation.vue';\nimport NotFoundViewComponent from '../views/NotFoundView.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView,\n  },\n  {\n    path: '/popular',\n    name: 'popular',\n    component: PopularView,\n  },\n  {\n    path: '/popular/table',\n    name: 'table',\n    component: TableView,\n  },\n  {\n    path: '/wishlist',\n    name: 'wishlist',\n    component: WishlistView\n  },\n  {\n    path: '/search',\n    name: 'search',\n    component: SearchView,\n  },\n  {\n    path: '/sign',\n    name: 'sign',\n    component: SignView,\n  },\n  {\n    path: '/sign/congratulation',\n    name: 'SignCongratulationsViewComponent',\n    component: SignCongratulationsViewComponent\n  },\n  { path: '/:pathMatch(.*)*',\n    name: 'NotFoundViewComponent',\n    component: NotFoundViewComponent\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.VUE_APP_BASE_URL), // History 모드로 변경\n  routes,\n});\n\nexport default router;\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport { createPinia } from 'pinia'\nimport Toast from 'vue-toastification'\nimport 'vue-toastification/dist/index.css'; // 기본 스타일 가져오기\n\nconst options = {\n    position: 'top-center',  // 중앙 상단에 표시하여 주목도 향상\n    timeout: 3000,\n    closeOnClick: true,\n    toastClassName: \"netflix-toast\",\n    bodyClassName: \"netflix-toast-body\",\n  };\n\nconst pinia = createPinia() // 전역 상태 관리 라이브러리인 Pinia를 생성합니다.\ncreateApp(App).use(router).use(pinia).use(Toast,options).mount('#app')\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknetflix_clone\"] = self[\"webpackChunknetflix_clone\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9282); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","id","class","_hoisted_2","key","render","_ctx","_cache","$props","$setup","$data","$options","_component_router_view","_resolveComponent","_openBlock","_createElementBlock","_createElementVNode","_createVNode","isPopularTableRoute","_createCommentVNode","defineComponent","name","components","setup","route","useRoute","computed","path","__exports__","_hoisted_3","_hoisted_4","_component_NavbarComponent","_component_PosterComponent","_component_FooterComponent","_Fragment","isFetching","_renderList","movieSections","movies","index","_toDisplayString","title","data","item","_createBlock","movie","onToggleMovieDetails","toggleMovieDetails","selectedMovie","onCloseMovieDetails","closeMovieDetails","onClick","args","handlePosterClick","src","image","alt","_normalizeClass","isItemInLocalStorage","showDetails","_withModifiers","_createTextVNode","description","rating","genre","props","type","Object","required","ref","toggleLocalStorage","value","storedMovies","JSON","parse","localStorage","getItem","movieIndex","findIndex","storedMovie","push","splice","setItem","stringify","some","focusable","role","xmlns","viewBox","style","_hoisted_5","_hoisted_6","_component_router_link","to","default","_withCtx","fill","d","_","isAuthenticated","userInfo","logout","useAuthStore","defineStore","state","user","actions","login","userData","this","removeItem","authStore","storeToRefs","email","properties","nickname","BASE_URL","PosterComponent","NavbarComponent","FooterComponent","showTopButton","router","useRouter","API_KEY","process","console","error","fetchMoviesFromAPI","async","endpoint","url","response","fetch","json","results","slice","map","poster_path","overview","vote_average","genre_ids","join","fetchAllMovies","Promise","all","handleScroll","window","scrollY","scrollToTop","scrollTo","top","behavior","goToWishlistView","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_hoisted_7","goToTableView","isTableView","popularItems","$event","currentPage","infiniteScrollTarget","fetchPopularMovies","page","log","ok","Error","handleIntersect","entries","entry","isIntersecting","storedItems","itemIndex","storedItem","observer","IntersectionObserver","root","rootMargin","threshold","observe","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","goToPopularView","paginatedItems","goToPage","disabled","visiblePages","active","totalPages","items","Array","itemsPerPage","Math","ceil","length","start","end","pages","maxVisiblePages","total","startPage","max","floor","endPage","i","initialLoad","previousPage","nextPage","bottomOfWindow","innerHeight","document","documentElement","scrollHeight","_withDirectives","searchQuery","placeholder","_vModelText","searchMovies","selectedGenre","genres","_vModelSelect","selectedRatingRange","_createStaticVNode","sortBy","resetFilters","fetchMovies","minRating","maxRating","split","fetchGenres","watch","storedSearches","_Transition","_resolveDynamicComponent","currentComponent","onSwitchForm","switchForm","onLoginSuccess","navigateHome","onSignupSuccess","navigateSignin","validEmail","password","rememberMe","handleLogin","$emit","errorMessage","loginWithKakao","_imports_0","toast","useToast","showToast","success","created","rememberedUser","mounted","Kakao","isInitialized","init","emailRegex","test","methods","users","isArray","userExists","Auth","authorize","redirectUri","catch","err","confirmPassword","passwordsMatch","agreeToTerms","handleSignup","userCredentials","SignInComponent","SignUpComponent","$router","kakao_account","profile","profile_image_url","getKaKaoOauthCode","params","URLSearchParams","location","search","code","get","accessToken","getAccessToken","getUserInfo","existingCredentials","cred","kakao_account_id","access_token","warn","appKey","method","headers","body","grant_type","client_id","redirect_uri","Authorization","routes","component","HomeView","PopularView","TableView","WishlistView","SearchView","SignView","SignCongratulationsViewComponent","NotFoundViewComponent","createRouter","history","createWebHistory","options","position","timeout","closeOnClick","toastClassName","bodyClassName","pinia","createPinia","createApp","App","use","Toast","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}